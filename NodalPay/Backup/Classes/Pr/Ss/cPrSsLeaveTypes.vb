' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:51
'
'
Public Class cPrSsLeaveTypes
'
Inherits cPrSsLeaveTypesDbTier
'
Private mCode As String
Private mDescriptionL As String
Private mDescriptionS As String
Private mIsActive As String
Private mIsPaidPeriod As String
Private mIsPaidAnnual As String
Private mUnitOfMeasure As String
Private mAnnualMax As Integer
Private mCarryOverMax As Integer
Public Property Code() As String
    Get
       Return mCode
    End Get
    Set(ByVal Value As String)
       mCode = Value
    End Set
End Property
Public Property DescriptionL() As String
    Get
       Return mDescriptionL
    End Get
    Set(ByVal Value As String)
       mDescriptionL = Value
    End Set
End Property
Public Property DescriptionS() As String
    Get
       Return mDescriptionS
    End Get
    Set(ByVal Value As String)
       mDescriptionS = Value
    End Set
End Property
Public Property IsActive() As String
    Get
       Return mIsActive
    End Get
    Set(ByVal Value As String)
       mIsActive = Value
    End Set
End Property
Public Property IsPaidPeriod() As String
    Get
       Return mIsPaidPeriod
    End Get
    Set(ByVal Value As String)
       mIsPaidPeriod = Value
    End Set
End Property
Public Property IsPaidAnnual() As String
    Get
       Return mIsPaidAnnual
    End Get
    Set(ByVal Value As String)
       mIsPaidAnnual = Value
    End Set
End Property
Public Property UnitOfMeasure() As String
    Get
       Return mUnitOfMeasure
    End Get
    Set(ByVal Value As String)
       mUnitOfMeasure = Value
    End Set
End Property
Public Property AnnualMax() As Integer
    Get
       Return mAnnualMax
    End Get
    Set(ByVal Value As Integer)
       mAnnualMax = Value
    End Set
End Property
Public Property CarryOverMax() As Integer
    Get
       Return mCarryOverMax
    End Get
    Set(ByVal Value As Integer)
       mCarryOverMax = Value
    End Set
End Property
Public Sub New()
End Sub
Public Sub New(ByVal Dr as DataRow)
    If Not Dr Is Nothing Then
         LoadDataRow(Dr)
    End If
End Sub
Public Sub New(ByVal tCode As String)
     IF tCode <> "" Then
        Init(tCode)
      End If
End Sub
Private Sub Init(ByVal tCode As String)
   Try
        Dim ds as DataSet
        ds = MyBase.GetByPK(tCode)
        If CheckDataSet(ds) Then
           LoadDataRow(ds.Tables(0).Rows(0))
        End If
        Catch ex As System.Exception
   End Try
End Sub
Private Sub LoadDataRow(ByVal dr As DataRow)
     mCode = DbNullToString(dr.item(0))
     mDescriptionL = DbNullToString(dr.item(1))
     mDescriptionS = DbNullToString(dr.item(2))
     mIsActive = DbNullToString(dr.item(3))
     mIsPaidPeriod = DbNullToString(dr.item(4))
     mIsPaidAnnual = DbNullToString(dr.item(5))
     mUnitOfMeasure = DbNullToString(dr.item(6))
     mAnnualMax = DbNullToInt(dr.item(7))
     mCarryOverMax = DbNullToInt(dr.item(8))
End Sub
Public Shadows Function Delete(ByVal tCode As String) As Boolean
Try
  Dim Counter As Integer
  Dim TableCount As Integer
  Dim RecordCount As Integer
  Dim TransStr As String = ""
  Dim ds As DataSet
  ds = MyBase.CheckDeleteRecords(tCode)
  If CheckDataSet(ds) Then
     For Counter = 0 To ds.Tables.Count - 1
        TableCount = TableCount + 1
        RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
        TransStr = TransStr  &  vbCrLf & "Table " & TableCount & "  Records " & RecordCount
     Next Counter
     If RecordCount = 0 Then
         Return MyBase.Delete(tCode)
     Else
        MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
     End If
  Else
     MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
     Return False
  End If
Catch ex As System.Exception
End Try
End Function
'
Public Shadows Function Save() As Boolean
    Try
        Return MyBase.Save(Me)
    Catch ex As System.Exception
        Return False
    End Try
    End Function
    Public Overrides Function ToString() As String
        Return mCode & " - " & Me.mDescriptionL
    End Function
End Class
