' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 24/06/2008 11:22:05
'
'
Public Class cPrSsLimits
    '
    Inherits cPrSsLimitsDbTier
    '
    Private mId As Integer
    Private mCola As Double
    Private mInsurableWk As Double
    Private mInsurableMth As Double
    Private mInsurableAnnual As Double
    Private mDedContrAnnual As Double
    Private mIndAnnual As Double
    Private mEffectiveDate As Date
    Private mUnemAnnual As Double
    Private mGesiD As Double
    Private mGesiC As Double

    Public Property Id() As Integer
        Get
            Return mId
        End Get
        Set(ByVal Value As Integer)
            mId = Value
        End Set
    End Property
    Public Property Cola() As Double
        Get
            Return mCola
        End Get
        Set(ByVal Value As Double)
            mCola = Value
        End Set
    End Property
    Public Property InsurableWk() As Double
        Get
            Return mInsurableWk
        End Get
        Set(ByVal Value As Double)
            mInsurableWk = Value
        End Set
    End Property
    Public Property InsurableMth() As Double
        Get
            Return mInsurableMth
        End Get
        Set(ByVal Value As Double)
            mInsurableMth = Value
        End Set
    End Property
    Public Property InsurableAnnual() As Double
        Get
            Return mInsurableAnnual
        End Get
        Set(ByVal Value As Double)
            mInsurableAnnual = Value
        End Set
    End Property
    Public Property DedContrAnnual() As Double
        Get
            Return mDedContrAnnual
        End Get
        Set(ByVal Value As Double)
            mDedContrAnnual = Value
        End Set
    End Property
    Public Property IndAnnual() As Double
        Get
            Return mIndAnnual
        End Get
        Set(ByVal Value As Double)
            mIndAnnual = Value
        End Set
    End Property
    Public Property EffectiveDate() As Date
        Get
            Return mEffectiveDate
        End Get
        Set(ByVal Value As Date)
            mEffectiveDate = Value
        End Set
    End Property
    Public Property UnemAnnual() As Double
        Get
            Return mUnemAnnual
        End Get
        Set(ByVal Value As Double)
            mUnemAnnual = Value
        End Set
    End Property
    Public Property GesiD() As Double
        Get
            Return mGesiD
        End Get
        Set(ByVal value As Double)
            mGesiD = value
        End Set
    End Property
    Public Property GesiC() As Double
        Get
            Return mGesiC
        End Get
        Set(ByVal value As Double)
            mGesiC = value
        End Set
    End Property
    Public Sub New()

    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tId As Integer)
        If tId <> 0 Then
            Init(tId)
        End If
    End Sub
    Private Sub Init(ByVal tId As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tId)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mId = DbNullToInt(dr.item(0))
        mCola = DbNullToDouble(dr.item(1))
        mInsurableWk = DbNullToDouble(dr.item(2))
        mInsurableMth = DbNullToDouble(dr.item(3))
        mInsurableAnnual = DbNullToDouble(dr.item(4))
        mDedContrAnnual = DbNullToDouble(dr.item(5))
        mIndAnnual = DbNullToDouble(dr.item(6))
        mUnemAnnual = DbNullToDouble(dr.Item(7))
        mEffectiveDate = DbNullToDate(dr.Item(8))
        mGesiD = DbNullToDouble(dr.Item(9))
        mGesiC = DbNullToDouble(dr.Item(10))
    End Sub
    Public Shadows Function Delete(ByVal tId As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tId)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tId)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                Return MyBase.Delete(tId)
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
