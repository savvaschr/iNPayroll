' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:51
'
'
Public Class cPrSsLeaveTypesDbTier
'
Inherits cDataTier
'
Protected Function GetByPK(ByVal tCode As String) as DataSet
Dim Str as String
Str = " SELECT" & _
        " Lve_Code," & _
        " Lve_DescriptionL," & _
        " Lve_DescriptionS," & _
        " Lve_IsActive," & _
        " Lve_IsPaidPeriod," & _
        " Lve_IsPaidAnnual," & _
        " Lve_UnitOfMeasure," & _
        " Lve_AnnualMax," & _
        " Lve_CarryOverMax" & _
    "  FROM PrSsLeaveTypes" & _
    "  WHERE Lve_Code = '" & tCode & "'"
Return MyBase.GetData(Str)
End Function
Protected Function Save(ByVal _cPrSsLeaveTypes AS cPrSsLeaveTypes) As Boolean
Dim SpParams As New ArrayList
Dim SpNames As New ArrayList
Dim Flag As Boolean = False
With _cPrSsLeaveTypes
   SpParams.Add(.Code)                                              '(0)
   SpNames.Add("Lve_Code")                                          '(0)
   SpParams.Add(.DescriptionL)                                      '(1)
   SpNames.Add("Lve_DescriptionL")                                  '(1)
   SpParams.Add(.DescriptionS)                                      '(2)
   SpNames.Add("Lve_DescriptionS")                                  '(2)
   SpParams.Add(.IsActive)                                          '(3)
   SpNames.Add("Lve_IsActive")                                      '(3)
   SpParams.Add(.IsPaidPeriod)                                      '(4)
   SpNames.Add("Lve_IsPaidPeriod")                                  '(4)
   SpParams.Add(.IsPaidAnnual)                                      '(5)
   SpNames.Add("Lve_IsPaidAnnual")                                  '(5)
   SpParams.Add(.UnitOfMeasure)                                     '(6)
   SpNames.Add("Lve_UnitOfMeasure")                                 '(6)
   SpParams.Add(.AnnualMax)                                         '(7)
   SpNames.Add("Lve_AnnualMax")                                     '(7)
   SpParams.Add(.CarryOverMax)                                      '(8)
   SpNames.Add("Lve_CarryOverMax")                                  '(8)
End With
If Me.StoredProcedure("AG_PrSsLeaveTypes_Save_Update",SpParams,SpNames) Then
  Return True
Else
  Return False
End if
End Function
Protected Function Delete(ByVal tCode As String) as Boolean
Dim Str as String
Dim Flag As Boolean = True
Dim Exx As New System.Exception
   Try
         BeginTransaction()
         Str = " DELETE FROM PrSsLeaveTypes" & _
            " WHERE Lve_Code = '" & tCode & "'"
         If MyBase.ExecuteNonQuery(Str) = -1 Then
                 Throw Exx
         End If
         CommitTransaction()
   Catch ex as Exception
            Rollback()
            Utils.ShowException(ex)
            Flag = False
   End Try
Return Flag
End Function
Protected Function CheckDeleteRecords(ByVal tCode As String) as DataSet
 Dim ds As DataSet
'    Generation Note : 13/02/2008 09:42:51 :- No Foriegn Key Constraints where found
     ds = nothing
     Return ds
End Function
End Class
