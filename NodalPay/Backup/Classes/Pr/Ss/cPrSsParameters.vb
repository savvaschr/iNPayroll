' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:51
'
'
Public Class cPrSsParameters
    '
    Inherits cPrSsParametersDbTier
    '
    Private mId As Integer
    Private mSection As String
    Private mItem As String
    Private mValue1 As String
    Private mDescription As String
    Private mSystem1 As String
    Private mType1 As String
    Public Property Id() As Integer
        Get
            Return mId
        End Get
        Set(ByVal Value As Integer)
            mId = Value
        End Set
    End Property
    Public Property Section() As String
        Get
            Return mSection
        End Get
        Set(ByVal Value As String)
            mSection = Value
        End Set
    End Property
    Public Property Item() As String
        Get
            Return mItem
        End Get
        Set(ByVal Value As String)
            mItem = Value
        End Set
    End Property
    Public Property Value1() As String
        Get
            Return mValue1
        End Get
        Set(ByVal Value As String)
            mValue1 = Value
        End Set
    End Property
    Public Property Description() As String
        Get
            Return mDescription
        End Get
        Set(ByVal Value As String)
            mDescription = Value
        End Set
    End Property
    Public Property System1() As String
        Get
            Return mSystem1
        End Get
        Set(ByVal Value As String)
            mSystem1 = Value
        End Set
    End Property
    Public Property Type1() As String
        Get
            Return mType1
        End Get
        Set(ByVal Value As String)
            mType1 = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tId As Integer)
        If tId <> 0 Then
            Init(tId)
        End If
    End Sub
    Private Sub Init(ByVal tId As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tId)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Public Sub New(ByVal tSection As String, ByVal tItem As String)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tSection, tItem)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mId = DbNullToInt(dr.Item(0))
        mSection = DbNullToString(dr.Item(1))
        mItem = DbNullToString(dr.Item(2))
        mValue1 = DbNullToString(dr.Item(3))
        mDescription = DbNullToString(dr.Item(4))
        mSystem1 = DbNullToString(dr.Item(5))
        mType1 = DbNullToString(dr.Item(6))
    End Sub
    Public Shadows Function Delete(ByVal tId As Integer) As Boolean
        Dim F As Boolean = True
        Try

            Dim TransStr As String = ""
            Dim ds As DataSet

            ds = MyBase.CheckDeleteRecords(tId)

            f = MyBase.Delete(tId)
            MsgBox("Record Deleted")
            Return F

        Catch ex As System.Exception
            MsgBox("Failed to Delete Record")
            f = False
        End Try
        Return f
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
