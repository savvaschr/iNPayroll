' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:45
'
'
Public Class cAaSsUsers
    '
    Inherits cAaSsUsersDbTier
    '
    Private mId As Integer
    Private mUserName As String
    Private mFullName As String
    Private mCreatedOn As Date
    Private mIsEnabled As String
    Private mIsSA As String
    Private mMyRole As Integer
    Public Property Id() As Integer
        Get
            Return mId
        End Get
        Set(ByVal Value As Integer)
            mId = Value
        End Set
    End Property
    Public Property UserName() As String
        Get
            Return mUserName
        End Get
        Set(ByVal Value As String)
            mUserName = Value
        End Set
    End Property
    Public Property FullName() As String
        Get
            Return mFullName
        End Get
        Set(ByVal Value As String)
            mFullName = Value
        End Set
    End Property
    Public Property CreatedOn() As Date
        Get
            Return mCreatedOn
        End Get
        Set(ByVal Value As Date)
            mCreatedOn = Value
        End Set
    End Property
    Public Property IsEnabled() As String
        Get
            Return mIsEnabled
        End Get
        Set(ByVal Value As String)
            mIsEnabled = Value
        End Set
    End Property
    Public Property IsSA() As String
        Get
            Return mIsSA
        End Get
        Set(ByVal Value As String)
            mIsSA = Value
        End Set
    End Property
    Public Property MyRole() As Integer
        Get
            Return mMyRole
        End Get
        Set(ByVal Value As Integer)
            mMyRole = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tId As Integer)
        If tId <> 0 Then
            Init(tId)
        End If
    End Sub
    Private Sub Init(ByVal tId As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tId)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mId = DbNullToInt(dr.Item(0))
        mUserName = DbNullToString(dr.Item(1))
        mFullName = DbNullToString(dr.Item(2))
        mCreatedOn = DbNullToDate(dr.Item(3))
        mIsEnabled = DbNullToString(dr.Item(4))
        mIsSA = DbNullToString(dr.Item(5))
        mMyRole = DbNullToInt(dr.Item(6))
    End Sub
    Public Shadows Function Delete(ByVal tId As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tId)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tId)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
    Public Overrides Function ToString() As String
        Return Me.UserName
    End Function
End Class
