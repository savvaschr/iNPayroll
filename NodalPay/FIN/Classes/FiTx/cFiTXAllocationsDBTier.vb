' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 02/11/07 3:31:31 PM
'
'
Public Class cFiTxAllocationsDbTier
    '
    Inherits cDataTier
    '
    Protected Function GetByPK(ByVal tId As Integer) As DataSet
        Dim Str As String
        Str = " SELECT" & _
                " All_id," & _
                " AccLin_id," & _
                " TrxHdr_id," & _
                " Prd_Code," & _
                " All_Date," & _
                " Cur_AlphaCode," & _
                " All_Rate," & _
                " All_AmountLC," & _
                " All_AmountTC," & _
                " All_CreationDate," & _
                " All_AmendDate," & _
                " All_CreatedBy," & _
                " All_AmendBy" & _
            "  FROM FiTxAllocations" & _
            "  WHERE All_id = " & tId
        Return MyBase.GetData(Str)
    End Function
    Protected Function Save(ByVal _cFiTxAllocations As cFiTxAllocations) As Boolean
        Dim SpParams As New ArrayList
        Dim SpNames As New ArrayList
        Dim Flag As Boolean = False
        With _cFiTxAllocations
            SpParams.Add(.Id)                                                '(0)
            SpNames.Add("All_id")                                            '(0)
            SpParams.Add(.AccLineId)                                         '(1)
            SpNames.Add("AccLin_id")                                         '(1)
            If .TrxHeaderId = 0 Then
                SpParams.Add(DBNull.Value)                                   '(2)
                SpNames.Add("TrxHdr_id")                                     '(2)
            Else
                SpParams.Add(.TrxHeaderId)                                   '(2)
                SpNames.Add("TrxHdr_id")                                     '(2)
            End If
            SpParams.Add(.PrdCode)                                           '(3)
            SpNames.Add("Prd_Code")                                          '(3)
            SpParams.Add(.AllocationDate)                                    '(4)
            SpNames.Add("All_Date")                                          '(4)
            SpParams.Add(.CurAlphaCode)                                      '(5)
            SpNames.Add("Cur_AlphaCode")                                     '(5)
            SpParams.Add(.AllocationRate)                                    '(6)
            SpNames.Add("All_Rate")                                          '(6)
            SpParams.Add(.AllocationAmountLC)                                '(7)
            SpNames.Add("All_AmountLC")                                      '(7)
            SpParams.Add(.AllocationAmountTC)                                '(8)
            SpNames.Add("All_AmountTC")                                      '(8)
            SpParams.Add(.CreationDate)                                      '(9)
            SpNames.Add("All_CreationDate")                                  '(9)
            SpParams.Add(.AmendDate)                                         '(10)
            SpNames.Add("All_AmendDate")                                     '(10)
            SpParams.Add(.CreatedBy)                                         '(11)
            SpNames.Add("All_CreatedBy")                                     '(11)
            SpParams.Add(.AmendBy)                                           '(12)
            SpNames.Add("All_AmendBy")                                       '(12)
        End With
        SpNames.Add("Newid")                                       '(13)
        SpParams.Add(CInt(0))                                      '(13)
        If Me.StoredProcedure("AG_FiTxAllocations_Save_Update", SpParams, SpNames, 13) Then
            Return True
        Else
            Return False
        End If
    End Function
    Protected Function Delete(ByVal tId As Integer) As Boolean
        ' note : this function closes the connection if you use programs that use an open connection comment out Cnx.Close lines
        '     closing connection does not affect dataset returning
        Dim Str As String
        Dim Flag As Boolean = True
        Dim Exx As New System.Exception
        Try
            BeginTransaction()
            Str = " DELETE FROM FiTxAllocations" & _
               " WHERE All_id = " & tId
            If MyBase.ExecuteNonQuery(Str) = -1 Then
                Throw Exx
            End If
            CommitTransaction()
        Catch ex As Exception
            Rollback()
            Utils.ShowException(ex)
            Flag = False
        End Try

        Return Flag
    End Function
    Protected Function CheckDeleteRecords(ByVal tCode As Integer) As DataSet
        Dim ds As DataSet
        '    Generation Note : 02/11/07 3:31:31 PM :- No Foriegn Key Constraints where found
        ds = Nothing
        Return ds
    End Function
End Class
