' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 12/12/2007 09:40:12
'
'
Public Class cAaSsInterfaceToNodal
    '
    Inherits cAaSsInterfaceToNodalDBTier
    '
    Private mId As Integer
    Private mFromID As String
    Private mToID As String
    Private mCreationTimes As Integer
    Private mCreationDate As Date
    Private mCreatedBy As Integer
    Private mUpdateDate As Date
    Private mUpdatedBy As Integer
    Public Property Id() As Integer
        Get
            Return mId
        End Get
        Set(ByVal Value As Integer)
            mId = Value
        End Set
    End Property
    Public Property FromID() As String
        Get
            Return mFromID
        End Get
        Set(ByVal Value As String)
            mFromID = Value
        End Set
    End Property
    Public Property ToID() As String
        Get
            Return mToID
        End Get
        Set(ByVal Value As String)
            mToID = Value
        End Set
    End Property
    Public Property CreationTimes() As Integer
        Get
            Return mCreationTimes
        End Get
        Set(ByVal Value As Integer)
            mCreationTimes = Value
        End Set
    End Property
    Public Property CreationDate() As Date
        Get
            Return mCreationDate
        End Get
        Set(ByVal Value As Date)
            mCreationDate = Value
        End Set
    End Property
    Public Property CreatedBy() As Integer
        Get
            Return mCreatedBy
        End Get
        Set(ByVal Value As Integer)
            mCreatedBy = Value
        End Set
    End Property
    Public Property UpdateDate() As Date
        Get
            Return mUpdateDate
        End Get
        Set(ByVal Value As Date)
            mUpdateDate = Value
        End Set
    End Property
    Public Property UpdatedBy() As Integer
        Get
            Return mUpdatedBy
        End Get
        Set(ByVal Value As Integer)
            mUpdatedBy = Value
        End Set
    End Property
    Public Sub New()

    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tId As Integer)
        If tId <> 0 Then
            Init(tId)
        End If
    End Sub
    Private Sub Init(ByVal tId As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tId)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mId = DbNullToInt(dr.item(0))
        mFromID = DbNullToString(dr.item(1))
        mToID = DbNullToString(dr.item(2))
        mCreationTimes = DbNullToInt(dr.item(3))
        mCreationDate = DbNullToDate(dr.item(4))
        mCreatedBy = DbNullToInt(dr.item(5))
        mUpdateDate = DbNullToDate(dr.item(6))
        mUpdatedBy = DbNullToInt(dr.item(7))
    End Sub
    Public Shadows Function Delete(ByVal tId As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tId)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tId)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
