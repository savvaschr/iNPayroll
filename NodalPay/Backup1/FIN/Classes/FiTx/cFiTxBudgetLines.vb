' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 06/11/07 9:50:35 AM
'
'
Public Class cFiTxBudgetLines
    '
    Inherits cFiTxBudgetLinesDbTier
    '
    Private mBudLin_Id As Integer
    Private mBud_Code As String
    Private mPrd_Code As Integer
    Private mAcc_Code As String
    Private mAcLAn1_Code As String
    Private mAcLAn2_Code As String
    Private mAcLAn3_Code As String
    Private mAcLAn4_Code As String
    Private mAcLAn5_Code As String
    Private mAcLAn6_Code As String
    Private mAcLAn7_Code As String
    Private mAcLAn8_Code As String
    Private mAcLAn9_Code As String
    Private mAcLAn10_Code As String
    Private mBudLin_Amount As Double
    Private mBudLin_CreationDate As Date
    Private mBudLin_AmendDate As Date
    Private mBudLin_CreatedBy As Integer
    Private mBudLin_AmendBy As Integer
    Public Property BudLin_Id() As Integer
        Get
            Return mBudLin_Id
        End Get
        Set(ByVal Value As Integer)
            mBudLin_Id = Value
        End Set
    End Property
    Public Property Bud_Code() As String
        Get
            Return mBud_Code
        End Get
        Set(ByVal Value As String)
            mBud_Code = Value
        End Set
    End Property
    Public Property Prd_Code() As Integer
        Get
            Return mPrd_Code
        End Get
        Set(ByVal Value As Integer)
            mPrd_Code = Value
        End Set
    End Property
    Public Property Acc_Code() As String
        Get
            Return mAcc_Code
        End Get
        Set(ByVal Value As String)
            mAcc_Code = Value
        End Set
    End Property
    Public Property AcLAn1_Code() As String
        Get
            Return mAcLAn1_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn1_Code = Value
        End Set
    End Property
    Public Property AcLAn2_Code() As String
        Get
            Return mAcLAn2_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn2_Code = Value
        End Set
    End Property
    Public Property AcLAn3_Code() As String
        Get
            Return mAcLAn3_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn3_Code = Value
        End Set
    End Property
    Public Property AcLAn4_Code() As String
        Get
            Return mAcLAn4_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn4_Code = Value
        End Set
    End Property
    Public Property AcLAn5_Code() As String
        Get
            Return mAcLAn5_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn5_Code = Value
        End Set
    End Property
    Public Property AcLAn6_Code() As String
        Get
            Return mAcLAn6_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn6_Code = Value
        End Set
    End Property
    Public Property AcLAn7_Code() As String
        Get
            Return mAcLAn7_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn7_Code = Value
        End Set
    End Property
    Public Property AcLAn8_Code() As String
        Get
            Return mAcLAn8_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn8_Code = Value
        End Set
    End Property
    Public Property AcLAn9_Code() As String
        Get
            Return mAcLAn9_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn9_Code = Value
        End Set
    End Property
    Public Property AcLAn10_Code() As String
        Get
            Return mAcLAn10_Code
        End Get
        Set(ByVal Value As String)
            mAcLAn10_Code = Value
        End Set
    End Property
    Public Property BudLin_Amount() As Double
        Get
            Return mBudLin_Amount
        End Get
        Set(ByVal Value As Double)
            mBudLin_Amount = Value
        End Set
    End Property
    Public Property BudLin_CreationDate() As Date
        Get
            Return mBudLin_CreationDate
        End Get
        Set(ByVal Value As Date)
            mBudLin_CreationDate = Value
        End Set
    End Property
    Public Property BudLin_AmendDate() As Date
        Get
            Return mBudLin_AmendDate
        End Get
        Set(ByVal Value As Date)
            mBudLin_AmendDate = Value
        End Set
    End Property
    Public Property BudLin_CreatedBy() As Integer
        Get
            Return mBudLin_CreatedBy
        End Get
        Set(ByVal Value As Integer)
            mBudLin_CreatedBy = Value
        End Set
    End Property
    Public Property BudLin_AmendBy() As Integer
        Get
            Return mBudLin_AmendBy
        End Get
        Set(ByVal Value As Integer)
            mBudLin_AmendBy = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tBudLin_Id As Integer)
        If tBudLin_Id <> 0 Then
            Init(tBudLin_Id)
        End If
    End Sub
    Private Sub Init(ByVal tBudLin_Id As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tBudLin_Id)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mBudLin_Id = DbNullToInt(dr.item(0))
        mBud_Code = DbNullToString(dr.item(1))
        mPrd_Code = DbNullToInt(dr.item(2))
        mAcc_Code = DbNullToString(dr.item(3))
        mAcLAn1_Code = DbNullToString(dr.item(4))
        mAcLAn2_Code = DbNullToString(dr.item(5))
        mAcLAn3_Code = DbNullToString(dr.item(6))
        mAcLAn4_Code = DbNullToString(dr.item(7))
        mAcLAn5_Code = DbNullToString(dr.item(8))
        mAcLAn6_Code = DbNullToString(dr.item(9))
        mAcLAn7_Code = DbNullToString(dr.item(10))
        mAcLAn8_Code = DbNullToString(dr.item(11))
        mAcLAn9_Code = DbNullToString(dr.item(12))
        mAcLAn10_Code = DbNullToString(dr.item(13))
        mBudLin_Amount = DbNullToDouble(dr.item(14))
        mBudLin_CreationDate = DbNullToDate(dr.item(15))
        mBudLin_AmendDate = DbNullToDate(dr.item(16))
        mBudLin_CreatedBy = DbNullToInt(dr.item(17))
        mBudLin_AmendBy = DbNullToInt(dr.item(18))
    End Sub
    Public Shadows Function Delete(ByVal tBudLin_Id As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tBudLin_Id)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tBudLin_Id)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
