' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:51
'
'
Public Class cPrTxEmployeeDiscounts
    '
    Inherits cPrTxEmployeeDiscountsDbTier
    '
    Private mId As Integer
    Private mEmp_Code As String
    Private mPrdGrp_Code As String
    Private mDiscount1 As Double
    Private mDiscount2 As Double
    Private mDiscount3 As Double
    Private mDiscount4 As Double
    Private mDiscount5 As Double
    Private mDiscount6 As Double
    Private mDiscount7 As Double
    Private mDiscount8 As Double
    Private mDiscount9 As Double
    Private mDiscount10 As Double
    Private mLifeInsurance As Double
    Private mUsr_Id As Integer
    Private mCreationDate As Date
    Private mAmendDate As Date
    Private mMedical As Double
    Private mPensionfund As Double
    Public Property Id() As Integer
        Get
            Return mId
        End Get
        Set(ByVal Value As Integer)
            mId = Value
        End Set
    End Property
    Public Property Emp_Code() As String
        Get
            Return mEmp_Code
        End Get
        Set(ByVal Value As String)
            mEmp_Code = Value
        End Set
    End Property
    Public Property PrdGrp_Code() As String
        Get
            Return mPrdGrp_Code
        End Get
        Set(ByVal Value As String)
            mPrdGrp_Code = Value
        End Set
    End Property
    Public Property Discount1() As Double
        Get
            Return mDiscount1
        End Get
        Set(ByVal Value As Double)
            mDiscount1 = Value
        End Set
    End Property
    Public Property Discount2() As Double
        Get
            Return mDiscount2
        End Get
        Set(ByVal Value As Double)
            mDiscount2 = Value
        End Set
    End Property
    Public Property Discount3() As Double
        Get
            Return mDiscount3
        End Get
        Set(ByVal Value As Double)
            mDiscount3 = Value
        End Set
    End Property
    Public Property Discount4() As Double
        Get
            Return mDiscount4
        End Get
        Set(ByVal Value As Double)
            mDiscount4 = Value
        End Set
    End Property
    Public Property Discount5() As Double
        Get
            Return mDiscount5
        End Get
        Set(ByVal Value As Double)
            mDiscount5 = Value
        End Set
    End Property
    Public Property Discount6() As Double
        Get
            Return mDiscount6
        End Get
        Set(ByVal Value As Double)
            mDiscount6 = Value
        End Set
    End Property
    Public Property Discount7() As Double
        Get
            Return mDiscount7
        End Get
        Set(ByVal Value As Double)
            mDiscount7 = Value
        End Set
    End Property
    Public Property Discount8() As Double
        Get
            Return mDiscount8
        End Get
        Set(ByVal Value As Double)
            mDiscount8 = Value
        End Set
    End Property
    Public Property Discount9() As Double
        Get
            Return mDiscount9
        End Get
        Set(ByVal Value As Double)
            mDiscount9 = Value
        End Set
    End Property
    Public Property Discount10() As Double
        Get
            Return mDiscount10
        End Get
        Set(ByVal Value As Double)
            mDiscount10 = Value
        End Set
    End Property
    Public Property LifeInsurance() As Double
        Get
            Return mLifeInsurance
        End Get
        Set(ByVal Value As Double)
            mLifeInsurance = Value
        End Set
    End Property
    Public Property Usr_Id() As Integer
        Get
            Return mUsr_Id
        End Get
        Set(ByVal Value As Integer)
            mUsr_Id = Value
        End Set
    End Property
    Public Property CreationDate() As Date
        Get
            Return mCreationDate
        End Get
        Set(ByVal Value As Date)
            mCreationDate = Value
        End Set
    End Property
    Public Property AmendDate() As Date
        Get
            Return mAmendDate
        End Get
        Set(ByVal Value As Date)
            mAmendDate = Value
        End Set
    End Property
    Public Property Medical() As Double
        Get
            Return mMedical
        End Get
        Set(ByVal Value As Double)
            mMedical = Value
        End Set
    End Property
    Public Property PensionFund() As Double
        Get
            Return mPensionfund
        End Get
        Set(ByVal Value As Double)
            mPensionfund = Value
        End Set
    End Property
    Public ReadOnly Property TotalDiscounts() As Double
        Get
            Return Discount1 + Discount2 + Discount3 + Discount4 + Discount5 + Discount6 + Discount7 + Discount8 + Discount9 + Discount10
        End Get
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tId As Integer)
        If tId <> 0 Then
            Init(tId)
        End If
    End Sub
    Public Sub New(ByVal tEmpCode As String, ByVal tPeriodGroup As String)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByEmpCodePeriodGroupCode(tEmpcode, tPeriodGroup)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub Init(ByVal tId As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tId)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mId = DbNullToInt(dr.Item(0))
        mEmp_Code = DbNullToString(dr.Item(1))
        mPrdGrp_Code = DbNullToString(dr.Item(2))
        mDiscount1 = DbNullToDouble(dr.Item(3))
        mDiscount2 = DbNullToDouble(dr.Item(4))
        mDiscount3 = DbNullToDouble(dr.Item(5))
        mDiscount4 = DbNullToDouble(dr.Item(6))
        mDiscount5 = DbNullToDouble(dr.Item(7))
        mDiscount6 = DbNullToDouble(dr.Item(8))
        mDiscount7 = DbNullToDouble(dr.Item(9))
        mDiscount8 = DbNullToDouble(dr.Item(10))
        mDiscount9 = DbNullToDouble(dr.Item(11))
        mDiscount10 = DbNullToDouble(dr.Item(12))
        mLifeInsurance = DbNullToDouble(dr.Item(13))
        mUsr_Id = DbNullToInt(dr.Item(14))
        mCreationDate = DbNullToDate(dr.Item(15))
        mAmendDate = DbNullToDate(dr.Item(16))
        mMedical = DbNullToDouble(dr.Item(17))
        mPensionfund = DbNullToDouble(dr.Item(18))
    End Sub
    Public Shadows Function Delete(ByVal tId As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tId)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tId)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
