' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:50
'
'
Public Class cPrMsTemplateContributionsDbTier
    '
    Inherits cDataTier
    '
    Protected Function GetByPK(ByVal tId As Integer) As DataSet
        Dim Str As String
        Str = " SELECT" & _
                " TemCon_id," & _
                " TemGrp_Code," & _
                " ConCod_Code," & _
                " TemCon_DisplayName," & _
                " TemCon_IsDispalyed," & _
                " TemCon_Sequence," & _
                " TemCon_TypeMode," & _
                " TemCon_FromMode," & _
                " TemCon_CreationDate," & _
                " TemCon_CalcFormula," & _
                " TemCon_CreatedBy," & _
                " TemCon_AmendDate," & _
                " TemCon_AmendBy" & _
                " TemCon_NavCreditAccount," & _
                " TemCon_NavDebitAccount, " & _
                " TemCon_ReportingSequence " & _
            "  FROM PrMsTemplateContributions" & _
            "  WHERE TemCon_id = " & tId
        Return MyBase.GetData(Str)
    End Function
    Protected Function GetByIndex(ByVal tTemplateGroupCode As String, ByVal tContributionCode As String) As DataSet
        Dim Str As String
        Str = " SELECT" & _
                " TemCon_id," & _
                " TemGrp_Code," & _
                " ConCod_Code," & _
                " TemCon_DisplayName," & _
                " TemCon_IsDispalyed," & _
                " TemCon_Sequence," & _
                " TemCon_TypeMode," & _
                " TemCon_FromMode," & _
                " TemCon_CreationDate," & _
                " TemCon_CalcFormula," & _
                " TemCon_CreatedBy," & _
                " TemCon_AmendDate," & _
                " TemCon_AmendBy," & _
                " TemCon_NavCreditAccount," & _
                " TemCon_NavDebitAccount, " & _
                " TemCon_ReportingSequence " & _
                " FROM PrMsTemplateContributions" & _
                " WHERE TemGrp_Code = " & enQuoteString(tTemplateGroupCode) & _
                " AND ConCod_Code=" & enQuoteString(tContributionCode)
        Return MyBase.GetData(Str)
    End Function
    Protected Function Save(ByRef _cPrMsTemplateContributions As cPrMsTemplateContributions) As Boolean
        Dim SpParams As New ArrayList
        Dim SpNames As New ArrayList
        Dim Flag As Boolean = False
        With _cPrMsTemplateContributions
            SpParams.Add(.Id)                                                '(0)
            SpNames.Add("TemCon_id")                                         '(0)
            SpParams.Add(.TemGrp_Code)                                       '(1)
            SpNames.Add("TemGrp_Code")                                       '(1)
            SpParams.Add(.ConCodCode)                                        '(2)
            SpNames.Add("ConCod_Code")                                       '(2)
            SpParams.Add(.DisplayName)                                       '(3)
            SpNames.Add("TemCon_DisplayName")                                '(3)
            SpParams.Add(.IsDispalyed)                                       '(4)
            SpNames.Add("TemCon_IsDispalyed")                                '(4)
            SpParams.Add(.Sequence)                                          '(5)
            SpNames.Add("TemCon_Sequence")                                   '(5)
            SpParams.Add(.TypeMode)                                          '(6)
            SpNames.Add("TemCon_TypeMode")                                   '(6)
            SpParams.Add(.FromMode)                                          '(7)
            SpNames.Add("TemCon_FromMode")                                   '(7)
            SpParams.Add(.CreationDate)                                      '(8)
            SpNames.Add("TemCon_CreationDate")                               '(8)
            SpParams.Add(.CalcFormula)                                       '(9)
            SpNames.Add("TemCon_CalcFormula")                                '(9)
            SpParams.Add(.CreatedBy)                                         '(10)
            SpNames.Add("TemCon_CreatedBy")                                  '(10)
            SpParams.Add(.AmendDate)                                         '(11)
            SpNames.Add("TemCon_AmendDate")                                  '(11)
            SpParams.Add(.AmendBy)                                           '(12)
            SpNames.Add("TemCon_AmendBy")                                    '(12)
            SpParams.Add(.ConsolDesc)                                  '(13)
            SpNames.Add("TemCon_NavCreditAccount")                           '(13)
            SpParams.Add(.NavDebitAccount)                                   '(14)
            SpNames.Add("TemCon_NavDebitAccount")                            '(14)
            SpParams.Add(.ReportingSequence)                                   '(15)
            SpNames.Add("TemCon_ReportingSequence")                            '(15)
        End With
        SpNames.Add("NewId")                                             '(16)
        SpParams.Add(CInt(0))                                            '(16)
        If Me.StoredProcedure("AG_PrMsTemplateContributions_Save_Update", SpParams, SpNames, 16) Then
            If _cPrMsTemplateContributions.Id = 0 Then
                _cPrMsTemplateContributions.Id = DbNullToInt(SpParams(16))
            End If
            Return True
        Else
            Return False
        End If
    End Function
    Protected Function Delete(ByVal tId As Integer) As Boolean
        Dim Str As String
        Dim Flag As Boolean = True
        Dim Exx As New System.Exception
        Try
            BeginTransaction()
            Str = " DELETE FROM PrMsTemplateContributions" & _
               " WHERE TemCon_id = " & tId
            If MyBase.ExecuteNonQuery(Str) = -1 Then
                Throw Exx
            End If
            CommitTransaction()
        Catch ex As Exception
            Rollback()
            Utils.ShowException(ex)
            Flag = False
        End Try
        Return Flag
    End Function
    Protected Function CheckDeleteRecords(ByVal tCode As Integer) As DataSet
        Dim ds As DataSet
        '    Generation Note : 13/02/2008 09:42:50 :- No Foriegn Key Constraints where found
        ds = Nothing
        Return ds
    End Function
End Class
