Public Class cPrSsDecreaseTable
    ' This Class has been autogenerated by Nodalsoft
    ' Do NOT adjust as it will be overwritten
    ' Generation Date : 13/02/2008 09:42:51
    '
    '
    '
    Inherits cPrSsDecreaseTableDBTier
    '
    Private mDecTbl_id As Integer
    Private mDecTbl_Sequence As Integer
    Private mDecTbl_Code As String
    Private mDecTbl_BracketAmount As Double
    Private mDecTbl_DedRate As Double
    Private mDecTbl_CreationDate As Date
    Private mDecTbl_CreatedBy As Integer
    Private mDecTbl_AmendDate As Date
    Private mDecTbl_AmendBy As Integer
    Public Property DecTbl_id() As Integer
        Get
            Return mDecTbl_id
        End Get
        Set(ByVal Value As Integer)
            mDecTbl_id = Value
        End Set
    End Property
    Public Property DecTbl_Sequence() As Integer
        Get
            Return mDecTbl_Sequence
        End Get
        Set(ByVal Value As Integer)
            mDecTbl_Sequence = Value
        End Set
    End Property
    Public Property DecTbl_Code() As String
        Get
            Return mDecTbl_Code
        End Get
        Set(ByVal Value As String)
            mDecTbl_Code = Value
        End Set
    End Property
    Public Property DecTbl_BracketAmount() As Double
        Get
            Return mDecTbl_BracketAmount
        End Get
        Set(ByVal Value As Double)
            mDecTbl_BracketAmount = Value
        End Set
    End Property
    Public Property DecTbl_DedRate() As Double
        Get
            Return mDecTbl_DedRate
        End Get
        Set(ByVal Value As Double)
            mDecTbl_DedRate = Value
        End Set
    End Property
   
    Public Property DecTbl_CreationDate() As Date
        Get
            Return mDecTbl_CreationDate
        End Get
        Set(ByVal Value As Date)
            mDecTbl_CreationDate = Value
        End Set
    End Property
    Public Property DecTbl_CreatedBy() As Integer
        Get
            Return mDecTbl_CreatedBy
        End Get
        Set(ByVal Value As Integer)
            mDecTbl_CreatedBy = Value
        End Set
    End Property
    Public Property DecTbl_AmendDate() As Date
        Get
            Return mDecTbl_AmendDate
        End Get
        Set(ByVal Value As Date)
            mDecTbl_AmendDate = Value
        End Set
    End Property
    Public Property DecTbl_AmendBy() As Integer
        Get
            Return mDecTbl_AmendBy
        End Get
        Set(ByVal Value As Integer)
            mDecTbl_AmendBy = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tDecTbl_id As Integer)
        If tDecTbl_id <> 0 Then
            Init(tDecTbl_id)
        End If
    End Sub
    Private Sub Init(ByVal tDecTbl_id As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tDecTbl_id)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mDecTbl_id = DbNullToInt(dr.Item(0))
        mDecTbl_Sequence = DbNullToInt(dr.Item(1))
        mDecTbl_Code = DbNullToString(dr.Item(2))
        mDecTbl_BracketAmount = DbNullToDouble(dr.Item(3))
        mDecTbl_DedRate = DbNullToDouble(dr.Item(4))
        mDecTbl_CreationDate = DbNullToDate(dr.Item(5))
        mDecTbl_CreatedBy = DbNullToInt(dr.Item(6))
        mDecTbl_AmendDate = DbNullToDate(dr.Item(7))
        mDecTbl_AmendBy = DbNullToInt(dr.Item(8))
    End Sub
    Public Shadows Function Delete(ByVal tDecTbl_id As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tDecTbl_id)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tDecTbl_id)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class




