'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsExcelsysDemo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ExelsysWSISoap", [Namespace]:="http://Exelsys/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DomainObjectOfString)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DomainObjectOfInt32)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EmployeeContactDetailsWSI()))>  _
    Partial Public Class ExelsysWSI
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private PostEmployeeAbsenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertEmployeeAbsenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitAbsenceRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecallAbsenceRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitOvertimeRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWorkingTimeForAbsenceRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddTimeToTimesheetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetValidExpenseItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyExpenseStatementsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyExpenseStatementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyExpenseStatementsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyExpenseStatementLinesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertExpenseStatementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertExpenseStatementLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitExpenseStatementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAvailableTimesheetPeriodsForEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CopyTimesheetHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetHeaderPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetHeadersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitTimesheetHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetLineListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetLinesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteTimesheetLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteExpenseLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveTimesheetLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyAbsenceRequestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyAbsenceRequestsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAbsenceRequestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyContactsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyContactsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyContactsPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicantsPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicantsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobApplicationsPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobApplicationsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVacanciesPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVacanciesPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProjectsPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProjectsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckLicenseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CourseRequestToEnrolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCourseEnrolmentListCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCourseEnrolmentListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTARecordsWithFiltersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTAAbsenceRequestsPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTAAbsenceRequestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTAEmployeePagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTAEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProjectTasksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadEmployeePhotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadEmployeeDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadApplicantDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadAndReplaceEmployeeDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeContactDetailsCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeContactDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentLinksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicantAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostApplicantAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSelfAppraisalsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyPendingAppraisalsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeAppraisalDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostSalaryEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostEmployeeAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyDocumentFoldersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentsInFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeICTItemsPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeICTItemsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUpdateCostCentreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPayrollEmployeesPagesCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPayrollEmployeesPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeExtraFieldsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeesPagesCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeesPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeesPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeRelativesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeQualificationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeBenefitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeAssignedArticlesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeePositionAssignmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeTrainingRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeSalaryHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeReferencesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeBasicInfoPagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeBasicInfoPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateEmployeeCommunicationInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyEmployeesPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyEmployeeInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeAbsenseBalancesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeSingleAbsenceBalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeAbsenceBalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeAbsenceTransactionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitsOfMeasureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsOnlineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicantUserFieldDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobApplicationUserFieldDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOpenVacanciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDateFormatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdditionalInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBusinessEntityParameterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserSecurityProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranslatedStringsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranslatedStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranslatedDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ApplicantForgotPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuperAdminLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicationReportUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVacationPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ApplicantLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ApplicantExistsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostJobApplicationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostJobApplicationDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddParserLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNationalityListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeUnionsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListDomainValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListCodeDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCodeDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertDepartmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertEmployeeJobDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckConnectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPositionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrainingCoursesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPositionAssignmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDepartmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobDescriptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQualificationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpensesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertProjectTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyProjectsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyProjectTasksPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyTasksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyJobApplicationsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyJobApplicationsListPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobApplicationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApplicantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyApprovalTransactionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyApprovalTransactionsPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostApprovalTransactionActionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLanguageListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWorkingTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetValidCausesOfAbsenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UserLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RequestNewPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeAttendanceStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateEmployeeAttendanceStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddTimeAttendanceRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddAttendanceStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegisterWorkingTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPrivacySettingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangePasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetShiftListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProjectTimeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyPayslipsLinksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertAdHocAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteEmployeeAdhocAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdHocAppraisalsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdHocAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdHocAppraisalTemplatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostAdHocAppraisalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLocationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBuildingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBuildingFloorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWorkspacesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostWorkspaceReservationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMyOvertimeRequestsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNewsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeContractTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEque2EmployeesPagedCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEque2EmployeesPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeDimensionDefinitionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertUpdateDimensionValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDimensionValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimeAttendanceRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertUpdateEmployeeDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteEmployeeDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.NodalPay.My.MySettings.Default.iNPayroll_wsExcelsysDemo_ExelsysWSI
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event PostEmployeeAbsenceCompleted As PostEmployeeAbsenceCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertEmployeeAbsenceCompleted As InsertEmployeeAbsenceCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitAbsenceRequestCompleted As SubmitAbsenceRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event RecallAbsenceRequestCompleted As RecallAbsenceRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitOvertimeRequestCompleted As SubmitOvertimeRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWorkingTimeForAbsenceRangeCompleted As GetWorkingTimeForAbsenceRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event AddTimeToTimesheetCompleted As AddTimeToTimesheetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetValidExpenseItemsCompleted As GetValidExpenseItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyExpenseStatementsCompleted As GetMyExpenseStatementsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyExpenseStatementCompleted As GetMyExpenseStatementCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyExpenseStatementsPagedCompleted As GetMyExpenseStatementsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyExpenseStatementLinesCompleted As GetMyExpenseStatementLinesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertExpenseStatementCompleted As InsertExpenseStatementCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertExpenseStatementLineCompleted As InsertExpenseStatementLineCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitExpenseStatementCompleted As SubmitExpenseStatementCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAvailableTimesheetPeriodsForEmployeeCompleted As GetAvailableTimesheetPeriodsForEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event CopyTimesheetHeaderCompleted As CopyTimesheetHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetHeaderPagesCompleted As GetTimesheetHeaderPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetHeadersCompleted As GetTimesheetHeadersCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitTimesheetHeaderCompleted As SubmitTimesheetHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetLineListCompleted As GetTimesheetLineListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetLinesCompleted As GetTimesheetLinesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteTimesheetLineCompleted As DeleteTimesheetLineCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteExpenseLineCompleted As DeleteExpenseLineCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveTimesheetLineCompleted As SaveTimesheetLineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyAbsenceRequestsCompleted As GetMyAbsenceRequestsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyAbsenceRequestsPagedCompleted As GetMyAbsenceRequestsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAbsenceRequestsCompleted As GetAbsenceRequestsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContactCompleted As GetContactCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertContactCompleted As InsertContactCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateContactCompleted As UpdateContactCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyContactsCompleted As GetMyContactsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyContactsPagedCompleted As GetMyContactsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyContactsPagesCompleted As GetMyContactsPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicantsPagesCompleted As GetApplicantsPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicantsPagedCompleted As GetApplicantsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobApplicationsPagesCompleted As GetJobApplicationsPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobApplicationsPagedCompleted As GetJobApplicationsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVacanciesPagesCompleted As GetVacanciesPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVacanciesPagedCompleted As GetVacanciesPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProjectsPagesCompleted As GetProjectsPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProjectsPagedCompleted As GetProjectsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckLicenseCompleted As CheckLicenseCompletedEventHandler
        
        '''<remarks/>
        Public Event CourseRequestToEnrolCompleted As CourseRequestToEnrolCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCourseEnrolmentListCountCompleted As GetCourseEnrolmentListCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCourseEnrolmentListCompleted As GetCourseEnrolmentListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTARecordsWithFiltersCompleted As GetTARecordsWithFiltersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTAAbsenceRequestsPagesCompleted As GetTAAbsenceRequestsPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTAAbsenceRequestsCompleted As GetTAAbsenceRequestsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTAEmployeePagesCompleted As GetTAEmployeePagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTAEmployeeCompleted As GetTAEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProjectTasksCompleted As GetProjectTasksCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadEmployeePhotoCompleted As UploadEmployeePhotoCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadEmployeeDocumentCompleted As UploadEmployeeDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadApplicantDocumentCompleted As UploadApplicantDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDocumentCompleted As DeleteDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadAndReplaceEmployeeDocumentCompleted As UploadAndReplaceEmployeeDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadDocumentCompleted As UploadDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentsCompleted As GetDocumentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeContactDetailsCountCompleted As GetEmployeeContactDetailsCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeContactDetailsCompleted As GetEmployeeContactDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentLinksCompleted As GetDocumentLinksCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicantAppraisalCompleted As GetApplicantAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event PostApplicantAppraisalCompleted As PostApplicantAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event PostAppraisalCompleted As PostAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSelfAppraisalsListCompleted As GetSelfAppraisalsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyPendingAppraisalsListCompleted As GetMyPendingAppraisalsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeAppraisalDetailsCompleted As GetEmployeeAppraisalDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event PostSalaryEntryCompleted As PostSalaryEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event PostEmployeeAppraisalCompleted As PostEmployeeAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyDocumentFoldersCompleted As GetMyDocumentFoldersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentsInFolderCompleted As GetDocumentsInFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeICTItemsPagesCompleted As GetEmployeeICTItemsPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeICTItemsPagedCompleted As GetEmployeeICTItemsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUpdateCostCentreCompleted As GetUpdateCostCentreCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPayrollEmployeesPagesCountCompleted As GetPayrollEmployeesPagesCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPayrollEmployeesPagedCompleted As GetPayrollEmployeesPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeExtraFieldsCompleted As GetEmployeeExtraFieldsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeesPagesCountCompleted As GetEmployeesPagesCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeesPagesCompleted As GetEmployeesPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeesPagedCompleted As GetEmployeesPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeRelativesCompleted As GetEmployeeRelativesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeQualificationsCompleted As GetEmployeeQualificationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeBenefitsCompleted As GetEmployeeBenefitsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeAssignedArticlesCompleted As GetEmployeeAssignedArticlesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeePositionAssignmentsCompleted As GetEmployeePositionAssignmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeTrainingRecordsCompleted As GetEmployeeTrainingRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeSalaryHistoryCompleted As GetEmployeeSalaryHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeReferencesCompleted As GetEmployeeReferencesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeBasicInfoPagesCompleted As GetEmployeeBasicInfoPagesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeBasicInfoPagedCompleted As GetEmployeeBasicInfoPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateEmployeeCommunicationInfoCompleted As UpdateEmployeeCommunicationInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyEmployeesPagedCompleted As GetMyEmployeesPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyEmployeeInfoCompleted As GetMyEmployeeInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeAbsenseBalancesCompleted As GetEmployeeAbsenseBalancesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeSingleAbsenceBalanceCompleted As GetEmployeeSingleAbsenceBalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeAbsenceBalanceCompleted As GetEmployeeAbsenceBalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeAbsenceTransactionsCompleted As GetEmployeeAbsenceTransactionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitsOfMeasureCompleted As GetUnitsOfMeasureCompletedEventHandler
        
        '''<remarks/>
        Public Event IsOnlineCompleted As IsOnlineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicantUserFieldDefinitionCompleted As GetApplicantUserFieldDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobApplicationUserFieldDefinitionCompleted As GetJobApplicationUserFieldDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOpenVacanciesCompleted As GetOpenVacanciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDateFormatCompleted As GetDateFormatCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdditionalInfoCompleted As GetAdditionalInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBusinessEntityParameterCompleted As GetBusinessEntityParameterCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserSecurityProfileCompleted As GetUserSecurityProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranslatedStringsCompleted As GetTranslatedStringsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranslatedStringCompleted As GetTranslatedStringCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranslatedDescriptionCompleted As GetTranslatedDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event ApplicantForgotPasswordCompleted As ApplicantForgotPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event SuperAdminLoginCompleted As SuperAdminLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicationReportUrlCompleted As GetApplicationReportUrlCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVacationPlanCompleted As GetVacationPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportUrlCompleted As GetReportUrlCompletedEventHandler
        
        '''<remarks/>
        Public Event ApplicantLoginCompleted As ApplicantLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event ApplicantExistsCompleted As ApplicantExistsCompletedEventHandler
        
        '''<remarks/>
        Public Event PostJobApplicationCompleted As PostJobApplicationCompletedEventHandler
        
        '''<remarks/>
        Public Event PostJobApplicationDocumentCompleted As PostJobApplicationDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event AddParserLogCompleted As AddParserLogCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountriesCompleted As GetCountriesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNationalityListCompleted As GetNationalityListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryListCompleted As GetCountryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeUnionsListCompleted As GetEmployeeUnionsListCompletedEventHandler
        
        '''<remarks/>
        Public Event ListDomainValueCompleted As ListDomainValueCompletedEventHandler
        
        '''<remarks/>
        Public Event ListCodeDescriptionCompleted As ListCodeDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertEmployeeCompleted As InsertEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCodeDescriptionCompleted As InsertCodeDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertDepartmentCompleted As InsertDepartmentCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertEmployeeJobDescriptionCompleted As InsertEmployeeJobDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLocationCompleted As InsertLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckConnectionCompleted As CheckConnectionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPositionsCompleted As GetPositionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrainingCoursesCompleted As GetTrainingCoursesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPositionAssignmentsCompleted As GetPositionAssignmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDepartmentsCompleted As GetDepartmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobDescriptionsCompleted As GetJobDescriptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQualificationsCompleted As GetQualificationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpensesCompleted As GetExpensesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertProjectTransactionCompleted As InsertProjectTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyProjectsPagedCompleted As GetMyProjectsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyProjectTasksPagedCompleted As GetMyProjectTasksPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyTasksCompleted As GetMyTasksCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyJobApplicationsListCompleted As GetMyJobApplicationsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyJobApplicationsListPagedCompleted As GetMyJobApplicationsListPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobApplicationCompleted As GetJobApplicationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApplicantCompleted As GetApplicantCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyApprovalTransactionsCompleted As GetMyApprovalTransactionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyApprovalTransactionsPagedCompleted As GetMyApprovalTransactionsPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event PostApprovalTransactionActionCompleted As PostApprovalTransactionActionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLanguageListCompleted As GetLanguageListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWorkingTimeCompleted As GetWorkingTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetValidCausesOfAbsenceCompleted As GetValidCausesOfAbsenceCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckLoginCompleted As CheckLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event UserLoginCompleted As UserLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event RequestNewPasswordCompleted As RequestNewPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeAttendanceStatusCompleted As GetEmployeeAttendanceStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateEmployeeAttendanceStatusCompleted As UpdateEmployeeAttendanceStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event AddTimeAttendanceRecordCompleted As AddTimeAttendanceRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event AddAttendanceStatusCompleted As AddAttendanceStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event RegisterWorkingTimeCompleted As RegisterWorkingTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPrivacySettingsCompleted As SetPrivacySettingsCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangePasswordCompleted As ChangePasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetShiftListCompleted As GetShiftListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProjectTimeListCompleted As GetEmployeeProjectTimeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyPayslipsLinksCompleted As GetMyPayslipsLinksCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertAdHocAppraisalCompleted As InsertAdHocAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteEmployeeAdhocAppraisalCompleted As DeleteEmployeeAdhocAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdHocAppraisalsCompleted As GetAdHocAppraisalsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdHocAppraisalCompleted As GetAdHocAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdHocAppraisalTemplatesCompleted As GetAdHocAppraisalTemplatesCompletedEventHandler
        
        '''<remarks/>
        Public Event PostAdHocAppraisalCompleted As PostAdHocAppraisalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLocationsCompleted As GetLocationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBuildingsCompleted As GetBuildingsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBuildingFloorsCompleted As GetBuildingFloorsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWorkspacesCompleted As GetWorkspacesCompletedEventHandler
        
        '''<remarks/>
        Public Event PostWorkspaceReservationCompleted As PostWorkspaceReservationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMyOvertimeRequestsCompleted As GetMyOvertimeRequestsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNewsCompleted As GetNewsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeContractTypesCompleted As GetEmployeeContractTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEque2EmployeesPagedCountCompleted As GetEque2EmployeesPagedCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEque2EmployeesPagedCompleted As GetEque2EmployeesPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeDimensionDefinitionsCompleted As GetEmployeeDimensionDefinitionsCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertUpdateDimensionValueCompleted As InsertUpdateDimensionValueCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDimensionValueCompleted As DeleteDimensionValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimeAttendanceRecordsCompleted As GetTimeAttendanceRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertUpdateEmployeeDimensionCompleted As InsertUpdateEmployeeDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteEmployeeDimensionCompleted As DeleteEmployeeDimensionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostEmployeeAbsence", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostEmployeeAbsence(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitEmployeeAbsenceRequestWSI) As Integer
            Dim results() As Object = Me.Invoke("PostEmployeeAbsence", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostEmployeeAbsenceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitEmployeeAbsenceRequestWSI)
            Me.PostEmployeeAbsenceAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostEmployeeAbsenceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitEmployeeAbsenceRequestWSI, ByVal userState As Object)
            If (Me.PostEmployeeAbsenceOperationCompleted Is Nothing) Then
                Me.PostEmployeeAbsenceOperationCompleted = AddressOf Me.OnPostEmployeeAbsenceOperationCompleted
            End If
            Me.InvokeAsync("PostEmployeeAbsence", New Object() {Login, Password, BusinessEntityName, Request}, Me.PostEmployeeAbsenceOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostEmployeeAbsenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostEmployeeAbsenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostEmployeeAbsenceCompleted(Me, New PostEmployeeAbsenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertEmployeeAbsence", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertEmployeeAbsence(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitAbsenceRequestWSI) As Integer
            Dim results() As Object = Me.Invoke("InsertEmployeeAbsence", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeAbsenceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitAbsenceRequestWSI)
            Me.InsertEmployeeAbsenceAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeAbsenceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitAbsenceRequestWSI, ByVal userState As Object)
            If (Me.InsertEmployeeAbsenceOperationCompleted Is Nothing) Then
                Me.InsertEmployeeAbsenceOperationCompleted = AddressOf Me.OnInsertEmployeeAbsenceOperationCompleted
            End If
            Me.InvokeAsync("InsertEmployeeAbsence", New Object() {Login, Password, BusinessEntityName, Request}, Me.InsertEmployeeAbsenceOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertEmployeeAbsenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertEmployeeAbsenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertEmployeeAbsenceCompleted(Me, New InsertEmployeeAbsenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SubmitAbsenceRequest", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitAbsenceRequest(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitAbsenceRequestWSI) As Integer
            Dim results() As Object = Me.Invoke("SubmitAbsenceRequest", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitAbsenceRequestAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitAbsenceRequestWSI)
            Me.SubmitAbsenceRequestAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitAbsenceRequestAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitAbsenceRequestWSI, ByVal userState As Object)
            If (Me.SubmitAbsenceRequestOperationCompleted Is Nothing) Then
                Me.SubmitAbsenceRequestOperationCompleted = AddressOf Me.OnSubmitAbsenceRequestOperationCompleted
            End If
            Me.InvokeAsync("SubmitAbsenceRequest", New Object() {Login, Password, BusinessEntityName, Request}, Me.SubmitAbsenceRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitAbsenceRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitAbsenceRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitAbsenceRequestCompleted(Me, New SubmitAbsenceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/RecallAbsenceRequest", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecallAbsenceRequest(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestID As Integer, ByVal Comment As String) As Boolean
            Dim results() As Object = Me.Invoke("RecallAbsenceRequest", New Object() {Login, Password, BusinessEntityName, RequestID, Comment})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecallAbsenceRequestAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestID As Integer, ByVal Comment As String)
            Me.RecallAbsenceRequestAsync(Login, Password, BusinessEntityName, RequestID, Comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecallAbsenceRequestAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestID As Integer, ByVal Comment As String, ByVal userState As Object)
            If (Me.RecallAbsenceRequestOperationCompleted Is Nothing) Then
                Me.RecallAbsenceRequestOperationCompleted = AddressOf Me.OnRecallAbsenceRequestOperationCompleted
            End If
            Me.InvokeAsync("RecallAbsenceRequest", New Object() {Login, Password, BusinessEntityName, RequestID, Comment}, Me.RecallAbsenceRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecallAbsenceRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecallAbsenceRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecallAbsenceRequestCompleted(Me, New RecallAbsenceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SubmitOvertimeRequest", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitOvertimeRequest(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitOvertimeRequestWSI) As Integer
            Dim results() As Object = Me.Invoke("SubmitOvertimeRequest", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitOvertimeRequestAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitOvertimeRequestWSI)
            Me.SubmitOvertimeRequestAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitOvertimeRequestAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As SubmitOvertimeRequestWSI, ByVal userState As Object)
            If (Me.SubmitOvertimeRequestOperationCompleted Is Nothing) Then
                Me.SubmitOvertimeRequestOperationCompleted = AddressOf Me.OnSubmitOvertimeRequestOperationCompleted
            End If
            Me.InvokeAsync("SubmitOvertimeRequest", New Object() {Login, Password, BusinessEntityName, Request}, Me.SubmitOvertimeRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitOvertimeRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitOvertimeRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitOvertimeRequestCompleted(Me, New SubmitOvertimeRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetWorkingTimeForAbsenceRange", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWorkingTimeForAbsenceRange(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal CauseOfAbsenceCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal UnitOfMeasureCode As String) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> System.Nullable(Of Decimal)
            Dim results() As Object = Me.Invoke("GetWorkingTimeForAbsenceRange", New Object() {Login, Password, BusinessEntityName, CauseOfAbsenceCode, FromDate, ToDate, UnitOfMeasureCode})
            Return CType(results(0),System.Nullable(Of Decimal))
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWorkingTimeForAbsenceRangeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal CauseOfAbsenceCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal UnitOfMeasureCode As String)
            Me.GetWorkingTimeForAbsenceRangeAsync(Login, Password, BusinessEntityName, CauseOfAbsenceCode, FromDate, ToDate, UnitOfMeasureCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWorkingTimeForAbsenceRangeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal CauseOfAbsenceCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal UnitOfMeasureCode As String, ByVal userState As Object)
            If (Me.GetWorkingTimeForAbsenceRangeOperationCompleted Is Nothing) Then
                Me.GetWorkingTimeForAbsenceRangeOperationCompleted = AddressOf Me.OnGetWorkingTimeForAbsenceRangeOperationCompleted
            End If
            Me.InvokeAsync("GetWorkingTimeForAbsenceRange", New Object() {Login, Password, BusinessEntityName, CauseOfAbsenceCode, FromDate, ToDate, UnitOfMeasureCode}, Me.GetWorkingTimeForAbsenceRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWorkingTimeForAbsenceRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWorkingTimeForAbsenceRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWorkingTimeForAbsenceRangeCompleted(Me, New GetWorkingTimeForAbsenceRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/AddTimeToTimesheet", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddTimeToTimesheet(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As AddTimeHelpObject) As Integer
            Dim results() As Object = Me.Invoke("AddTimeToTimesheet", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddTimeToTimesheetAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As AddTimeHelpObject)
            Me.AddTimeToTimesheetAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddTimeToTimesheetAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As AddTimeHelpObject, ByVal userState As Object)
            If (Me.AddTimeToTimesheetOperationCompleted Is Nothing) Then
                Me.AddTimeToTimesheetOperationCompleted = AddressOf Me.OnAddTimeToTimesheetOperationCompleted
            End If
            Me.InvokeAsync("AddTimeToTimesheet", New Object() {Login, Password, BusinessEntityName, Request}, Me.AddTimeToTimesheetOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddTimeToTimesheetOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddTimeToTimesheetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddTimeToTimesheetCompleted(Me, New AddTimeToTimesheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetValidExpenseItems", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetValidExpenseItems(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As ExpenseItemWSI()
            Dim results() As Object = Me.Invoke("GetValidExpenseItems", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),ExpenseItemWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetValidExpenseItemsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetValidExpenseItemsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetValidExpenseItemsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetValidExpenseItemsOperationCompleted Is Nothing) Then
                Me.GetValidExpenseItemsOperationCompleted = AddressOf Me.OnGetValidExpenseItemsOperationCompleted
            End If
            Me.InvokeAsync("GetValidExpenseItems", New Object() {Login, Password, BusinessEntityName}, Me.GetValidExpenseItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetValidExpenseItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetValidExpenseItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetValidExpenseItemsCompleted(Me, New GetValidExpenseItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyExpenseStatements", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyExpenseStatements(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String) As ExpenseHeaderWSI()
            Dim results() As Object = Me.Invoke("GetMyExpenseStatements", New Object() {Login, Password, BusinessEntityName, Status})
            Return CType(results(0),ExpenseHeaderWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String)
            Me.GetMyExpenseStatementsAsync(Login, Password, BusinessEntityName, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetMyExpenseStatementsOperationCompleted Is Nothing) Then
                Me.GetMyExpenseStatementsOperationCompleted = AddressOf Me.OnGetMyExpenseStatementsOperationCompleted
            End If
            Me.InvokeAsync("GetMyExpenseStatements", New Object() {Login, Password, BusinessEntityName, Status}, Me.GetMyExpenseStatementsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyExpenseStatementsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyExpenseStatementsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyExpenseStatementsCompleted(Me, New GetMyExpenseStatementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyExpenseStatement", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyExpenseStatement(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String) As ExpenseHeaderWSI
            Dim results() As Object = Me.Invoke("GetMyExpenseStatement", New Object() {Login, Password, BusinessEntityName, ExpenseReference})
            Return CType(results(0),ExpenseHeaderWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String)
            Me.GetMyExpenseStatementAsync(Login, Password, BusinessEntityName, ExpenseReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String, ByVal userState As Object)
            If (Me.GetMyExpenseStatementOperationCompleted Is Nothing) Then
                Me.GetMyExpenseStatementOperationCompleted = AddressOf Me.OnGetMyExpenseStatementOperationCompleted
            End If
            Me.InvokeAsync("GetMyExpenseStatement", New Object() {Login, Password, BusinessEntityName, ExpenseReference}, Me.GetMyExpenseStatementOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyExpenseStatementOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyExpenseStatementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyExpenseStatementCompleted(Me, New GetMyExpenseStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyExpenseStatementsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyExpenseStatementsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer) As ExpenseHeaderWSI()
            Dim results() As Object = Me.Invoke("GetMyExpenseStatementsPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize})
            Return CType(results(0),ExpenseHeaderWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyExpenseStatementsPagedAsync(Login, Password, BusinessEntityName, Status, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyExpenseStatementsPagedOperationCompleted Is Nothing) Then
                Me.GetMyExpenseStatementsPagedOperationCompleted = AddressOf Me.OnGetMyExpenseStatementsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyExpenseStatementsPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize}, Me.GetMyExpenseStatementsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyExpenseStatementsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyExpenseStatementsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyExpenseStatementsPagedCompleted(Me, New GetMyExpenseStatementsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyExpenseStatementLines", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyExpenseStatementLines(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String) As ExpenseLineWSI()
            Dim results() As Object = Me.Invoke("GetMyExpenseStatementLines", New Object() {Login, Password, BusinessEntityName, ExpenseReference})
            Return CType(results(0),ExpenseLineWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementLinesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String)
            Me.GetMyExpenseStatementLinesAsync(Login, Password, BusinessEntityName, ExpenseReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyExpenseStatementLinesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String, ByVal userState As Object)
            If (Me.GetMyExpenseStatementLinesOperationCompleted Is Nothing) Then
                Me.GetMyExpenseStatementLinesOperationCompleted = AddressOf Me.OnGetMyExpenseStatementLinesOperationCompleted
            End If
            Me.InvokeAsync("GetMyExpenseStatementLines", New Object() {Login, Password, BusinessEntityName, ExpenseReference}, Me.GetMyExpenseStatementLinesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyExpenseStatementLinesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyExpenseStatementLinesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyExpenseStatementLinesCompleted(Me, New GetMyExpenseStatementLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertExpenseStatement", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertExpenseStatement(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertExpenseStatementObject) As String
            Dim results() As Object = Me.Invoke("InsertExpenseStatement", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertExpenseStatementAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertExpenseStatementObject)
            Me.InsertExpenseStatementAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertExpenseStatementAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertExpenseStatementObject, ByVal userState As Object)
            If (Me.InsertExpenseStatementOperationCompleted Is Nothing) Then
                Me.InsertExpenseStatementOperationCompleted = AddressOf Me.OnInsertExpenseStatementOperationCompleted
            End If
            Me.InvokeAsync("InsertExpenseStatement", New Object() {Login, Password, BusinessEntityName, Request}, Me.InsertExpenseStatementOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertExpenseStatementOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertExpenseStatementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertExpenseStatementCompleted(Me, New InsertExpenseStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertExpenseStatementLine", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertExpenseStatementLine(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertExpenseStatementLineObject) As Integer
            Dim results() As Object = Me.Invoke("InsertExpenseStatementLine", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertExpenseStatementLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertExpenseStatementLineObject)
            Me.InsertExpenseStatementLineAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertExpenseStatementLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertExpenseStatementLineObject, ByVal userState As Object)
            If (Me.InsertExpenseStatementLineOperationCompleted Is Nothing) Then
                Me.InsertExpenseStatementLineOperationCompleted = AddressOf Me.OnInsertExpenseStatementLineOperationCompleted
            End If
            Me.InvokeAsync("InsertExpenseStatementLine", New Object() {Login, Password, BusinessEntityName, Request}, Me.InsertExpenseStatementLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertExpenseStatementLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertExpenseStatementLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertExpenseStatementLineCompleted(Me, New InsertExpenseStatementLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SubmitExpenseStatement", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitExpenseStatement(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String) As Integer
            Dim results() As Object = Me.Invoke("SubmitExpenseStatement", New Object() {Login, Password, BusinessEntityName, ExpenseReference})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitExpenseStatementAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String)
            Me.SubmitExpenseStatementAsync(Login, Password, BusinessEntityName, ExpenseReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitExpenseStatementAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseReference As String, ByVal userState As Object)
            If (Me.SubmitExpenseStatementOperationCompleted Is Nothing) Then
                Me.SubmitExpenseStatementOperationCompleted = AddressOf Me.OnSubmitExpenseStatementOperationCompleted
            End If
            Me.InvokeAsync("SubmitExpenseStatement", New Object() {Login, Password, BusinessEntityName, ExpenseReference}, Me.SubmitExpenseStatementOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitExpenseStatementOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitExpenseStatementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitExpenseStatementCompleted(Me, New SubmitExpenseStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetAvailableTimesheetPeriodsForEmployee", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAvailableTimesheetPeriodsForEmployee(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeID As Integer) As TimesheetPeriodWSI()
            Dim results() As Object = Me.Invoke("GetAvailableTimesheetPeriodsForEmployee", New Object() {Login, Password, BusinessEntityName, EmployeeID})
            Return CType(results(0),TimesheetPeriodWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAvailableTimesheetPeriodsForEmployeeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeID As Integer)
            Me.GetAvailableTimesheetPeriodsForEmployeeAsync(Login, Password, BusinessEntityName, EmployeeID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAvailableTimesheetPeriodsForEmployeeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeID As Integer, ByVal userState As Object)
            If (Me.GetAvailableTimesheetPeriodsForEmployeeOperationCompleted Is Nothing) Then
                Me.GetAvailableTimesheetPeriodsForEmployeeOperationCompleted = AddressOf Me.OnGetAvailableTimesheetPeriodsForEmployeeOperationCompleted
            End If
            Me.InvokeAsync("GetAvailableTimesheetPeriodsForEmployee", New Object() {Login, Password, BusinessEntityName, EmployeeID}, Me.GetAvailableTimesheetPeriodsForEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAvailableTimesheetPeriodsForEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAvailableTimesheetPeriodsForEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAvailableTimesheetPeriodsForEmployeeCompleted(Me, New GetAvailableTimesheetPeriodsForEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/CopyTimesheetHeader", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CopyTimesheetHeader(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer, ByVal TimesheetPeriodId As Integer, ByVal ToDate As Date) As String
            Dim results() As Object = Me.Invoke("CopyTimesheetHeader", New Object() {Login, Password, BusinessEntityName, TimesheetHeaderID, TimesheetPeriodId, ToDate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CopyTimesheetHeaderAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer, ByVal TimesheetPeriodId As Integer, ByVal ToDate As Date)
            Me.CopyTimesheetHeaderAsync(Login, Password, BusinessEntityName, TimesheetHeaderID, TimesheetPeriodId, ToDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyTimesheetHeaderAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer, ByVal TimesheetPeriodId As Integer, ByVal ToDate As Date, ByVal userState As Object)
            If (Me.CopyTimesheetHeaderOperationCompleted Is Nothing) Then
                Me.CopyTimesheetHeaderOperationCompleted = AddressOf Me.OnCopyTimesheetHeaderOperationCompleted
            End If
            Me.InvokeAsync("CopyTimesheetHeader", New Object() {Login, Password, BusinessEntityName, TimesheetHeaderID, TimesheetPeriodId, ToDate}, Me.CopyTimesheetHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCopyTimesheetHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CopyTimesheetHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CopyTimesheetHeaderCompleted(Me, New CopyTimesheetHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTimesheetHeaderPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetHeaderPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal FromYear As Integer, ByVal FromPeriod As Integer, ByVal Status As String, ByVal EmployeeCode As String, ByVal UpdatePostedFlag As Boolean) As Integer
            Dim results() As Object = Me.Invoke("GetTimesheetHeaderPages", New Object() {Login, Password, BusinessEntityName, PageSize, FromYear, FromPeriod, Status, EmployeeCode, UpdatePostedFlag})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetHeaderPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal FromYear As Integer, ByVal FromPeriod As Integer, ByVal Status As String, ByVal EmployeeCode As String, ByVal UpdatePostedFlag As Boolean)
            Me.GetTimesheetHeaderPagesAsync(Login, Password, BusinessEntityName, PageSize, FromYear, FromPeriod, Status, EmployeeCode, UpdatePostedFlag, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetHeaderPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal FromYear As Integer, ByVal FromPeriod As Integer, ByVal Status As String, ByVal EmployeeCode As String, ByVal UpdatePostedFlag As Boolean, ByVal userState As Object)
            If (Me.GetTimesheetHeaderPagesOperationCompleted Is Nothing) Then
                Me.GetTimesheetHeaderPagesOperationCompleted = AddressOf Me.OnGetTimesheetHeaderPagesOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetHeaderPages", New Object() {Login, Password, BusinessEntityName, PageSize, FromYear, FromPeriod, Status, EmployeeCode, UpdatePostedFlag}, Me.GetTimesheetHeaderPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetHeaderPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetHeaderPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetHeaderPagesCompleted(Me, New GetTimesheetHeaderPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTimesheetHeaders", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetHeaders(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal FromYear As Integer, ByVal FromPeriod As Integer, ByVal Status As String, ByVal EmployeeCode As String, ByVal UpdatePostedFlag As Boolean) As TimesheetHeaderWSI()
            Dim results() As Object = Me.Invoke("GetTimesheetHeaders", New Object() {Login, Password, BusinessEntityName, Page, PageSize, FromYear, FromPeriod, Status, EmployeeCode, UpdatePostedFlag})
            Return CType(results(0),TimesheetHeaderWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetHeadersAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal FromYear As Integer, ByVal FromPeriod As Integer, ByVal Status As String, ByVal EmployeeCode As String, ByVal UpdatePostedFlag As Boolean)
            Me.GetTimesheetHeadersAsync(Login, Password, BusinessEntityName, Page, PageSize, FromYear, FromPeriod, Status, EmployeeCode, UpdatePostedFlag, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetHeadersAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal FromYear As Integer, ByVal FromPeriod As Integer, ByVal Status As String, ByVal EmployeeCode As String, ByVal UpdatePostedFlag As Boolean, ByVal userState As Object)
            If (Me.GetTimesheetHeadersOperationCompleted Is Nothing) Then
                Me.GetTimesheetHeadersOperationCompleted = AddressOf Me.OnGetTimesheetHeadersOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetHeaders", New Object() {Login, Password, BusinessEntityName, Page, PageSize, FromYear, FromPeriod, Status, EmployeeCode, UpdatePostedFlag}, Me.GetTimesheetHeadersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetHeadersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetHeadersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetHeadersCompleted(Me, New GetTimesheetHeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SubmitTimesheetHeader", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitTimesheetHeader(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer) As SubmitResult
            Dim results() As Object = Me.Invoke("SubmitTimesheetHeader", New Object() {Login, Password, BusinessEntityName, TimesheetHeaderID})
            Return CType(results(0),SubmitResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitTimesheetHeaderAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer)
            Me.SubmitTimesheetHeaderAsync(Login, Password, BusinessEntityName, TimesheetHeaderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitTimesheetHeaderAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer, ByVal userState As Object)
            If (Me.SubmitTimesheetHeaderOperationCompleted Is Nothing) Then
                Me.SubmitTimesheetHeaderOperationCompleted = AddressOf Me.OnSubmitTimesheetHeaderOperationCompleted
            End If
            Me.InvokeAsync("SubmitTimesheetHeader", New Object() {Login, Password, BusinessEntityName, TimesheetHeaderID}, Me.SubmitTimesheetHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitTimesheetHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitTimesheetHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitTimesheetHeaderCompleted(Me, New SubmitTimesheetHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTimesheetLineList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetLineList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal ProjectCode As String, ByVal Status As String) As TimesheetLineWSI()
            Dim results() As Object = Me.Invoke("GetTimesheetLineList", New Object() {Login, Password, BusinessEntityName, EmployeeCode, FromDate, ToDate, ProjectCode, Status})
            Return CType(results(0),TimesheetLineWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetLineListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal ProjectCode As String, ByVal Status As String)
            Me.GetTimesheetLineListAsync(Login, Password, BusinessEntityName, EmployeeCode, FromDate, ToDate, ProjectCode, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetLineListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal ProjectCode As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetTimesheetLineListOperationCompleted Is Nothing) Then
                Me.GetTimesheetLineListOperationCompleted = AddressOf Me.OnGetTimesheetLineListOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetLineList", New Object() {Login, Password, BusinessEntityName, EmployeeCode, FromDate, ToDate, ProjectCode, Status}, Me.GetTimesheetLineListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetLineListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetLineListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetLineListCompleted(Me, New GetTimesheetLineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTimesheetLines", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetLines(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer) As TimesheetLineWSI()
            Dim results() As Object = Me.Invoke("GetTimesheetLines", New Object() {Login, Password, BusinessEntityName, TimesheetHeaderID})
            Return CType(results(0),TimesheetLineWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetLinesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer)
            Me.GetTimesheetLinesAsync(Login, Password, BusinessEntityName, TimesheetHeaderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetLinesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetHeaderID As Integer, ByVal userState As Object)
            If (Me.GetTimesheetLinesOperationCompleted Is Nothing) Then
                Me.GetTimesheetLinesOperationCompleted = AddressOf Me.OnGetTimesheetLinesOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetLines", New Object() {Login, Password, BusinessEntityName, TimesheetHeaderID}, Me.GetTimesheetLinesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetLinesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetLinesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetLinesCompleted(Me, New GetTimesheetLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/DeleteTimesheetLine", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteTimesheetLine(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetLineID As Integer) As String
            Dim results() As Object = Me.Invoke("DeleteTimesheetLine", New Object() {Login, Password, BusinessEntityName, TimesheetLineID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteTimesheetLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetLineID As Integer)
            Me.DeleteTimesheetLineAsync(Login, Password, BusinessEntityName, TimesheetLineID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteTimesheetLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetLineID As Integer, ByVal userState As Object)
            If (Me.DeleteTimesheetLineOperationCompleted Is Nothing) Then
                Me.DeleteTimesheetLineOperationCompleted = AddressOf Me.OnDeleteTimesheetLineOperationCompleted
            End If
            Me.InvokeAsync("DeleteTimesheetLine", New Object() {Login, Password, BusinessEntityName, TimesheetLineID}, Me.DeleteTimesheetLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteTimesheetLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteTimesheetLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteTimesheetLineCompleted(Me, New DeleteTimesheetLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/DeleteExpenseLine", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteExpenseLine(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseLineID As Integer) As String
            Dim results() As Object = Me.Invoke("DeleteExpenseLine", New Object() {Login, Password, BusinessEntityName, ExpenseLineID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteExpenseLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseLineID As Integer)
            Me.DeleteExpenseLineAsync(Login, Password, BusinessEntityName, ExpenseLineID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteExpenseLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ExpenseLineID As Integer, ByVal userState As Object)
            If (Me.DeleteExpenseLineOperationCompleted Is Nothing) Then
                Me.DeleteExpenseLineOperationCompleted = AddressOf Me.OnDeleteExpenseLineOperationCompleted
            End If
            Me.InvokeAsync("DeleteExpenseLine", New Object() {Login, Password, BusinessEntityName, ExpenseLineID}, Me.DeleteExpenseLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteExpenseLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteExpenseLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteExpenseLineCompleted(Me, New DeleteExpenseLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SaveTimesheetLine", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveTimesheetLine(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetLineWSI As TimesheetLineWSI) As Integer
            Dim results() As Object = Me.Invoke("SaveTimesheetLine", New Object() {Login, Password, BusinessEntityName, TimesheetLineWSI})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveTimesheetLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetLineWSI As TimesheetLineWSI)
            Me.SaveTimesheetLineAsync(Login, Password, BusinessEntityName, TimesheetLineWSI, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveTimesheetLineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimesheetLineWSI As TimesheetLineWSI, ByVal userState As Object)
            If (Me.SaveTimesheetLineOperationCompleted Is Nothing) Then
                Me.SaveTimesheetLineOperationCompleted = AddressOf Me.OnSaveTimesheetLineOperationCompleted
            End If
            Me.InvokeAsync("SaveTimesheetLine", New Object() {Login, Password, BusinessEntityName, TimesheetLineWSI}, Me.SaveTimesheetLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveTimesheetLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveTimesheetLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveTimesheetLineCompleted(Me, New SaveTimesheetLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyAbsenceRequests", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyAbsenceRequests(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String) As AbsenceRequestWSI()
            Dim results() As Object = Me.Invoke("GetMyAbsenceRequests", New Object() {Login, Password, BusinessEntityName, Status})
            Return CType(results(0),AbsenceRequestWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyAbsenceRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String)
            Me.GetMyAbsenceRequestsAsync(Login, Password, BusinessEntityName, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyAbsenceRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetMyAbsenceRequestsOperationCompleted Is Nothing) Then
                Me.GetMyAbsenceRequestsOperationCompleted = AddressOf Me.OnGetMyAbsenceRequestsOperationCompleted
            End If
            Me.InvokeAsync("GetMyAbsenceRequests", New Object() {Login, Password, BusinessEntityName, Status}, Me.GetMyAbsenceRequestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyAbsenceRequestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyAbsenceRequestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyAbsenceRequestsCompleted(Me, New GetMyAbsenceRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyAbsenceRequestsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyAbsenceRequestsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer) As AbsenceRequestWSI()
            Dim results() As Object = Me.Invoke("GetMyAbsenceRequestsPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize})
            Return CType(results(0),AbsenceRequestWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyAbsenceRequestsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyAbsenceRequestsPagedAsync(Login, Password, BusinessEntityName, Status, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyAbsenceRequestsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyAbsenceRequestsPagedOperationCompleted Is Nothing) Then
                Me.GetMyAbsenceRequestsPagedOperationCompleted = AddressOf Me.OnGetMyAbsenceRequestsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyAbsenceRequestsPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize}, Me.GetMyAbsenceRequestsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyAbsenceRequestsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyAbsenceRequestsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyAbsenceRequestsPagedCompleted(Me, New GetMyAbsenceRequestsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetAbsenceRequests", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAbsenceRequests(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As AbsenceRequestWSI()
            Dim results() As Object = Me.Invoke("GetAbsenceRequests", New Object() {Login, Password, BusinessEntityName, EmployeeCode, Status, Page, PageSize, pFromDate})
            Return CType(results(0),AbsenceRequestWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAbsenceRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetAbsenceRequestsAsync(Login, Password, BusinessEntityName, EmployeeCode, Status, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAbsenceRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetAbsenceRequestsOperationCompleted Is Nothing) Then
                Me.GetAbsenceRequestsOperationCompleted = AddressOf Me.OnGetAbsenceRequestsOperationCompleted
            End If
            Me.InvokeAsync("GetAbsenceRequests", New Object() {Login, Password, BusinessEntityName, EmployeeCode, Status, Page, PageSize, pFromDate}, Me.GetAbsenceRequestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAbsenceRequestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAbsenceRequestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAbsenceRequestsCompleted(Me, New GetAbsenceRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetContact", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContact(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Type As String) As ContactWSI()
            Dim results() As Object = Me.Invoke("GetContact", New Object() {Login, Password, BusinessEntityName, Type})
            Return CType(results(0),ContactWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContactAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Type As String)
            Me.GetContactAsync(Login, Password, BusinessEntityName, Type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContactAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Type As String, ByVal userState As Object)
            If (Me.GetContactOperationCompleted Is Nothing) Then
                Me.GetContactOperationCompleted = AddressOf Me.OnGetContactOperationCompleted
            End If
            Me.InvokeAsync("GetContact", New Object() {Login, Password, BusinessEntityName, Type}, Me.GetContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContactCompleted(Me, New GetContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertContact", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertContact(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertContactObject) As Integer
            Dim results() As Object = Me.Invoke("InsertContact", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertContactAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertContactObject)
            Me.InsertContactAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertContactAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertContactObject, ByVal userState As Object)
            If (Me.InsertContactOperationCompleted Is Nothing) Then
                Me.InsertContactOperationCompleted = AddressOf Me.OnInsertContactOperationCompleted
            End If
            Me.InvokeAsync("InsertContact", New Object() {Login, Password, BusinessEntityName, Request}, Me.InsertContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertContactCompleted(Me, New InsertContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UpdateContact", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateContact(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertContactObject) As Integer
            Dim results() As Object = Me.Invoke("UpdateContact", New Object() {Login, Password, BusinessEntityName, Request})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateContactAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertContactObject)
            Me.UpdateContactAsync(Login, Password, BusinessEntityName, Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateContactAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Request As InsertContactObject, ByVal userState As Object)
            If (Me.UpdateContactOperationCompleted Is Nothing) Then
                Me.UpdateContactOperationCompleted = AddressOf Me.OnUpdateContactOperationCompleted
            End If
            Me.InvokeAsync("UpdateContact", New Object() {Login, Password, BusinessEntityName, Request}, Me.UpdateContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateContactCompleted(Me, New UpdateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyContacts", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyContacts(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As ContactWSI()
            Dim results() As Object = Me.Invoke("GetMyContacts", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),ContactWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyContactsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetMyContactsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyContactsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetMyContactsOperationCompleted Is Nothing) Then
                Me.GetMyContactsOperationCompleted = AddressOf Me.OnGetMyContactsOperationCompleted
            End If
            Me.InvokeAsync("GetMyContacts", New Object() {Login, Password, BusinessEntityName}, Me.GetMyContactsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyContactsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyContactsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyContactsCompleted(Me, New GetMyContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyContactsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyContactsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer) As ContactWSI()
            Dim results() As Object = Me.Invoke("GetMyContactsPaged", New Object() {Login, Password, BusinessEntityName, Page, PageSize})
            Return CType(results(0),ContactWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyContactsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyContactsPagedAsync(Login, Password, BusinessEntityName, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyContactsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyContactsPagedOperationCompleted Is Nothing) Then
                Me.GetMyContactsPagedOperationCompleted = AddressOf Me.OnGetMyContactsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyContactsPaged", New Object() {Login, Password, BusinessEntityName, Page, PageSize}, Me.GetMyContactsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyContactsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyContactsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyContactsPagedCompleted(Me, New GetMyContactsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyContactsPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyContactsPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer) As Long
            Dim results() As Object = Me.Invoke("GetMyContactsPages", New Object() {Login, Password, BusinessEntityName, PageSize})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyContactsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer)
            Me.GetMyContactsPagesAsync(Login, Password, BusinessEntityName, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyContactsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyContactsPagesOperationCompleted Is Nothing) Then
                Me.GetMyContactsPagesOperationCompleted = AddressOf Me.OnGetMyContactsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetMyContactsPages", New Object() {Login, Password, BusinessEntityName, PageSize}, Me.GetMyContactsPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyContactsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyContactsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyContactsPagesCompleted(Me, New GetMyContactsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetApplicantsPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicantsPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date) As Long
            Dim results() As Object = Me.Invoke("GetApplicantsPages", New Object() {Login, Password, BusinessEntityName, ApplicantCode, Status, PageSize, pFromDate})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicantsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetApplicantsPagesAsync(Login, Password, BusinessEntityName, ApplicantCode, Status, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicantsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetApplicantsPagesOperationCompleted Is Nothing) Then
                Me.GetApplicantsPagesOperationCompleted = AddressOf Me.OnGetApplicantsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetApplicantsPages", New Object() {Login, Password, BusinessEntityName, ApplicantCode, Status, PageSize, pFromDate}, Me.GetApplicantsPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicantsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicantsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicantsPagesCompleted(Me, New GetApplicantsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetApplicantsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicantsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As ApplicantWSI()
            Dim results() As Object = Me.Invoke("GetApplicantsPaged", New Object() {Login, Password, BusinessEntityName, ApplicantCode, Status, Page, PageSize, pFromDate})
            Return CType(results(0),ApplicantWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicantsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetApplicantsPagedAsync(Login, Password, BusinessEntityName, ApplicantCode, Status, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicantsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetApplicantsPagedOperationCompleted Is Nothing) Then
                Me.GetApplicantsPagedOperationCompleted = AddressOf Me.OnGetApplicantsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetApplicantsPaged", New Object() {Login, Password, BusinessEntityName, ApplicantCode, Status, Page, PageSize, pFromDate}, Me.GetApplicantsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicantsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicantsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicantsPagedCompleted(Me, New GetApplicantsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetJobApplicationsPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobApplicationsPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal ApplicationStatus As String, ByVal PageSize As Integer, ByVal pFromDate As Date) As Long
            Dim results() As Object = Me.Invoke("GetJobApplicationsPages", New Object() {Login, Password, BusinessEntityName, ApplicantCode, ApplicationStatus, PageSize, pFromDate})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal ApplicationStatus As String, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetJobApplicationsPagesAsync(Login, Password, BusinessEntityName, ApplicantCode, ApplicationStatus, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal ApplicationStatus As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetJobApplicationsPagesOperationCompleted Is Nothing) Then
                Me.GetJobApplicationsPagesOperationCompleted = AddressOf Me.OnGetJobApplicationsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetJobApplicationsPages", New Object() {Login, Password, BusinessEntityName, ApplicantCode, ApplicationStatus, PageSize, pFromDate}, Me.GetJobApplicationsPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobApplicationsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobApplicationsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobApplicationsPagesCompleted(Me, New GetJobApplicationsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetJobApplicationsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobApplicationsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal ApplicationStatus As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As JobApplicationWSI()
            Dim results() As Object = Me.Invoke("GetJobApplicationsPaged", New Object() {Login, Password, BusinessEntityName, ApplicantCode, ApplicationStatus, Page, PageSize, pFromDate})
            Return CType(results(0),JobApplicationWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal ApplicationStatus As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetJobApplicationsPagedAsync(Login, Password, BusinessEntityName, ApplicantCode, ApplicationStatus, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal ApplicationStatus As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetJobApplicationsPagedOperationCompleted Is Nothing) Then
                Me.GetJobApplicationsPagedOperationCompleted = AddressOf Me.OnGetJobApplicationsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetJobApplicationsPaged", New Object() {Login, Password, BusinessEntityName, ApplicantCode, ApplicationStatus, Page, PageSize, pFromDate}, Me.GetJobApplicationsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobApplicationsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobApplicationsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobApplicationsPagedCompleted(Me, New GetJobApplicationsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetVacanciesPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVacanciesPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal VacancyType As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date) As Long
            Dim results() As Object = Me.Invoke("GetVacanciesPages", New Object() {Login, Password, BusinessEntityName, VacancyType, Status, PageSize, pFromDate})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVacanciesPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal VacancyType As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetVacanciesPagesAsync(Login, Password, BusinessEntityName, VacancyType, Status, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVacanciesPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal VacancyType As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetVacanciesPagesOperationCompleted Is Nothing) Then
                Me.GetVacanciesPagesOperationCompleted = AddressOf Me.OnGetVacanciesPagesOperationCompleted
            End If
            Me.InvokeAsync("GetVacanciesPages", New Object() {Login, Password, BusinessEntityName, VacancyType, Status, PageSize, pFromDate}, Me.GetVacanciesPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVacanciesPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVacanciesPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVacanciesPagesCompleted(Me, New GetVacanciesPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetVacanciesPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVacanciesPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal VacancyType As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As VacancyWSI()
            Dim results() As Object = Me.Invoke("GetVacanciesPaged", New Object() {Login, Password, BusinessEntityName, VacancyType, Status, Page, PageSize, pFromDate})
            Return CType(results(0),VacancyWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVacanciesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal VacancyType As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetVacanciesPagedAsync(Login, Password, BusinessEntityName, VacancyType, Status, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVacanciesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal VacancyType As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetVacanciesPagedOperationCompleted Is Nothing) Then
                Me.GetVacanciesPagedOperationCompleted = AddressOf Me.OnGetVacanciesPagedOperationCompleted
            End If
            Me.InvokeAsync("GetVacanciesPaged", New Object() {Login, Password, BusinessEntityName, VacancyType, Status, Page, PageSize, pFromDate}, Me.GetVacanciesPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVacanciesPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVacanciesPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVacanciesPagedCompleted(Me, New GetVacanciesPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetProjectsPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProjectsPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date) As Long
            Dim results() As Object = Me.Invoke("GetProjectsPages", New Object() {Login, Password, BusinessEntityName, Code, Status, PageSize, pFromDate})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProjectsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetProjectsPagesAsync(Login, Password, BusinessEntityName, Code, Status, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProjectsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Status As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetProjectsPagesOperationCompleted Is Nothing) Then
                Me.GetProjectsPagesOperationCompleted = AddressOf Me.OnGetProjectsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetProjectsPages", New Object() {Login, Password, BusinessEntityName, Code, Status, PageSize, pFromDate}, Me.GetProjectsPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProjectsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProjectsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProjectsPagesCompleted(Me, New GetProjectsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetProjectsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProjectsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As ProjectWSI()
            Dim results() As Object = Me.Invoke("GetProjectsPaged", New Object() {Login, Password, BusinessEntityName, Code, Status, Page, PageSize, pFromDate})
            Return CType(results(0),ProjectWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProjectsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetProjectsPagedAsync(Login, Password, BusinessEntityName, Code, Status, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProjectsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetProjectsPagedOperationCompleted Is Nothing) Then
                Me.GetProjectsPagedOperationCompleted = AddressOf Me.OnGetProjectsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetProjectsPaged", New Object() {Login, Password, BusinessEntityName, Code, Status, Page, PageSize, pFromDate}, Me.GetProjectsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProjectsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProjectsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProjectsPagedCompleted(Me, New GetProjectsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/CheckLicense", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckLicense(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal [Object] As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckLicense", New Object() {Login, Password, BusinessEntityName, [Object]})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckLicenseAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal [Object] As String)
            Me.CheckLicenseAsync(Login, Password, BusinessEntityName, [Object], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckLicenseAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal [Object] As String, ByVal userState As Object)
            If (Me.CheckLicenseOperationCompleted Is Nothing) Then
                Me.CheckLicenseOperationCompleted = AddressOf Me.OnCheckLicenseOperationCompleted
            End If
            Me.InvokeAsync("CheckLicense", New Object() {Login, Password, BusinessEntityName, [Object]}, Me.CheckLicenseOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckLicenseOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckLicenseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckLicenseCompleted(Me, New CheckLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/CourseRequestToEnrol", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CourseRequestToEnrol(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal CourseId As Integer) As String
            Dim results() As Object = Me.Invoke("CourseRequestToEnrol", New Object() {Login, Password, BusinessEntityName, CourseId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CourseRequestToEnrolAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal CourseId As Integer)
            Me.CourseRequestToEnrolAsync(Login, Password, BusinessEntityName, CourseId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CourseRequestToEnrolAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal CourseId As Integer, ByVal userState As Object)
            If (Me.CourseRequestToEnrolOperationCompleted Is Nothing) Then
                Me.CourseRequestToEnrolOperationCompleted = AddressOf Me.OnCourseRequestToEnrolOperationCompleted
            End If
            Me.InvokeAsync("CourseRequestToEnrol", New Object() {Login, Password, BusinessEntityName, CourseId}, Me.CourseRequestToEnrolOperationCompleted, userState)
        End Sub
        
        Private Sub OnCourseRequestToEnrolOperationCompleted(ByVal arg As Object)
            If (Not (Me.CourseRequestToEnrolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CourseRequestToEnrolCompleted(Me, New CourseRequestToEnrolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetCourseEnrolmentListCount", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCourseEnrolmentListCount(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetCourseEnrolmentListCount", New Object() {Login, Password, BusinessEntityName, Page, PageSize})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCourseEnrolmentListCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetCourseEnrolmentListCountAsync(Login, Password, BusinessEntityName, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCourseEnrolmentListCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetCourseEnrolmentListCountOperationCompleted Is Nothing) Then
                Me.GetCourseEnrolmentListCountOperationCompleted = AddressOf Me.OnGetCourseEnrolmentListCountOperationCompleted
            End If
            Me.InvokeAsync("GetCourseEnrolmentListCount", New Object() {Login, Password, BusinessEntityName, Page, PageSize}, Me.GetCourseEnrolmentListCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCourseEnrolmentListCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCourseEnrolmentListCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCourseEnrolmentListCountCompleted(Me, New GetCourseEnrolmentListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetCourseEnrolmentList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCourseEnrolmentList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer) As TrainingCourseWSI()
            Dim results() As Object = Me.Invoke("GetCourseEnrolmentList", New Object() {Login, Password, BusinessEntityName, Page, PageSize})
            Return CType(results(0),TrainingCourseWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCourseEnrolmentListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetCourseEnrolmentListAsync(Login, Password, BusinessEntityName, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCourseEnrolmentListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetCourseEnrolmentListOperationCompleted Is Nothing) Then
                Me.GetCourseEnrolmentListOperationCompleted = AddressOf Me.OnGetCourseEnrolmentListOperationCompleted
            End If
            Me.InvokeAsync("GetCourseEnrolmentList", New Object() {Login, Password, BusinessEntityName, Page, PageSize}, Me.GetCourseEnrolmentListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCourseEnrolmentListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCourseEnrolmentListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCourseEnrolmentListCompleted(Me, New GetCourseEnrolmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTARecordsWithFilters", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTARecordsWithFilters(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal ReportsToCode As String, ByVal LocationCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal Status As String) As TimeAttendanceRecordWSI()
            Dim results() As Object = Me.Invoke("GetTARecordsWithFilters", New Object() {Login, Password, BusinessEntityName, EmployeeCode, ReportsToCode, LocationCode, FromDate, ToDate, Status})
            Return CType(results(0),TimeAttendanceRecordWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTARecordsWithFiltersAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal ReportsToCode As String, ByVal LocationCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal Status As String)
            Me.GetTARecordsWithFiltersAsync(Login, Password, BusinessEntityName, EmployeeCode, ReportsToCode, LocationCode, FromDate, ToDate, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTARecordsWithFiltersAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal ReportsToCode As String, ByVal LocationCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal Status As String, ByVal userState As Object)
            If (Me.GetTARecordsWithFiltersOperationCompleted Is Nothing) Then
                Me.GetTARecordsWithFiltersOperationCompleted = AddressOf Me.OnGetTARecordsWithFiltersOperationCompleted
            End If
            Me.InvokeAsync("GetTARecordsWithFilters", New Object() {Login, Password, BusinessEntityName, EmployeeCode, ReportsToCode, LocationCode, FromDate, ToDate, Status}, Me.GetTARecordsWithFiltersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTARecordsWithFiltersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTARecordsWithFiltersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTARecordsWithFiltersCompleted(Me, New GetTARecordsWithFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTAAbsenceRequestsPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTAAbsenceRequestsPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestStatus As String, ByVal CompletionStatus As String, ByVal PageSize As Integer) As Long
            Dim results() As Object = Me.Invoke("GetTAAbsenceRequestsPages", New Object() {Login, Password, BusinessEntityName, RequestStatus, CompletionStatus, PageSize})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTAAbsenceRequestsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestStatus As String, ByVal CompletionStatus As String, ByVal PageSize As Integer)
            Me.GetTAAbsenceRequestsPagesAsync(Login, Password, BusinessEntityName, RequestStatus, CompletionStatus, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTAAbsenceRequestsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestStatus As String, ByVal CompletionStatus As String, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetTAAbsenceRequestsPagesOperationCompleted Is Nothing) Then
                Me.GetTAAbsenceRequestsPagesOperationCompleted = AddressOf Me.OnGetTAAbsenceRequestsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetTAAbsenceRequestsPages", New Object() {Login, Password, BusinessEntityName, RequestStatus, CompletionStatus, PageSize}, Me.GetTAAbsenceRequestsPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTAAbsenceRequestsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTAAbsenceRequestsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTAAbsenceRequestsPagesCompleted(Me, New GetTAAbsenceRequestsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTAAbsenceRequests", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTAAbsenceRequests(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestStatus As String, ByVal CompletionStatus As String, ByVal Page As Integer, ByVal PageSize As Integer) As TAAbsenceRequestWSI()
            Dim results() As Object = Me.Invoke("GetTAAbsenceRequests", New Object() {Login, Password, BusinessEntityName, RequestStatus, CompletionStatus, Page, PageSize})
            Return CType(results(0),TAAbsenceRequestWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTAAbsenceRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestStatus As String, ByVal CompletionStatus As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetTAAbsenceRequestsAsync(Login, Password, BusinessEntityName, RequestStatus, CompletionStatus, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTAAbsenceRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal RequestStatus As String, ByVal CompletionStatus As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetTAAbsenceRequestsOperationCompleted Is Nothing) Then
                Me.GetTAAbsenceRequestsOperationCompleted = AddressOf Me.OnGetTAAbsenceRequestsOperationCompleted
            End If
            Me.InvokeAsync("GetTAAbsenceRequests", New Object() {Login, Password, BusinessEntityName, RequestStatus, CompletionStatus, Page, PageSize}, Me.GetTAAbsenceRequestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTAAbsenceRequestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTAAbsenceRequestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTAAbsenceRequestsCompleted(Me, New GetTAAbsenceRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTAEmployeePages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTAEmployeePages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer) As Long
            Dim results() As Object = Me.Invoke("GetTAEmployeePages", New Object() {Login, Password, BusinessEntityName, PageSize})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTAEmployeePagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer)
            Me.GetTAEmployeePagesAsync(Login, Password, BusinessEntityName, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTAEmployeePagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetTAEmployeePagesOperationCompleted Is Nothing) Then
                Me.GetTAEmployeePagesOperationCompleted = AddressOf Me.OnGetTAEmployeePagesOperationCompleted
            End If
            Me.InvokeAsync("GetTAEmployeePages", New Object() {Login, Password, BusinessEntityName, PageSize}, Me.GetTAEmployeePagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTAEmployeePagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTAEmployeePagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTAEmployeePagesCompleted(Me, New GetTAEmployeePagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTAEmployee", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTAEmployee(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer) As TAEmployeeWSI()
            Dim results() As Object = Me.Invoke("GetTAEmployee", New Object() {Login, Password, BusinessEntityName, Page, PageSize})
            Return CType(results(0),TAEmployeeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTAEmployeeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetTAEmployeeAsync(Login, Password, BusinessEntityName, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTAEmployeeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetTAEmployeeOperationCompleted Is Nothing) Then
                Me.GetTAEmployeeOperationCompleted = AddressOf Me.OnGetTAEmployeeOperationCompleted
            End If
            Me.InvokeAsync("GetTAEmployee", New Object() {Login, Password, BusinessEntityName, Page, PageSize}, Me.GetTAEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTAEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTAEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTAEmployeeCompleted(Me, New GetTAEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetProjectTasks", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProjectTasks(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ProjectCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As ProjectTaskWSI()
            Dim results() As Object = Me.Invoke("GetProjectTasks", New Object() {Login, Password, BusinessEntityName, ProjectCode, Status, Page, PageSize, pFromDate})
            Return CType(results(0),ProjectTaskWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProjectTasksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ProjectCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetProjectTasksAsync(Login, Password, BusinessEntityName, ProjectCode, Status, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProjectTasksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ProjectCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetProjectTasksOperationCompleted Is Nothing) Then
                Me.GetProjectTasksOperationCompleted = AddressOf Me.OnGetProjectTasksOperationCompleted
            End If
            Me.InvokeAsync("GetProjectTasks", New Object() {Login, Password, BusinessEntityName, ProjectCode, Status, Page, PageSize, pFromDate}, Me.GetProjectTasksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProjectTasksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProjectTasksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProjectTasksCompleted(Me, New GetProjectTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UploadEmployeePhoto", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadEmployeePhoto(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Photo() As Byte, ByVal PhotoType As String) As Boolean
            Dim results() As Object = Me.Invoke("UploadEmployeePhoto", New Object() {Login, Password, BusinessEntityName, EmployeeCode, Photo, PhotoType})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadEmployeePhotoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal Photo() As Byte, ByVal PhotoType As String)
            Me.UploadEmployeePhotoAsync(Login, Password, BusinessEntityName, EmployeeCode, Photo, PhotoType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadEmployeePhotoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal Photo() As Byte, ByVal PhotoType As String, ByVal userState As Object)
            If (Me.UploadEmployeePhotoOperationCompleted Is Nothing) Then
                Me.UploadEmployeePhotoOperationCompleted = AddressOf Me.OnUploadEmployeePhotoOperationCompleted
            End If
            Me.InvokeAsync("UploadEmployeePhoto", New Object() {Login, Password, BusinessEntityName, EmployeeCode, Photo, PhotoType}, Me.UploadEmployeePhotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadEmployeePhotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadEmployeePhotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadEmployeePhotoCompleted(Me, New UploadEmployeePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UploadEmployeeDocument", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadEmployeeDocument(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal document As DocumentWSI) As Boolean
            Dim results() As Object = Me.Invoke("UploadEmployeeDocument", New Object() {Login, Password, BusinessEntityName, EmployeeCode, document})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadEmployeeDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal document As DocumentWSI)
            Me.UploadEmployeeDocumentAsync(Login, Password, BusinessEntityName, EmployeeCode, document, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadEmployeeDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal document As DocumentWSI, ByVal userState As Object)
            If (Me.UploadEmployeeDocumentOperationCompleted Is Nothing) Then
                Me.UploadEmployeeDocumentOperationCompleted = AddressOf Me.OnUploadEmployeeDocumentOperationCompleted
            End If
            Me.InvokeAsync("UploadEmployeeDocument", New Object() {Login, Password, BusinessEntityName, EmployeeCode, document}, Me.UploadEmployeeDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadEmployeeDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadEmployeeDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadEmployeeDocumentCompleted(Me, New UploadEmployeeDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UploadApplicantDocument", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadApplicantDocument(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal document As DocumentWSI) As Boolean
            Dim results() As Object = Me.Invoke("UploadApplicantDocument", New Object() {Login, Password, BusinessEntityName, ApplicantCode, document})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadApplicantDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal document As DocumentWSI)
            Me.UploadApplicantDocumentAsync(Login, Password, BusinessEntityName, ApplicantCode, document, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadApplicantDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal document As DocumentWSI, ByVal userState As Object)
            If (Me.UploadApplicantDocumentOperationCompleted Is Nothing) Then
                Me.UploadApplicantDocumentOperationCompleted = AddressOf Me.OnUploadApplicantDocumentOperationCompleted
            End If
            Me.InvokeAsync("UploadApplicantDocument", New Object() {Login, Password, BusinessEntityName, ApplicantCode, document}, Me.UploadApplicantDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadApplicantDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadApplicantDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadApplicantDocumentCompleted(Me, New UploadApplicantDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/DeleteDocument", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDocument(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal documentGUID As String, ByVal ownerCode As String, ByVal ownerGUID As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteDocument", New Object() {Login, Password, BusinessEntityName, documentGUID, ownerCode, ownerGUID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal documentGUID As String, ByVal ownerCode As String, ByVal ownerGUID As String)
            Me.DeleteDocumentAsync(Login, Password, BusinessEntityName, documentGUID, ownerCode, ownerGUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal documentGUID As String, ByVal ownerCode As String, ByVal ownerGUID As String, ByVal userState As Object)
            If (Me.DeleteDocumentOperationCompleted Is Nothing) Then
                Me.DeleteDocumentOperationCompleted = AddressOf Me.OnDeleteDocumentOperationCompleted
            End If
            Me.InvokeAsync("DeleteDocument", New Object() {Login, Password, BusinessEntityName, documentGUID, ownerCode, ownerGUID}, Me.DeleteDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDocumentCompleted(Me, New DeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UploadAndReplaceEmployeeDocument", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadAndReplaceEmployeeDocument(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal pDocument As DocumentWSI) As Boolean
            Dim results() As Object = Me.Invoke("UploadAndReplaceEmployeeDocument", New Object() {Login, Password, BusinessEntityName, EmployeeCode, pDocument})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadAndReplaceEmployeeDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal pDocument As DocumentWSI)
            Me.UploadAndReplaceEmployeeDocumentAsync(Login, Password, BusinessEntityName, EmployeeCode, pDocument, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadAndReplaceEmployeeDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal pDocument As DocumentWSI, ByVal userState As Object)
            If (Me.UploadAndReplaceEmployeeDocumentOperationCompleted Is Nothing) Then
                Me.UploadAndReplaceEmployeeDocumentOperationCompleted = AddressOf Me.OnUploadAndReplaceEmployeeDocumentOperationCompleted
            End If
            Me.InvokeAsync("UploadAndReplaceEmployeeDocument", New Object() {Login, Password, BusinessEntityName, EmployeeCode, pDocument}, Me.UploadAndReplaceEmployeeDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadAndReplaceEmployeeDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadAndReplaceEmployeeDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadAndReplaceEmployeeDocumentCompleted(Me, New UploadAndReplaceEmployeeDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UploadDocument", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadDocument(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pDocument As DocumentWSI) As Boolean
            Dim results() As Object = Me.Invoke("UploadDocument", New Object() {Login, Password, BusinessEntityName, pDocument})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pDocument As DocumentWSI)
            Me.UploadDocumentAsync(Login, Password, BusinessEntityName, pDocument, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pDocument As DocumentWSI, ByVal userState As Object)
            If (Me.UploadDocumentOperationCompleted Is Nothing) Then
                Me.UploadDocumentOperationCompleted = AddressOf Me.OnUploadDocumentOperationCompleted
            End If
            Me.InvokeAsync("UploadDocument", New Object() {Login, Password, BusinessEntityName, pDocument}, Me.UploadDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadDocumentCompleted(Me, New UploadDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetDocuments", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocuments(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerCode As String, ByVal OwnerGUID As String) As DocumentWSI()
            Dim results() As Object = Me.Invoke("GetDocuments", New Object() {Login, Password, BusinessEntityName, OwnerCode, OwnerGUID})
            Return CType(results(0),DocumentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerCode As String, ByVal OwnerGUID As String)
            Me.GetDocumentsAsync(Login, Password, BusinessEntityName, OwnerCode, OwnerGUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerCode As String, ByVal OwnerGUID As String, ByVal userState As Object)
            If (Me.GetDocumentsOperationCompleted Is Nothing) Then
                Me.GetDocumentsOperationCompleted = AddressOf Me.OnGetDocumentsOperationCompleted
            End If
            Me.InvokeAsync("GetDocuments", New Object() {Login, Password, BusinessEntityName, OwnerCode, OwnerGUID}, Me.GetDocumentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentsCompleted(Me, New GetDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeContactDetailsCount", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeContactDetailsCount(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As Integer
            Dim results() As Object = Me.Invoke("GetEmployeeContactDetailsCount", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeContactDetailsCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetEmployeeContactDetailsCountAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeContactDetailsCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetEmployeeContactDetailsCountOperationCompleted Is Nothing) Then
                Me.GetEmployeeContactDetailsCountOperationCompleted = AddressOf Me.OnGetEmployeeContactDetailsCountOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeContactDetailsCount", New Object() {Login, Password, BusinessEntityName}, Me.GetEmployeeContactDetailsCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeContactDetailsCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeContactDetailsCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeContactDetailsCountCompleted(Me, New GetEmployeeContactDetailsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeContactDetails", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeContactDetails(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer) As EmployeeContactDetailsWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeContactDetails", New Object() {Login, Password, BusinessEntityName, Page, PageSize})
            Return CType(results(0),EmployeeContactDetailsWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeContactDetailsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetEmployeeContactDetailsAsync(Login, Password, BusinessEntityName, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeContactDetailsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetEmployeeContactDetailsOperationCompleted Is Nothing) Then
                Me.GetEmployeeContactDetailsOperationCompleted = AddressOf Me.OnGetEmployeeContactDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeContactDetails", New Object() {Login, Password, BusinessEntityName, Page, PageSize}, Me.GetEmployeeContactDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeContactDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeContactDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeContactDetailsCompleted(Me, New GetEmployeeContactDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetDocumentLinks", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocumentLinks(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerGUID As String) As DocumentWSI()
            Dim results() As Object = Me.Invoke("GetDocumentLinks", New Object() {Login, Password, BusinessEntityName, OwnerGUID})
            Return CType(results(0),DocumentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentLinksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerGUID As String)
            Me.GetDocumentLinksAsync(Login, Password, BusinessEntityName, OwnerGUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentLinksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerGUID As String, ByVal userState As Object)
            If (Me.GetDocumentLinksOperationCompleted Is Nothing) Then
                Me.GetDocumentLinksOperationCompleted = AddressOf Me.OnGetDocumentLinksOperationCompleted
            End If
            Me.InvokeAsync("GetDocumentLinks", New Object() {Login, Password, BusinessEntityName, OwnerGUID}, Me.GetDocumentLinksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentLinksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentLinksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentLinksCompleted(Me, New GetDocumentLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetApplicantAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicantAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationReference As String) As ApplicantAppraisalContainer
            Dim results() As Object = Me.Invoke("GetApplicantAppraisal", New Object() {Login, Password, BusinessEntityName, ApplicationReference})
            Return CType(results(0),ApplicantAppraisalContainer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicantAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationReference As String)
            Me.GetApplicantAppraisalAsync(Login, Password, BusinessEntityName, ApplicationReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicantAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationReference As String, ByVal userState As Object)
            If (Me.GetApplicantAppraisalOperationCompleted Is Nothing) Then
                Me.GetApplicantAppraisalOperationCompleted = AddressOf Me.OnGetApplicantAppraisalOperationCompleted
            End If
            Me.InvokeAsync("GetApplicantAppraisal", New Object() {Login, Password, BusinessEntityName, ApplicationReference}, Me.GetApplicantAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicantAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicantAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicantAppraisalCompleted(Me, New GetApplicantAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostApplicantAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostApplicantAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal competencies() As ApplicantAppraisalCompetencyPostWSI, ByVal questions() As ApplicantAppraisalQuestionPostWSI) As Boolean
            Dim results() As Object = Me.Invoke("PostApplicantAppraisal", New Object() {Login, Password, BusinessEntityName, competencies, questions})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostApplicantAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal competencies() As ApplicantAppraisalCompetencyPostWSI, ByVal questions() As ApplicantAppraisalQuestionPostWSI)
            Me.PostApplicantAppraisalAsync(Login, Password, BusinessEntityName, competencies, questions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostApplicantAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal competencies() As ApplicantAppraisalCompetencyPostWSI, ByVal questions() As ApplicantAppraisalQuestionPostWSI, ByVal userState As Object)
            If (Me.PostApplicantAppraisalOperationCompleted Is Nothing) Then
                Me.PostApplicantAppraisalOperationCompleted = AddressOf Me.OnPostApplicantAppraisalOperationCompleted
            End If
            Me.InvokeAsync("PostApplicantAppraisal", New Object() {Login, Password, BusinessEntityName, competencies, questions}, Me.PostApplicantAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostApplicantAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostApplicantAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostApplicantAppraisalCompleted(Me, New PostApplicantAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal appraisal As EmployeeAppraisalFullWSI, ByVal isSelfAppraisal As Boolean, ByVal submit As Boolean) As String
            Dim results() As Object = Me.Invoke("PostAppraisal", New Object() {Login, Password, BusinessEntityName, appraisal, isSelfAppraisal, submit})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal appraisal As EmployeeAppraisalFullWSI, ByVal isSelfAppraisal As Boolean, ByVal submit As Boolean)
            Me.PostAppraisalAsync(Login, Password, BusinessEntityName, appraisal, isSelfAppraisal, submit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal appraisal As EmployeeAppraisalFullWSI, ByVal isSelfAppraisal As Boolean, ByVal submit As Boolean, ByVal userState As Object)
            If (Me.PostAppraisalOperationCompleted Is Nothing) Then
                Me.PostAppraisalOperationCompleted = AddressOf Me.OnPostAppraisalOperationCompleted
            End If
            Me.InvokeAsync("PostAppraisal", New Object() {Login, Password, BusinessEntityName, appraisal, isSelfAppraisal, submit}, Me.PostAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostAppraisalCompleted(Me, New PostAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetSelfAppraisalsList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSelfAppraisalsList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String) As EmployeeAppraisalWSI()
            Dim results() As Object = Me.Invoke("GetSelfAppraisalsList", New Object() {Login, Password, BusinessEntityName, Status})
            Return CType(results(0),EmployeeAppraisalWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSelfAppraisalsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String)
            Me.GetSelfAppraisalsListAsync(Login, Password, BusinessEntityName, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSelfAppraisalsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetSelfAppraisalsListOperationCompleted Is Nothing) Then
                Me.GetSelfAppraisalsListOperationCompleted = AddressOf Me.OnGetSelfAppraisalsListOperationCompleted
            End If
            Me.InvokeAsync("GetSelfAppraisalsList", New Object() {Login, Password, BusinessEntityName, Status}, Me.GetSelfAppraisalsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSelfAppraisalsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSelfAppraisalsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSelfAppraisalsListCompleted(Me, New GetSelfAppraisalsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyPendingAppraisalsList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyPendingAppraisalsList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String) As EmployeeAppraisalWSI()
            Dim results() As Object = Me.Invoke("GetMyPendingAppraisalsList", New Object() {Login, Password, BusinessEntityName, Status})
            Return CType(results(0),EmployeeAppraisalWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyPendingAppraisalsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String)
            Me.GetMyPendingAppraisalsListAsync(Login, Password, BusinessEntityName, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyPendingAppraisalsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetMyPendingAppraisalsListOperationCompleted Is Nothing) Then
                Me.GetMyPendingAppraisalsListOperationCompleted = AddressOf Me.OnGetMyPendingAppraisalsListOperationCompleted
            End If
            Me.InvokeAsync("GetMyPendingAppraisalsList", New Object() {Login, Password, BusinessEntityName, Status}, Me.GetMyPendingAppraisalsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyPendingAppraisalsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyPendingAppraisalsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyPendingAppraisalsListCompleted(Me, New GetMyPendingAppraisalsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeAppraisalDetails", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeAppraisalDetails(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerGUID As String) As EmployeeAppraisalFullWSI
            Dim results() As Object = Me.Invoke("GetEmployeeAppraisalDetails", New Object() {Login, Password, BusinessEntityName, OwnerGUID})
            Return CType(results(0),EmployeeAppraisalFullWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAppraisalDetailsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerGUID As String)
            Me.GetEmployeeAppraisalDetailsAsync(Login, Password, BusinessEntityName, OwnerGUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAppraisalDetailsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerGUID As String, ByVal userState As Object)
            If (Me.GetEmployeeAppraisalDetailsOperationCompleted Is Nothing) Then
                Me.GetEmployeeAppraisalDetailsOperationCompleted = AddressOf Me.OnGetEmployeeAppraisalDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeAppraisalDetails", New Object() {Login, Password, BusinessEntityName, OwnerGUID}, Me.GetEmployeeAppraisalDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeAppraisalDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeAppraisalDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeAppraisalDetailsCompleted(Me, New GetEmployeeAppraisalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostSalaryEntry", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostSalaryEntry( _
                    ByVal Login As String,  _
                    ByVal Password As String,  _
                    ByVal BusinessEntityName As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal StartDate As Date,  _
                    ByVal PositionCode As String,  _
                    ByVal CurrencyCode As String,  _
                    ByVal PreviousSalary As Decimal,  _
                    ByVal Salary As Decimal,  _
                    ByVal SalaryType As String,  _
                    ByVal Comments As String,  _
                    ByVal OtherSalary As Decimal,  _
                    ByVal Deductions As Decimal,  _
                    ByVal EmployerContributions As Decimal,  _
                    ByVal OtherCosts As Decimal,  _
                    ByVal TotalEmployeeCost As Decimal,  _
                    ByVal WorkedPoints As Decimal,  _
                    ByVal GUID As String,  _
                    ByVal PayrollCompanyCode As String,  _
                    ByVal PayrollNo As String) As Boolean
            Dim results() As Object = Me.Invoke("PostSalaryEntry", New Object() {Login, Password, BusinessEntityName, EmployeeCode, StartDate, PositionCode, CurrencyCode, PreviousSalary, Salary, SalaryType, Comments, OtherSalary, Deductions, EmployerContributions, OtherCosts, TotalEmployeeCost, WorkedPoints, GUID, PayrollCompanyCode, PayrollNo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostSalaryEntryAsync( _
                    ByVal Login As String,  _
                    ByVal Password As String,  _
                    ByVal BusinessEntityName As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal StartDate As Date,  _
                    ByVal PositionCode As String,  _
                    ByVal CurrencyCode As String,  _
                    ByVal PreviousSalary As Decimal,  _
                    ByVal Salary As Decimal,  _
                    ByVal SalaryType As String,  _
                    ByVal Comments As String,  _
                    ByVal OtherSalary As Decimal,  _
                    ByVal Deductions As Decimal,  _
                    ByVal EmployerContributions As Decimal,  _
                    ByVal OtherCosts As Decimal,  _
                    ByVal TotalEmployeeCost As Decimal,  _
                    ByVal WorkedPoints As Decimal,  _
                    ByVal GUID As String,  _
                    ByVal PayrollCompanyCode As String,  _
                    ByVal PayrollNo As String)
            Me.PostSalaryEntryAsync(Login, Password, BusinessEntityName, EmployeeCode, StartDate, PositionCode, CurrencyCode, PreviousSalary, Salary, SalaryType, Comments, OtherSalary, Deductions, EmployerContributions, OtherCosts, TotalEmployeeCost, WorkedPoints, GUID, PayrollCompanyCode, PayrollNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostSalaryEntryAsync( _
                    ByVal Login As String,  _
                    ByVal Password As String,  _
                    ByVal BusinessEntityName As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal StartDate As Date,  _
                    ByVal PositionCode As String,  _
                    ByVal CurrencyCode As String,  _
                    ByVal PreviousSalary As Decimal,  _
                    ByVal Salary As Decimal,  _
                    ByVal SalaryType As String,  _
                    ByVal Comments As String,  _
                    ByVal OtherSalary As Decimal,  _
                    ByVal Deductions As Decimal,  _
                    ByVal EmployerContributions As Decimal,  _
                    ByVal OtherCosts As Decimal,  _
                    ByVal TotalEmployeeCost As Decimal,  _
                    ByVal WorkedPoints As Decimal,  _
                    ByVal GUID As String,  _
                    ByVal PayrollCompanyCode As String,  _
                    ByVal PayrollNo As String,  _
                    ByVal userState As Object)
            If (Me.PostSalaryEntryOperationCompleted Is Nothing) Then
                Me.PostSalaryEntryOperationCompleted = AddressOf Me.OnPostSalaryEntryOperationCompleted
            End If
            Me.InvokeAsync("PostSalaryEntry", New Object() {Login, Password, BusinessEntityName, EmployeeCode, StartDate, PositionCode, CurrencyCode, PreviousSalary, Salary, SalaryType, Comments, OtherSalary, Deductions, EmployerContributions, OtherCosts, TotalEmployeeCost, WorkedPoints, GUID, PayrollCompanyCode, PayrollNo}, Me.PostSalaryEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostSalaryEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostSalaryEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostSalaryEntryCompleted(Me, New PostSalaryEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostEmployeeAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostEmployeeAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal competencies() As EmployeeAppraisalCompetencyPostWSI, ByVal questions() As EmployeeAppraisalQuestionPostWSI, ByVal targets() As EmployeeAppraisalTargetPostWSI, ByVal trainingNeeds() As EmployeeAppraisalTrainingNeedPostWSI) As Boolean
            Dim results() As Object = Me.Invoke("PostEmployeeAppraisal", New Object() {Login, Password, BusinessEntityName, competencies, questions, targets, trainingNeeds})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostEmployeeAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal competencies() As EmployeeAppraisalCompetencyPostWSI, ByVal questions() As EmployeeAppraisalQuestionPostWSI, ByVal targets() As EmployeeAppraisalTargetPostWSI, ByVal trainingNeeds() As EmployeeAppraisalTrainingNeedPostWSI)
            Me.PostEmployeeAppraisalAsync(Login, Password, BusinessEntityName, competencies, questions, targets, trainingNeeds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostEmployeeAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal competencies() As EmployeeAppraisalCompetencyPostWSI, ByVal questions() As EmployeeAppraisalQuestionPostWSI, ByVal targets() As EmployeeAppraisalTargetPostWSI, ByVal trainingNeeds() As EmployeeAppraisalTrainingNeedPostWSI, ByVal userState As Object)
            If (Me.PostEmployeeAppraisalOperationCompleted Is Nothing) Then
                Me.PostEmployeeAppraisalOperationCompleted = AddressOf Me.OnPostEmployeeAppraisalOperationCompleted
            End If
            Me.InvokeAsync("PostEmployeeAppraisal", New Object() {Login, Password, BusinessEntityName, competencies, questions, targets, trainingNeeds}, Me.PostEmployeeAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostEmployeeAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostEmployeeAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostEmployeeAppraisalCompleted(Me, New PostEmployeeAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyDocumentFolders", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyDocumentFolders(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As DocumentFolderWSI()
            Dim results() As Object = Me.Invoke("GetMyDocumentFolders", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),DocumentFolderWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyDocumentFoldersAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetMyDocumentFoldersAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyDocumentFoldersAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetMyDocumentFoldersOperationCompleted Is Nothing) Then
                Me.GetMyDocumentFoldersOperationCompleted = AddressOf Me.OnGetMyDocumentFoldersOperationCompleted
            End If
            Me.InvokeAsync("GetMyDocumentFolders", New Object() {Login, Password, BusinessEntityName}, Me.GetMyDocumentFoldersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyDocumentFoldersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyDocumentFoldersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyDocumentFoldersCompleted(Me, New GetMyDocumentFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetDocumentsInFolder", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocumentsInFolder(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DocumentFolderGUID As String) As DocumentWSI()
            Dim results() As Object = Me.Invoke("GetDocumentsInFolder", New Object() {Login, Password, BusinessEntityName, DocumentFolderGUID})
            Return CType(results(0),DocumentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentsInFolderAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DocumentFolderGUID As String)
            Me.GetDocumentsInFolderAsync(Login, Password, BusinessEntityName, DocumentFolderGUID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentsInFolderAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DocumentFolderGUID As String, ByVal userState As Object)
            If (Me.GetDocumentsInFolderOperationCompleted Is Nothing) Then
                Me.GetDocumentsInFolderOperationCompleted = AddressOf Me.OnGetDocumentsInFolderOperationCompleted
            End If
            Me.InvokeAsync("GetDocumentsInFolder", New Object() {Login, Password, BusinessEntityName, DocumentFolderGUID}, Me.GetDocumentsInFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentsInFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentsInFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentsInFolderCompleted(Me, New GetDocumentsInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeICTItemsPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeICTItemsPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal pFromDate As Date) As Integer
            Dim results() As Object = Me.Invoke("GetEmployeeICTItemsPages", New Object() {Login, Password, BusinessEntityName, PageSize, pFromDate})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeICTItemsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetEmployeeICTItemsPagesAsync(Login, Password, BusinessEntityName, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeICTItemsPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetEmployeeICTItemsPagesOperationCompleted Is Nothing) Then
                Me.GetEmployeeICTItemsPagesOperationCompleted = AddressOf Me.OnGetEmployeeICTItemsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeICTItemsPages", New Object() {Login, Password, BusinessEntityName, PageSize, pFromDate}, Me.GetEmployeeICTItemsPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeICTItemsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeICTItemsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeICTItemsPagesCompleted(Me, New GetEmployeeICTItemsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeICTItemsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeICTItemsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date) As EmployeeICTItemWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeICTItemsPaged", New Object() {Login, Password, BusinessEntityName, Page, PageSize, pFromDate})
            Return CType(results(0),EmployeeICTItemWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeICTItemsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetEmployeeICTItemsPagedAsync(Login, Password, BusinessEntityName, Page, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeICTItemsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetEmployeeICTItemsPagedOperationCompleted Is Nothing) Then
                Me.GetEmployeeICTItemsPagedOperationCompleted = AddressOf Me.OnGetEmployeeICTItemsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeICTItemsPaged", New Object() {Login, Password, BusinessEntityName, Page, PageSize, pFromDate}, Me.GetEmployeeICTItemsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeICTItemsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeICTItemsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeICTItemsPagedCompleted(Me, New GetEmployeeICTItemsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetUpdateCostCentre", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUpdateCostCentre(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Description As String, ByVal Notes As String, ByVal Operation As String) As CostCentreWSI()
            Dim results() As Object = Me.Invoke("GetUpdateCostCentre", New Object() {Login, Password, BusinessEntityName, Code, Description, Notes, Operation})
            Return CType(results(0),CostCentreWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUpdateCostCentreAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Description As String, ByVal Notes As String, ByVal Operation As String)
            Me.GetUpdateCostCentreAsync(Login, Password, BusinessEntityName, Code, Description, Notes, Operation, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUpdateCostCentreAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Code As String, ByVal Description As String, ByVal Notes As String, ByVal Operation As String, ByVal userState As Object)
            If (Me.GetUpdateCostCentreOperationCompleted Is Nothing) Then
                Me.GetUpdateCostCentreOperationCompleted = AddressOf Me.OnGetUpdateCostCentreOperationCompleted
            End If
            Me.InvokeAsync("GetUpdateCostCentre", New Object() {Login, Password, BusinessEntityName, Code, Description, Notes, Operation}, Me.GetUpdateCostCentreOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUpdateCostCentreOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUpdateCostCentreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUpdateCostCentreCompleted(Me, New GetUpdateCostCentreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetPayrollEmployeesPagesCount", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPayrollEmployeesPagesCount(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PayrollCompanyCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String) As Long
            Dim results() As Object = Me.Invoke("GetPayrollEmployeesPagesCount", New Object() {Login, Password, BusinessEntityName, PayrollCompanyCode, DepartmentCode, PageSize, pFromDate, EmployeeFillType})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPayrollEmployeesPagesCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PayrollCompanyCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String)
            Me.GetPayrollEmployeesPagesCountAsync(Login, Password, BusinessEntityName, PayrollCompanyCode, DepartmentCode, PageSize, pFromDate, EmployeeFillType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPayrollEmployeesPagesCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PayrollCompanyCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String, ByVal userState As Object)
            If (Me.GetPayrollEmployeesPagesCountOperationCompleted Is Nothing) Then
                Me.GetPayrollEmployeesPagesCountOperationCompleted = AddressOf Me.OnGetPayrollEmployeesPagesCountOperationCompleted
            End If
            Me.InvokeAsync("GetPayrollEmployeesPagesCount", New Object() {Login, Password, BusinessEntityName, PayrollCompanyCode, DepartmentCode, PageSize, pFromDate, EmployeeFillType}, Me.GetPayrollEmployeesPagesCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPayrollEmployeesPagesCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPayrollEmployeesPagesCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPayrollEmployeesPagesCountCompleted(Me, New GetPayrollEmployeesPagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetPayrollEmployeesPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPayrollEmployeesPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PayrollCompanyCode As String, ByVal DepartmentCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String) As EmployeeWSI()
            Dim results() As Object = Me.Invoke("GetPayrollEmployeesPaged", New Object() {Login, Password, BusinessEntityName, PayrollCompanyCode, DepartmentCode, Page, PageSize, pFromDate, EmployeeFillType})
            Return CType(results(0),EmployeeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPayrollEmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PayrollCompanyCode As String, ByVal DepartmentCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String)
            Me.GetPayrollEmployeesPagedAsync(Login, Password, BusinessEntityName, PayrollCompanyCode, DepartmentCode, Page, PageSize, pFromDate, EmployeeFillType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPayrollEmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PayrollCompanyCode As String, ByVal DepartmentCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String, ByVal userState As Object)
            If (Me.GetPayrollEmployeesPagedOperationCompleted Is Nothing) Then
                Me.GetPayrollEmployeesPagedOperationCompleted = AddressOf Me.OnGetPayrollEmployeesPagedOperationCompleted
            End If
            Me.InvokeAsync("GetPayrollEmployeesPaged", New Object() {Login, Password, BusinessEntityName, PayrollCompanyCode, DepartmentCode, Page, PageSize, pFromDate, EmployeeFillType}, Me.GetPayrollEmployeesPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPayrollEmployeesPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPayrollEmployeesPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPayrollEmployeesPagedCompleted(Me, New GetPayrollEmployeesPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeExtraFields", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeExtraFields(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeIDs() As Integer) As CalculateEntitledAbsenceWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeExtraFields", New Object() {Login, Password, BusinessEntityName, EmployeeIDs})
            Return CType(results(0),CalculateEntitledAbsenceWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeExtraFieldsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeIDs() As Integer)
            Me.GetEmployeeExtraFieldsAsync(Login, Password, BusinessEntityName, EmployeeIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeExtraFieldsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeIDs() As Integer, ByVal userState As Object)
            If (Me.GetEmployeeExtraFieldsOperationCompleted Is Nothing) Then
                Me.GetEmployeeExtraFieldsOperationCompleted = AddressOf Me.OnGetEmployeeExtraFieldsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeExtraFields", New Object() {Login, Password, BusinessEntityName, EmployeeIDs}, Me.GetEmployeeExtraFieldsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeExtraFieldsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeExtraFieldsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeExtraFieldsCompleted(Me, New GetEmployeeExtraFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeesPagesCount", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeesPagesCount(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String) As Long
            Dim results() As Object = Me.Invoke("GetEmployeesPagesCount", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, PageSize, pFromDate, EmployeeFillType})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesPagesCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String)
            Me.GetEmployeesPagesCountAsync(Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, PageSize, pFromDate, EmployeeFillType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesPagesCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String, ByVal userState As Object)
            If (Me.GetEmployeesPagesCountOperationCompleted Is Nothing) Then
                Me.GetEmployeesPagesCountOperationCompleted = AddressOf Me.OnGetEmployeesPagesCountOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeesPagesCount", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, PageSize, pFromDate, EmployeeFillType}, Me.GetEmployeesPagesCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesPagesCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesPagesCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesPagesCountCompleted(Me, New GetEmployeesPagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeesPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeesPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date) As Long
            Dim results() As Object = Me.Invoke("GetEmployeesPages", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, PageSize, pFromDate})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date)
            Me.GetEmployeesPagesAsync(Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, PageSize, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetEmployeesPagesOperationCompleted Is Nothing) Then
                Me.GetEmployeesPagesOperationCompleted = AddressOf Me.OnGetEmployeesPagesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeesPages", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, PageSize, pFromDate}, Me.GetEmployeesPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesPagesCompleted(Me, New GetEmployeesPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeesPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeesPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String) As EmployeeWSI()
            Dim results() As Object = Me.Invoke("GetEmployeesPaged", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, Page, PageSize, pFromDate, EmployeeFillType})
            Return CType(results(0),EmployeeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String)
            Me.GetEmployeesPagedAsync(Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, Page, PageSize, pFromDate, EmployeeFillType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DepartmentCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal pFromDate As Date, ByVal EmployeeFillType As String, ByVal userState As Object)
            If (Me.GetEmployeesPagedOperationCompleted Is Nothing) Then
                Me.GetEmployeesPagedOperationCompleted = AddressOf Me.OnGetEmployeesPagedOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeesPaged", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DepartmentCode, Page, PageSize, pFromDate, EmployeeFillType}, Me.GetEmployeesPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesPagedCompleted(Me, New GetEmployeesPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeRelatives", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeRelatives(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeRelativeWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeRelatives", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeRelativeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeRelativesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeRelativesAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeRelativesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeRelativesOperationCompleted Is Nothing) Then
                Me.GetEmployeeRelativesOperationCompleted = AddressOf Me.OnGetEmployeeRelativesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeRelatives", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeRelativesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeRelativesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeRelativesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeRelativesCompleted(Me, New GetEmployeeRelativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeQualifications", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeQualifications(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeQualificationWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeQualifications", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeQualificationWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeQualificationsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeQualificationsAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeQualificationsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeQualificationsOperationCompleted Is Nothing) Then
                Me.GetEmployeeQualificationsOperationCompleted = AddressOf Me.OnGetEmployeeQualificationsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeQualifications", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeQualificationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeQualificationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeQualificationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeQualificationsCompleted(Me, New GetEmployeeQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeBenefits", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeBenefits(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeBenefitWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeBenefits", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeBenefitWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBenefitsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeBenefitsAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBenefitsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeBenefitsOperationCompleted Is Nothing) Then
                Me.GetEmployeeBenefitsOperationCompleted = AddressOf Me.OnGetEmployeeBenefitsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeBenefits", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeBenefitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeBenefitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeBenefitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeBenefitsCompleted(Me, New GetEmployeeBenefitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeAssignedArticles", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeAssignedArticles(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeAssignedArticleWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeAssignedArticles", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeAssignedArticleWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAssignedArticlesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeAssignedArticlesAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAssignedArticlesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeAssignedArticlesOperationCompleted Is Nothing) Then
                Me.GetEmployeeAssignedArticlesOperationCompleted = AddressOf Me.OnGetEmployeeAssignedArticlesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeAssignedArticles", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeAssignedArticlesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeAssignedArticlesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeAssignedArticlesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeAssignedArticlesCompleted(Me, New GetEmployeeAssignedArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeePositionAssignments", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeePositionAssignments(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As PositionAssignmentWSI()
            Dim results() As Object = Me.Invoke("GetEmployeePositionAssignments", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),PositionAssignmentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeePositionAssignmentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeePositionAssignmentsAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeePositionAssignmentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeePositionAssignmentsOperationCompleted Is Nothing) Then
                Me.GetEmployeePositionAssignmentsOperationCompleted = AddressOf Me.OnGetEmployeePositionAssignmentsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeePositionAssignments", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeePositionAssignmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeePositionAssignmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeePositionAssignmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeePositionAssignmentsCompleted(Me, New GetEmployeePositionAssignmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeTrainingRecords", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeTrainingRecords(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeTrainingWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeTrainingRecords", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeTrainingWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeTrainingRecordsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeTrainingRecordsAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeTrainingRecordsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeTrainingRecordsOperationCompleted Is Nothing) Then
                Me.GetEmployeeTrainingRecordsOperationCompleted = AddressOf Me.OnGetEmployeeTrainingRecordsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeTrainingRecords", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeTrainingRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeTrainingRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeTrainingRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeTrainingRecordsCompleted(Me, New GetEmployeeTrainingRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeSalaryHistory", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeSalaryHistory(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeSalaryHistoryWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeSalaryHistory", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeSalaryHistoryWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeSalaryHistoryAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeSalaryHistoryAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeSalaryHistoryAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeSalaryHistoryOperationCompleted Is Nothing) Then
                Me.GetEmployeeSalaryHistoryOperationCompleted = AddressOf Me.OnGetEmployeeSalaryHistoryOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeSalaryHistory", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeSalaryHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeSalaryHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeSalaryHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeSalaryHistoryCompleted(Me, New GetEmployeeSalaryHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeReferences", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeReferences(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String) As EmployeeReferenceWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeReferences", New Object() {Login, Password, BusinessEntityName, EmployeeCode})
            Return CType(results(0),EmployeeReferenceWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeReferencesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String)
            Me.GetEmployeeReferencesAsync(Login, Password, BusinessEntityName, EmployeeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeReferencesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal userState As Object)
            If (Me.GetEmployeeReferencesOperationCompleted Is Nothing) Then
                Me.GetEmployeeReferencesOperationCompleted = AddressOf Me.OnGetEmployeeReferencesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeReferences", New Object() {Login, Password, BusinessEntityName, EmployeeCode}, Me.GetEmployeeReferencesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeReferencesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeReferencesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeReferencesCompleted(Me, New GetEmployeeReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeBasicInfoPages", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeBasicInfoPages(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DepartmentCode As String, ByVal Status As String, ByVal PageSize As Integer) As Long
            Dim results() As Object = Me.Invoke("GetEmployeeBasicInfoPages", New Object() {Login, Password, BusinessEntityName, DepartmentCode, Status, PageSize})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBasicInfoPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DepartmentCode As String, ByVal Status As String, ByVal PageSize As Integer)
            Me.GetEmployeeBasicInfoPagesAsync(Login, Password, BusinessEntityName, DepartmentCode, Status, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBasicInfoPagesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DepartmentCode As String, ByVal Status As String, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetEmployeeBasicInfoPagesOperationCompleted Is Nothing) Then
                Me.GetEmployeeBasicInfoPagesOperationCompleted = AddressOf Me.OnGetEmployeeBasicInfoPagesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeBasicInfoPages", New Object() {Login, Password, BusinessEntityName, DepartmentCode, Status, PageSize}, Me.GetEmployeeBasicInfoPagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeBasicInfoPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeBasicInfoPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeBasicInfoPagesCompleted(Me, New GetEmployeeBasicInfoPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeBasicInfoPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeBasicInfoPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DepartmentCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer) As EmployeeBasicBO()
            Dim results() As Object = Me.Invoke("GetEmployeeBasicInfoPaged", New Object() {Login, Password, BusinessEntityName, DepartmentCode, Status, Page, PageSize})
            Return CType(results(0),EmployeeBasicBO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBasicInfoPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DepartmentCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetEmployeeBasicInfoPagedAsync(Login, Password, BusinessEntityName, DepartmentCode, Status, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBasicInfoPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DepartmentCode As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetEmployeeBasicInfoPagedOperationCompleted Is Nothing) Then
                Me.GetEmployeeBasicInfoPagedOperationCompleted = AddressOf Me.OnGetEmployeeBasicInfoPagedOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeBasicInfoPaged", New Object() {Login, Password, BusinessEntityName, DepartmentCode, Status, Page, PageSize}, Me.GetEmployeeBasicInfoPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeBasicInfoPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeBasicInfoPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeBasicInfoPagedCompleted(Me, New GetEmployeeBasicInfoPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UpdateEmployeeCommunicationInfo", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateEmployeeCommunicationInfo(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkEmail As String, ByVal WorkTelephone As String, ByVal WorkMobilePhone As String, ByVal WorkIM As String, ByVal userFields() As UserFieldWSI) As Boolean
            Dim results() As Object = Me.Invoke("UpdateEmployeeCommunicationInfo", New Object() {Login, Password, BusinessEntityName, EmployeeCode, WorkEmail, WorkTelephone, WorkMobilePhone, WorkIM, userFields})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateEmployeeCommunicationInfoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkEmail As String, ByVal WorkTelephone As String, ByVal WorkMobilePhone As String, ByVal WorkIM As String, ByVal userFields() As UserFieldWSI)
            Me.UpdateEmployeeCommunicationInfoAsync(Login, Password, BusinessEntityName, EmployeeCode, WorkEmail, WorkTelephone, WorkMobilePhone, WorkIM, userFields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateEmployeeCommunicationInfoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkEmail As String, ByVal WorkTelephone As String, ByVal WorkMobilePhone As String, ByVal WorkIM As String, ByVal userFields() As UserFieldWSI, ByVal userState As Object)
            If (Me.UpdateEmployeeCommunicationInfoOperationCompleted Is Nothing) Then
                Me.UpdateEmployeeCommunicationInfoOperationCompleted = AddressOf Me.OnUpdateEmployeeCommunicationInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateEmployeeCommunicationInfo", New Object() {Login, Password, BusinessEntityName, EmployeeCode, WorkEmail, WorkTelephone, WorkMobilePhone, WorkIM, userFields}, Me.UpdateEmployeeCommunicationInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateEmployeeCommunicationInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateEmployeeCommunicationInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateEmployeeCommunicationInfoCompleted(Me, New UpdateEmployeeCommunicationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyEmployeesPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyEmployeesPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer) As EmployeeWSI()
            Dim results() As Object = Me.Invoke("GetMyEmployeesPaged", New Object() {Login, Password, BusinessEntityName, Page, PageSize})
            Return CType(results(0),EmployeeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyEmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyEmployeesPagedAsync(Login, Password, BusinessEntityName, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyEmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyEmployeesPagedOperationCompleted Is Nothing) Then
                Me.GetMyEmployeesPagedOperationCompleted = AddressOf Me.OnGetMyEmployeesPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyEmployeesPaged", New Object() {Login, Password, BusinessEntityName, Page, PageSize}, Me.GetMyEmployeesPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyEmployeesPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyEmployeesPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyEmployeesPagedCompleted(Me, New GetMyEmployeesPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyEmployeeInfo", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyEmployeeInfo(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal IncludeRelatedRecords As Boolean) As EmployeeWSI
            Dim results() As Object = Me.Invoke("GetMyEmployeeInfo", New Object() {Login, Password, BusinessEntityName, IncludeRelatedRecords})
            Return CType(results(0),EmployeeWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyEmployeeInfoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal IncludeRelatedRecords As Boolean)
            Me.GetMyEmployeeInfoAsync(Login, Password, BusinessEntityName, IncludeRelatedRecords, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyEmployeeInfoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal IncludeRelatedRecords As Boolean, ByVal userState As Object)
            If (Me.GetMyEmployeeInfoOperationCompleted Is Nothing) Then
                Me.GetMyEmployeeInfoOperationCompleted = AddressOf Me.OnGetMyEmployeeInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMyEmployeeInfo", New Object() {Login, Password, BusinessEntityName, IncludeRelatedRecords}, Me.GetMyEmployeeInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyEmployeeInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyEmployeeInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyEmployeeInfoCompleted(Me, New GetMyEmployeeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeAbsenseBalances", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeAbsenseBalances(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkingDate As Date) As CalculateEntitledAbsenceBO()
            Dim results() As Object = Me.Invoke("GetEmployeeAbsenseBalances", New Object() {Login, Password, BusinessEntityName, EmployeeCode, WorkingDate})
            Return CType(results(0),CalculateEntitledAbsenceBO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAbsenseBalancesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkingDate As Date)
            Me.GetEmployeeAbsenseBalancesAsync(Login, Password, BusinessEntityName, EmployeeCode, WorkingDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAbsenseBalancesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkingDate As Date, ByVal userState As Object)
            If (Me.GetEmployeeAbsenseBalancesOperationCompleted Is Nothing) Then
                Me.GetEmployeeAbsenseBalancesOperationCompleted = AddressOf Me.OnGetEmployeeAbsenseBalancesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeAbsenseBalances", New Object() {Login, Password, BusinessEntityName, EmployeeCode, WorkingDate}, Me.GetEmployeeAbsenseBalancesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeAbsenseBalancesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeAbsenseBalancesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeAbsenseBalancesCompleted(Me, New GetEmployeeAbsenseBalancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeSingleAbsenceBalance", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeSingleAbsenceBalance(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal AbsenceCode As String, ByVal WorkingDate As Date) As CalculateEntitledAbsenceBO
            Dim results() As Object = Me.Invoke("GetEmployeeSingleAbsenceBalance", New Object() {Login, Password, BusinessEntityName, EmployeeCode, AbsenceCode, WorkingDate})
            Return CType(results(0),CalculateEntitledAbsenceBO)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeSingleAbsenceBalanceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal AbsenceCode As String, ByVal WorkingDate As Date)
            Me.GetEmployeeSingleAbsenceBalanceAsync(Login, Password, BusinessEntityName, EmployeeCode, AbsenceCode, WorkingDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeSingleAbsenceBalanceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal AbsenceCode As String, ByVal WorkingDate As Date, ByVal userState As Object)
            If (Me.GetEmployeeSingleAbsenceBalanceOperationCompleted Is Nothing) Then
                Me.GetEmployeeSingleAbsenceBalanceOperationCompleted = AddressOf Me.OnGetEmployeeSingleAbsenceBalanceOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeSingleAbsenceBalance", New Object() {Login, Password, BusinessEntityName, EmployeeCode, AbsenceCode, WorkingDate}, Me.GetEmployeeSingleAbsenceBalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeSingleAbsenceBalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeSingleAbsenceBalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeSingleAbsenceBalanceCompleted(Me, New GetEmployeeSingleAbsenceBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeAbsenceBalance", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeAbsenceBalance(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkingDate As Date) As Decimal
            Dim results() As Object = Me.Invoke("GetEmployeeAbsenceBalance", New Object() {Login, Password, BusinessEntityName, EmployeeCode, WorkingDate})
            Return CType(results(0),Decimal)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAbsenceBalanceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkingDate As Date)
            Me.GetEmployeeAbsenceBalanceAsync(Login, Password, BusinessEntityName, EmployeeCode, WorkingDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAbsenceBalanceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal WorkingDate As Date, ByVal userState As Object)
            If (Me.GetEmployeeAbsenceBalanceOperationCompleted Is Nothing) Then
                Me.GetEmployeeAbsenceBalanceOperationCompleted = AddressOf Me.OnGetEmployeeAbsenceBalanceOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeAbsenceBalance", New Object() {Login, Password, BusinessEntityName, EmployeeCode, WorkingDate}, Me.GetEmployeeAbsenceBalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeAbsenceBalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeAbsenceBalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeAbsenceBalanceCompleted(Me, New GetEmployeeAbsenceBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeAbsenceTransactions", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeAbsenceTransactions(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DateFrom As Date, ByVal DateTo As Date) As EmployeeAbsenceWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeAbsenceTransactions", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DateFrom, DateTo})
            Return CType(results(0),EmployeeAbsenceWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAbsenceTransactionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DateFrom As Date, ByVal DateTo As Date)
            Me.GetEmployeeAbsenceTransactionsAsync(Login, Password, BusinessEntityName, EmployeeCode, DateFrom, DateTo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAbsenceTransactionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal userState As Object)
            If (Me.GetEmployeeAbsenceTransactionsOperationCompleted Is Nothing) Then
                Me.GetEmployeeAbsenceTransactionsOperationCompleted = AddressOf Me.OnGetEmployeeAbsenceTransactionsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeAbsenceTransactions", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DateFrom, DateTo}, Me.GetEmployeeAbsenceTransactionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeAbsenceTransactionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeAbsenceTransactionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeAbsenceTransactionsCompleted(Me, New GetEmployeeAbsenceTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetUnitsOfMeasure", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitsOfMeasure(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationCode As String) As UnitOfMeasureWSI()
            Dim results() As Object = Me.Invoke("GetUnitsOfMeasure", New Object() {Login, Password, BusinessEntityName, ApplicationCode})
            Return CType(results(0),UnitOfMeasureWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitsOfMeasureAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationCode As String)
            Me.GetUnitsOfMeasureAsync(Login, Password, BusinessEntityName, ApplicationCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitsOfMeasureAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationCode As String, ByVal userState As Object)
            If (Me.GetUnitsOfMeasureOperationCompleted Is Nothing) Then
                Me.GetUnitsOfMeasureOperationCompleted = AddressOf Me.OnGetUnitsOfMeasureOperationCompleted
            End If
            Me.InvokeAsync("GetUnitsOfMeasure", New Object() {Login, Password, BusinessEntityName, ApplicationCode}, Me.GetUnitsOfMeasureOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitsOfMeasureOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitsOfMeasureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitsOfMeasureCompleted(Me, New GetUnitsOfMeasureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/IsOnline", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsOnline(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As Boolean
            Dim results() As Object = Me.Invoke("IsOnline", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsOnlineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.IsOnlineAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsOnlineAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.IsOnlineOperationCompleted Is Nothing) Then
                Me.IsOnlineOperationCompleted = AddressOf Me.OnIsOnlineOperationCompleted
            End If
            Me.InvokeAsync("IsOnline", New Object() {Login, Password, BusinessEntityName}, Me.IsOnlineOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsOnlineOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsOnlineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsOnlineCompleted(Me, New IsOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetApplicantUserFieldDefinition", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicantUserFieldDefinition(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As UserFieldDefinitionWSI()
            Dim results() As Object = Me.Invoke("GetApplicantUserFieldDefinition", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),UserFieldDefinitionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicantUserFieldDefinitionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetApplicantUserFieldDefinitionAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicantUserFieldDefinitionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetApplicantUserFieldDefinitionOperationCompleted Is Nothing) Then
                Me.GetApplicantUserFieldDefinitionOperationCompleted = AddressOf Me.OnGetApplicantUserFieldDefinitionOperationCompleted
            End If
            Me.InvokeAsync("GetApplicantUserFieldDefinition", New Object() {Login, Password, BusinessEntityName}, Me.GetApplicantUserFieldDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicantUserFieldDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicantUserFieldDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicantUserFieldDefinitionCompleted(Me, New GetApplicantUserFieldDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetJobApplicationUserFieldDefinition", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobApplicationUserFieldDefinition(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As UserFieldDefinitionWSI()
            Dim results() As Object = Me.Invoke("GetJobApplicationUserFieldDefinition", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),UserFieldDefinitionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationUserFieldDefinitionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetJobApplicationUserFieldDefinitionAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationUserFieldDefinitionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetJobApplicationUserFieldDefinitionOperationCompleted Is Nothing) Then
                Me.GetJobApplicationUserFieldDefinitionOperationCompleted = AddressOf Me.OnGetJobApplicationUserFieldDefinitionOperationCompleted
            End If
            Me.InvokeAsync("GetJobApplicationUserFieldDefinition", New Object() {Login, Password, BusinessEntityName}, Me.GetJobApplicationUserFieldDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobApplicationUserFieldDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobApplicationUserFieldDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobApplicationUserFieldDefinitionCompleted(Me, New GetJobApplicationUserFieldDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetOpenVacancies", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOpenVacancies(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As VacancyWSI()
            Dim results() As Object = Me.Invoke("GetOpenVacancies", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),VacancyWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOpenVacanciesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetOpenVacanciesAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOpenVacanciesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetOpenVacanciesOperationCompleted Is Nothing) Then
                Me.GetOpenVacanciesOperationCompleted = AddressOf Me.OnGetOpenVacanciesOperationCompleted
            End If
            Me.InvokeAsync("GetOpenVacancies", New Object() {Login, Password, BusinessEntityName}, Me.GetOpenVacanciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOpenVacanciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOpenVacanciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOpenVacanciesCompleted(Me, New GetOpenVacanciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetDateFormat", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDateFormat(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As DateFormatWSI
            Dim results() As Object = Me.Invoke("GetDateFormat", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),DateFormatWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDateFormatAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetDateFormatAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDateFormatAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetDateFormatOperationCompleted Is Nothing) Then
                Me.GetDateFormatOperationCompleted = AddressOf Me.OnGetDateFormatOperationCompleted
            End If
            Me.InvokeAsync("GetDateFormat", New Object() {Login, Password, BusinessEntityName}, Me.GetDateFormatOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDateFormatOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDateFormatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDateFormatCompleted(Me, New GetDateFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetAdditionalInfo", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdditionalInfo(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As String()
            Dim results() As Object = Me.Invoke("GetAdditionalInfo", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdditionalInfoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetAdditionalInfoAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdditionalInfoAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetAdditionalInfoOperationCompleted Is Nothing) Then
                Me.GetAdditionalInfoOperationCompleted = AddressOf Me.OnGetAdditionalInfoOperationCompleted
            End If
            Me.InvokeAsync("GetAdditionalInfo", New Object() {Login, Password, BusinessEntityName}, Me.GetAdditionalInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdditionalInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdditionalInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdditionalInfoCompleted(Me, New GetAdditionalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetBusinessEntityParameter", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBusinessEntityParameter(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ParamName As String) As String
            Dim results() As Object = Me.Invoke("GetBusinessEntityParameter", New Object() {Login, Password, BusinessEntityName, ParamName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBusinessEntityParameterAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ParamName As String)
            Me.GetBusinessEntityParameterAsync(Login, Password, BusinessEntityName, ParamName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBusinessEntityParameterAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ParamName As String, ByVal userState As Object)
            If (Me.GetBusinessEntityParameterOperationCompleted Is Nothing) Then
                Me.GetBusinessEntityParameterOperationCompleted = AddressOf Me.OnGetBusinessEntityParameterOperationCompleted
            End If
            Me.InvokeAsync("GetBusinessEntityParameter", New Object() {Login, Password, BusinessEntityName, ParamName}, Me.GetBusinessEntityParameterOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBusinessEntityParameterOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBusinessEntityParameterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBusinessEntityParameterCompleted(Me, New GetBusinessEntityParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetUserSecurityProfile", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserSecurityProfile(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As UserSecurityProfileWSI
            Dim results() As Object = Me.Invoke("GetUserSecurityProfile", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),UserSecurityProfileWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserSecurityProfileAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetUserSecurityProfileAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserSecurityProfileAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetUserSecurityProfileOperationCompleted Is Nothing) Then
                Me.GetUserSecurityProfileOperationCompleted = AddressOf Me.OnGetUserSecurityProfileOperationCompleted
            End If
            Me.InvokeAsync("GetUserSecurityProfile", New Object() {Login, Password, BusinessEntityName}, Me.GetUserSecurityProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserSecurityProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserSecurityProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserSecurityProfileCompleted(Me, New GetUserSecurityProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTranslatedStrings", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranslatedStrings(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer) As TranslatedString()
            Dim results() As Object = Me.Invoke("GetTranslatedStrings", New Object() {Login, Password, pKey, pLanguageID})
            Return CType(results(0),TranslatedString())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranslatedStringsAsync(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer)
            Me.GetTranslatedStringsAsync(Login, Password, pKey, pLanguageID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranslatedStringsAsync(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer, ByVal userState As Object)
            If (Me.GetTranslatedStringsOperationCompleted Is Nothing) Then
                Me.GetTranslatedStringsOperationCompleted = AddressOf Me.OnGetTranslatedStringsOperationCompleted
            End If
            Me.InvokeAsync("GetTranslatedStrings", New Object() {Login, Password, pKey, pLanguageID}, Me.GetTranslatedStringsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranslatedStringsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranslatedStringsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranslatedStringsCompleted(Me, New GetTranslatedStringsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTranslatedString", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranslatedString(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer) As TranslatedString
            Dim results() As Object = Me.Invoke("GetTranslatedString", New Object() {Login, Password, pKey, pLanguageID})
            Return CType(results(0),TranslatedString)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranslatedStringAsync(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer)
            Me.GetTranslatedStringAsync(Login, Password, pKey, pLanguageID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranslatedStringAsync(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer, ByVal userState As Object)
            If (Me.GetTranslatedStringOperationCompleted Is Nothing) Then
                Me.GetTranslatedStringOperationCompleted = AddressOf Me.OnGetTranslatedStringOperationCompleted
            End If
            Me.InvokeAsync("GetTranslatedString", New Object() {Login, Password, pKey, pLanguageID}, Me.GetTranslatedStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranslatedStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranslatedStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranslatedStringCompleted(Me, New GetTranslatedStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTranslatedDescription", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranslatedDescription(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer) As TranslatedString
            Dim results() As Object = Me.Invoke("GetTranslatedDescription", New Object() {Login, Password, pKey, pLanguageID})
            Return CType(results(0),TranslatedString)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranslatedDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer)
            Me.GetTranslatedDescriptionAsync(Login, Password, pKey, pLanguageID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranslatedDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal pKey As String, ByVal pLanguageID As Integer, ByVal userState As Object)
            If (Me.GetTranslatedDescriptionOperationCompleted Is Nothing) Then
                Me.GetTranslatedDescriptionOperationCompleted = AddressOf Me.OnGetTranslatedDescriptionOperationCompleted
            End If
            Me.InvokeAsync("GetTranslatedDescription", New Object() {Login, Password, pKey, pLanguageID}, Me.GetTranslatedDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranslatedDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranslatedDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranslatedDescriptionCompleted(Me, New GetTranslatedDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/ApplicantForgotPassword", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ApplicantForgotPassword(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantEmail As String) As Boolean
            Dim results() As Object = Me.Invoke("ApplicantForgotPassword", New Object() {Login, Password, BusinessEntityName, ApplicantEmail})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ApplicantForgotPasswordAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantEmail As String)
            Me.ApplicantForgotPasswordAsync(Login, Password, BusinessEntityName, ApplicantEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ApplicantForgotPasswordAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantEmail As String, ByVal userState As Object)
            If (Me.ApplicantForgotPasswordOperationCompleted Is Nothing) Then
                Me.ApplicantForgotPasswordOperationCompleted = AddressOf Me.OnApplicantForgotPasswordOperationCompleted
            End If
            Me.InvokeAsync("ApplicantForgotPassword", New Object() {Login, Password, BusinessEntityName, ApplicantEmail}, Me.ApplicantForgotPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplicantForgotPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ApplicantForgotPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ApplicantForgotPasswordCompleted(Me, New ApplicantForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SuperAdminLogin", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SuperAdminLogin(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As LoginUserWSI
            Dim results() As Object = Me.Invoke("SuperAdminLogin", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),LoginUserWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SuperAdminLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.SuperAdminLoginAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuperAdminLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.SuperAdminLoginOperationCompleted Is Nothing) Then
                Me.SuperAdminLoginOperationCompleted = AddressOf Me.OnSuperAdminLoginOperationCompleted
            End If
            Me.InvokeAsync("SuperAdminLogin", New Object() {Login, Password, BusinessEntityName}, Me.SuperAdminLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuperAdminLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuperAdminLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuperAdminLoginCompleted(Me, New SuperAdminLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetApplicationReportUrl", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicationReportUrl(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal email As String, ByVal passValue As String, ByVal vacancyId As Integer, ByVal name As String) As String
            Dim results() As Object = Me.Invoke("GetApplicationReportUrl", New Object() {Login, Password, BusinessEntityName, email, passValue, vacancyId, name})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicationReportUrlAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal email As String, ByVal passValue As String, ByVal vacancyId As Integer, ByVal name As String)
            Me.GetApplicationReportUrlAsync(Login, Password, BusinessEntityName, email, passValue, vacancyId, name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicationReportUrlAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal email As String, ByVal passValue As String, ByVal vacancyId As Integer, ByVal name As String, ByVal userState As Object)
            If (Me.GetApplicationReportUrlOperationCompleted Is Nothing) Then
                Me.GetApplicationReportUrlOperationCompleted = AddressOf Me.OnGetApplicationReportUrlOperationCompleted
            End If
            Me.InvokeAsync("GetApplicationReportUrl", New Object() {Login, Password, BusinessEntityName, email, passValue, vacancyId, name}, Me.GetApplicationReportUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicationReportUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicationReportUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicationReportUrlCompleted(Me, New GetApplicationReportUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetVacationPlan", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVacationPlan(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal dateStart As Date, ByVal dateEnd As Date) As EmployeeAbsenceRequestWSI()
            Dim results() As Object = Me.Invoke("GetVacationPlan", New Object() {Login, Password, BusinessEntityName, dateStart, dateEnd})
            Return CType(results(0),EmployeeAbsenceRequestWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVacationPlanAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal dateStart As Date, ByVal dateEnd As Date)
            Me.GetVacationPlanAsync(Login, Password, BusinessEntityName, dateStart, dateEnd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVacationPlanAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal dateStart As Date, ByVal dateEnd As Date, ByVal userState As Object)
            If (Me.GetVacationPlanOperationCompleted Is Nothing) Then
                Me.GetVacationPlanOperationCompleted = AddressOf Me.OnGetVacationPlanOperationCompleted
            End If
            Me.InvokeAsync("GetVacationPlan", New Object() {Login, Password, BusinessEntityName, dateStart, dateEnd}, Me.GetVacationPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVacationPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVacationPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVacationPlanCompleted(Me, New GetVacationPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetReportUrl", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportUrl(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ReportName As String, ByVal parameters() As ReportParameter) As String
            Dim results() As Object = Me.Invoke("GetReportUrl", New Object() {Login, Password, BusinessEntityName, ReportName, parameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportUrlAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ReportName As String, ByVal parameters() As ReportParameter)
            Me.GetReportUrlAsync(Login, Password, BusinessEntityName, ReportName, parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportUrlAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ReportName As String, ByVal parameters() As ReportParameter, ByVal userState As Object)
            If (Me.GetReportUrlOperationCompleted Is Nothing) Then
                Me.GetReportUrlOperationCompleted = AddressOf Me.OnGetReportUrlOperationCompleted
            End If
            Me.InvokeAsync("GetReportUrl", New Object() {Login, Password, BusinessEntityName, ReportName, parameters}, Me.GetReportUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportUrlCompleted(Me, New GetReportUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/ApplicantLogin", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ApplicantLogin(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal email As String, ByVal passFieldName As String, ByVal passValue As String) As ApplicantContainer
            Dim results() As Object = Me.Invoke("ApplicantLogin", New Object() {Login, Password, BusinessEntityName, email, passFieldName, passValue})
            Return CType(results(0),ApplicantContainer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ApplicantLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal email As String, ByVal passFieldName As String, ByVal passValue As String)
            Me.ApplicantLoginAsync(Login, Password, BusinessEntityName, email, passFieldName, passValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ApplicantLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal email As String, ByVal passFieldName As String, ByVal passValue As String, ByVal userState As Object)
            If (Me.ApplicantLoginOperationCompleted Is Nothing) Then
                Me.ApplicantLoginOperationCompleted = AddressOf Me.OnApplicantLoginOperationCompleted
            End If
            Me.InvokeAsync("ApplicantLogin", New Object() {Login, Password, BusinessEntityName, email, passFieldName, passValue}, Me.ApplicantLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplicantLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.ApplicantLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ApplicantLoginCompleted(Me, New ApplicantLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/ApplicantExists", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ApplicantExists(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Email As String) As Boolean
            Dim results() As Object = Me.Invoke("ApplicantExists", New Object() {Login, Password, BusinessEntityName, Email})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ApplicantExistsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Email As String)
            Me.ApplicantExistsAsync(Login, Password, BusinessEntityName, Email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ApplicantExistsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Email As String, ByVal userState As Object)
            If (Me.ApplicantExistsOperationCompleted Is Nothing) Then
                Me.ApplicantExistsOperationCompleted = AddressOf Me.OnApplicantExistsOperationCompleted
            End If
            Me.InvokeAsync("ApplicantExists", New Object() {Login, Password, BusinessEntityName, Email}, Me.ApplicantExistsOperationCompleted, userState)
        End Sub
        
        Private Sub OnApplicantExistsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ApplicantExistsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ApplicantExistsCompleted(Me, New ApplicantExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostJobApplication", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostJobApplication( _
                    ByVal Login As String,  _
                    ByVal Password As String,  _
                    ByVal BusinessEntityName As String,  _
                    ByVal pApplicant As ApplicantBO,  _
                    ByVal pApplicantAddress As AddressBO,  _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pPictureData() As Byte,  _
                    ByVal pDocuments() As DocumentBO,  _
                    ByVal pEducations() As ApplicantEducationBO,  _
                    ByVal pQualifications() As ApplicantQualificationBO,  _
                    ByVal pPastExperience() As ApplicantPastExperienceBO,  _
                    ByVal pReferences() As ApplicantReferenceBO,  _
                    ByVal pVacancies() As Integer,  _
                    ByVal pUserFields() As UserFieldValueBO,  _
                    ByVal pPicture As PictureBO,  _
                    ByVal pIsParserUsed As Boolean,  _
                    ByVal pSurveys() As SurveyWSI,  _
                    ByVal pNIMonitoring As NIMonitoringBO,  _
                    ByVal pJobApp() As JobApplicationBO) As Integer
            Dim results() As Object = Me.Invoke("PostJobApplication", New Object() {Login, Password, BusinessEntityName, pApplicant, pApplicantAddress, pPictureData, pDocuments, pEducations, pQualifications, pPastExperience, pReferences, pVacancies, pUserFields, pPicture, pIsParserUsed, pSurveys, pNIMonitoring, pJobApp})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostJobApplicationAsync( _
                    ByVal Login As String,  _
                    ByVal Password As String,  _
                    ByVal BusinessEntityName As String,  _
                    ByVal pApplicant As ApplicantBO,  _
                    ByVal pApplicantAddress As AddressBO,  _
                    ByVal pPictureData() As Byte,  _
                    ByVal pDocuments() As DocumentBO,  _
                    ByVal pEducations() As ApplicantEducationBO,  _
                    ByVal pQualifications() As ApplicantQualificationBO,  _
                    ByVal pPastExperience() As ApplicantPastExperienceBO,  _
                    ByVal pReferences() As ApplicantReferenceBO,  _
                    ByVal pVacancies() As Integer,  _
                    ByVal pUserFields() As UserFieldValueBO,  _
                    ByVal pPicture As PictureBO,  _
                    ByVal pIsParserUsed As Boolean,  _
                    ByVal pSurveys() As SurveyWSI,  _
                    ByVal pNIMonitoring As NIMonitoringBO,  _
                    ByVal pJobApp() As JobApplicationBO)
            Me.PostJobApplicationAsync(Login, Password, BusinessEntityName, pApplicant, pApplicantAddress, pPictureData, pDocuments, pEducations, pQualifications, pPastExperience, pReferences, pVacancies, pUserFields, pPicture, pIsParserUsed, pSurveys, pNIMonitoring, pJobApp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostJobApplicationAsync( _
                    ByVal Login As String,  _
                    ByVal Password As String,  _
                    ByVal BusinessEntityName As String,  _
                    ByVal pApplicant As ApplicantBO,  _
                    ByVal pApplicantAddress As AddressBO,  _
                    ByVal pPictureData() As Byte,  _
                    ByVal pDocuments() As DocumentBO,  _
                    ByVal pEducations() As ApplicantEducationBO,  _
                    ByVal pQualifications() As ApplicantQualificationBO,  _
                    ByVal pPastExperience() As ApplicantPastExperienceBO,  _
                    ByVal pReferences() As ApplicantReferenceBO,  _
                    ByVal pVacancies() As Integer,  _
                    ByVal pUserFields() As UserFieldValueBO,  _
                    ByVal pPicture As PictureBO,  _
                    ByVal pIsParserUsed As Boolean,  _
                    ByVal pSurveys() As SurveyWSI,  _
                    ByVal pNIMonitoring As NIMonitoringBO,  _
                    ByVal pJobApp() As JobApplicationBO,  _
                    ByVal userState As Object)
            If (Me.PostJobApplicationOperationCompleted Is Nothing) Then
                Me.PostJobApplicationOperationCompleted = AddressOf Me.OnPostJobApplicationOperationCompleted
            End If
            Me.InvokeAsync("PostJobApplication", New Object() {Login, Password, BusinessEntityName, pApplicant, pApplicantAddress, pPictureData, pDocuments, pEducations, pQualifications, pPastExperience, pReferences, pVacancies, pUserFields, pPicture, pIsParserUsed, pSurveys, pNIMonitoring, pJobApp}, Me.PostJobApplicationOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostJobApplicationOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostJobApplicationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostJobApplicationCompleted(Me, New PostJobApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostJobApplicationDocument", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostJobApplicationDocument(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pApplicant As ApplicantBO, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pDocumentData() As Byte, ByVal pDocument As DocumentBO) As Boolean
            Dim results() As Object = Me.Invoke("PostJobApplicationDocument", New Object() {Login, Password, BusinessEntityName, pApplicant, pDocumentData, pDocument})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostJobApplicationDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pApplicant As ApplicantBO, ByVal pDocumentData() As Byte, ByVal pDocument As DocumentBO)
            Me.PostJobApplicationDocumentAsync(Login, Password, BusinessEntityName, pApplicant, pDocumentData, pDocument, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostJobApplicationDocumentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pApplicant As ApplicantBO, ByVal pDocumentData() As Byte, ByVal pDocument As DocumentBO, ByVal userState As Object)
            If (Me.PostJobApplicationDocumentOperationCompleted Is Nothing) Then
                Me.PostJobApplicationDocumentOperationCompleted = AddressOf Me.OnPostJobApplicationDocumentOperationCompleted
            End If
            Me.InvokeAsync("PostJobApplicationDocument", New Object() {Login, Password, BusinessEntityName, pApplicant, pDocumentData, pDocument}, Me.PostJobApplicationDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostJobApplicationDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostJobApplicationDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostJobApplicationDocumentCompleted(Me, New PostJobApplicationDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/AddParserLog", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddParserLog(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pPictureID As String) As Integer
            Dim results() As Object = Me.Invoke("AddParserLog", New Object() {Login, Password, BusinessEntityName, pPictureID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddParserLogAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pPictureID As String)
            Me.AddParserLogAsync(Login, Password, BusinessEntityName, pPictureID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddParserLogAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pPictureID As String, ByVal userState As Object)
            If (Me.AddParserLogOperationCompleted Is Nothing) Then
                Me.AddParserLogOperationCompleted = AddressOf Me.OnAddParserLogOperationCompleted
            End If
            Me.InvokeAsync("AddParserLog", New Object() {Login, Password, BusinessEntityName, pPictureID}, Me.AddParserLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddParserLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddParserLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddParserLogCompleted(Me, New AddParserLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetCountries", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountries(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As CountryBO()
            Dim results() As Object = Me.Invoke("GetCountries", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),CountryBO())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountriesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetCountriesAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountriesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetCountriesOperationCompleted Is Nothing) Then
                Me.GetCountriesOperationCompleted = AddressOf Me.OnGetCountriesOperationCompleted
            End If
            Me.InvokeAsync("GetCountries", New Object() {Login, Password, BusinessEntityName}, Me.GetCountriesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountriesCompleted(Me, New GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetNationalityList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNationalityList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As CodeDescriptionWSI()
            Dim results() As Object = Me.Invoke("GetNationalityList", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),CodeDescriptionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNationalityListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetNationalityListAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNationalityListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetNationalityListOperationCompleted Is Nothing) Then
                Me.GetNationalityListOperationCompleted = AddressOf Me.OnGetNationalityListOperationCompleted
            End If
            Me.InvokeAsync("GetNationalityList", New Object() {Login, Password, BusinessEntityName}, Me.GetNationalityListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNationalityListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNationalityListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNationalityListCompleted(Me, New GetNationalityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetCountryList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As CodeDescriptionWSI()
            Dim results() As Object = Me.Invoke("GetCountryList", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),CodeDescriptionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetCountryListAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetCountryListOperationCompleted Is Nothing) Then
                Me.GetCountryListOperationCompleted = AddressOf Me.OnGetCountryListOperationCompleted
            End If
            Me.InvokeAsync("GetCountryList", New Object() {Login, Password, BusinessEntityName}, Me.GetCountryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryListCompleted(Me, New GetCountryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeUnionsList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeUnionsList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As CodeDescriptionWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeUnionsList", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),CodeDescriptionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeUnionsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetEmployeeUnionsListAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeUnionsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetEmployeeUnionsListOperationCompleted Is Nothing) Then
                Me.GetEmployeeUnionsListOperationCompleted = AddressOf Me.OnGetEmployeeUnionsListOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeUnionsList", New Object() {Login, Password, BusinessEntityName}, Me.GetEmployeeUnionsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeUnionsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeUnionsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeUnionsListCompleted(Me, New GetEmployeeUnionsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/ListDomainValue", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListDomainValue(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pDomainName As String) As ListDomainValueWSI()
            Dim results() As Object = Me.Invoke("ListDomainValue", New Object() {Login, Password, BusinessEntityName, pDomainName})
            Return CType(results(0),ListDomainValueWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListDomainValueAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pDomainName As String)
            Me.ListDomainValueAsync(Login, Password, BusinessEntityName, pDomainName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListDomainValueAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pDomainName As String, ByVal userState As Object)
            If (Me.ListDomainValueOperationCompleted Is Nothing) Then
                Me.ListDomainValueOperationCompleted = AddressOf Me.OnListDomainValueOperationCompleted
            End If
            Me.InvokeAsync("ListDomainValue", New Object() {Login, Password, BusinessEntityName, pDomainName}, Me.ListDomainValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnListDomainValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListDomainValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListDomainValueCompleted(Me, New ListDomainValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/ListCodeDescription", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListCodeDescription(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pEntityCode As String) As CodeDescriptionWSI()
            Dim results() As Object = Me.Invoke("ListCodeDescription", New Object() {Login, Password, BusinessEntityName, pEntityCode})
            Return CType(results(0),CodeDescriptionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListCodeDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pEntityCode As String)
            Me.ListCodeDescriptionAsync(Login, Password, BusinessEntityName, pEntityCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListCodeDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pEntityCode As String, ByVal userState As Object)
            If (Me.ListCodeDescriptionOperationCompleted Is Nothing) Then
                Me.ListCodeDescriptionOperationCompleted = AddressOf Me.OnListCodeDescriptionOperationCompleted
            End If
            Me.InvokeAsync("ListCodeDescription", New Object() {Login, Password, BusinessEntityName, pEntityCode}, Me.ListCodeDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnListCodeDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListCodeDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListCodeDescriptionCompleted(Me, New ListCodeDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertEmployee", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertEmployee(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeHelpObj As EmployeeHelpObject) As Integer
            Dim results() As Object = Me.Invoke("InsertEmployee", New Object() {Login, Password, BusinessEntityName, employeeHelpObj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeHelpObj As EmployeeHelpObject)
            Me.InsertEmployeeAsync(Login, Password, BusinessEntityName, employeeHelpObj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeHelpObj As EmployeeHelpObject, ByVal userState As Object)
            If (Me.InsertEmployeeOperationCompleted Is Nothing) Then
                Me.InsertEmployeeOperationCompleted = AddressOf Me.OnInsertEmployeeOperationCompleted
            End If
            Me.InvokeAsync("InsertEmployee", New Object() {Login, Password, BusinessEntityName, employeeHelpObj}, Me.InsertEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertEmployeeCompleted(Me, New InsertEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertCodeDescription", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCodeDescription(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal codeDescription As CodeDescriptionBO) As Integer
            Dim results() As Object = Me.Invoke("InsertCodeDescription", New Object() {Login, Password, BusinessEntityName, codeDescription})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCodeDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal codeDescription As CodeDescriptionBO)
            Me.InsertCodeDescriptionAsync(Login, Password, BusinessEntityName, codeDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCodeDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal codeDescription As CodeDescriptionBO, ByVal userState As Object)
            If (Me.InsertCodeDescriptionOperationCompleted Is Nothing) Then
                Me.InsertCodeDescriptionOperationCompleted = AddressOf Me.OnInsertCodeDescriptionOperationCompleted
            End If
            Me.InvokeAsync("InsertCodeDescription", New Object() {Login, Password, BusinessEntityName, codeDescription}, Me.InsertCodeDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCodeDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCodeDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCodeDescriptionCompleted(Me, New InsertCodeDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertDepartment", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertDepartment(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal department As DepartmentHelpObject) As Integer
            Dim results() As Object = Me.Invoke("InsertDepartment", New Object() {Login, Password, BusinessEntityName, department})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertDepartmentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal department As DepartmentHelpObject)
            Me.InsertDepartmentAsync(Login, Password, BusinessEntityName, department, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertDepartmentAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal department As DepartmentHelpObject, ByVal userState As Object)
            If (Me.InsertDepartmentOperationCompleted Is Nothing) Then
                Me.InsertDepartmentOperationCompleted = AddressOf Me.OnInsertDepartmentOperationCompleted
            End If
            Me.InvokeAsync("InsertDepartment", New Object() {Login, Password, BusinessEntityName, department}, Me.InsertDepartmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertDepartmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertDepartmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertDepartmentCompleted(Me, New InsertDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertEmployeeJobDescription", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertEmployeeJobDescription(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeJobDescription As EmployeeJobDescriptionBO) As Integer
            Dim results() As Object = Me.Invoke("InsertEmployeeJobDescription", New Object() {Login, Password, BusinessEntityName, employeeJobDescription})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeJobDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeJobDescription As EmployeeJobDescriptionBO)
            Me.InsertEmployeeJobDescriptionAsync(Login, Password, BusinessEntityName, employeeJobDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeJobDescriptionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeJobDescription As EmployeeJobDescriptionBO, ByVal userState As Object)
            If (Me.InsertEmployeeJobDescriptionOperationCompleted Is Nothing) Then
                Me.InsertEmployeeJobDescriptionOperationCompleted = AddressOf Me.OnInsertEmployeeJobDescriptionOperationCompleted
            End If
            Me.InvokeAsync("InsertEmployeeJobDescription", New Object() {Login, Password, BusinessEntityName, employeeJobDescription}, Me.InsertEmployeeJobDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertEmployeeJobDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertEmployeeJobDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertEmployeeJobDescriptionCompleted(Me, New InsertEmployeeJobDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertLocation", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLocation(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal location As LocationHelpObject) As Integer
            Dim results() As Object = Me.Invoke("InsertLocation", New Object() {Login, Password, BusinessEntityName, location})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLocationAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal location As LocationHelpObject)
            Me.InsertLocationAsync(Login, Password, BusinessEntityName, location, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLocationAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal location As LocationHelpObject, ByVal userState As Object)
            If (Me.InsertLocationOperationCompleted Is Nothing) Then
                Me.InsertLocationOperationCompleted = AddressOf Me.OnInsertLocationOperationCompleted
            End If
            Me.InvokeAsync("InsertLocation", New Object() {Login, Password, BusinessEntityName, location}, Me.InsertLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLocationCompleted(Me, New InsertLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/CheckConnection", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckConnection(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PermissionsOn() As String) As Integer
            Dim results() As Object = Me.Invoke("CheckConnection", New Object() {Login, Password, BusinessEntityName, PermissionsOn})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckConnectionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PermissionsOn() As String)
            Me.CheckConnectionAsync(Login, Password, BusinessEntityName, PermissionsOn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckConnectionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PermissionsOn() As String, ByVal userState As Object)
            If (Me.CheckConnectionOperationCompleted Is Nothing) Then
                Me.CheckConnectionOperationCompleted = AddressOf Me.OnCheckConnectionOperationCompleted
            End If
            Me.InvokeAsync("CheckConnection", New Object() {Login, Password, BusinessEntityName, PermissionsOn}, Me.CheckConnectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckConnectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckConnectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckConnectionCompleted(Me, New CheckConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetPositions", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPositions(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As PositionWSI()
            Dim results() As Object = Me.Invoke("GetPositions", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),PositionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPositionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetPositionsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPositionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetPositionsOperationCompleted Is Nothing) Then
                Me.GetPositionsOperationCompleted = AddressOf Me.OnGetPositionsOperationCompleted
            End If
            Me.InvokeAsync("GetPositions", New Object() {Login, Password, BusinessEntityName}, Me.GetPositionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPositionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPositionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPositionsCompleted(Me, New GetPositionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTrainingCourses", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrainingCourses(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As TrainingCourseWSI()
            Dim results() As Object = Me.Invoke("GetTrainingCourses", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),TrainingCourseWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrainingCoursesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetTrainingCoursesAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrainingCoursesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetTrainingCoursesOperationCompleted Is Nothing) Then
                Me.GetTrainingCoursesOperationCompleted = AddressOf Me.OnGetTrainingCoursesOperationCompleted
            End If
            Me.InvokeAsync("GetTrainingCourses", New Object() {Login, Password, BusinessEntityName}, Me.GetTrainingCoursesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrainingCoursesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrainingCoursesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrainingCoursesCompleted(Me, New GetTrainingCoursesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetPositionAssignments", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPositionAssignments(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As PositionAssignmentWSI()
            Dim results() As Object = Me.Invoke("GetPositionAssignments", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),PositionAssignmentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPositionAssignmentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetPositionAssignmentsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPositionAssignmentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetPositionAssignmentsOperationCompleted Is Nothing) Then
                Me.GetPositionAssignmentsOperationCompleted = AddressOf Me.OnGetPositionAssignmentsOperationCompleted
            End If
            Me.InvokeAsync("GetPositionAssignments", New Object() {Login, Password, BusinessEntityName}, Me.GetPositionAssignmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPositionAssignmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPositionAssignmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPositionAssignmentsCompleted(Me, New GetPositionAssignmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetDepartments", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDepartments(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As DepartmentWSI()
            Dim results() As Object = Me.Invoke("GetDepartments", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),DepartmentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDepartmentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetDepartmentsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDepartmentsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetDepartmentsOperationCompleted Is Nothing) Then
                Me.GetDepartmentsOperationCompleted = AddressOf Me.OnGetDepartmentsOperationCompleted
            End If
            Me.InvokeAsync("GetDepartments", New Object() {Login, Password, BusinessEntityName}, Me.GetDepartmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDepartmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDepartmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDepartmentsCompleted(Me, New GetDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetJobDescriptions", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobDescriptions(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As EmployeeJobDescriptionWSI()
            Dim results() As Object = Me.Invoke("GetJobDescriptions", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),EmployeeJobDescriptionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobDescriptionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetJobDescriptionsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobDescriptionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetJobDescriptionsOperationCompleted Is Nothing) Then
                Me.GetJobDescriptionsOperationCompleted = AddressOf Me.OnGetJobDescriptionsOperationCompleted
            End If
            Me.InvokeAsync("GetJobDescriptions", New Object() {Login, Password, BusinessEntityName}, Me.GetJobDescriptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobDescriptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobDescriptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobDescriptionsCompleted(Me, New GetJobDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetQualifications", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQualifications(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As QualificationWSI()
            Dim results() As Object = Me.Invoke("GetQualifications", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),QualificationWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQualificationsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetQualificationsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQualificationsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetQualificationsOperationCompleted Is Nothing) Then
                Me.GetQualificationsOperationCompleted = AddressOf Me.OnGetQualificationsOperationCompleted
            End If
            Me.InvokeAsync("GetQualifications", New Object() {Login, Password, BusinessEntityName}, Me.GetQualificationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQualificationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQualificationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQualificationsCompleted(Me, New GetQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetExpenses", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpenses(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EmployeeCodes As String, ByVal Status As String, ByVal UpdatePostedFlag As Boolean, ByVal BatchReference As String) As ExpenseLineWSI()
            Dim results() As Object = Me.Invoke("GetExpenses", New Object() {Login, Password, BusinessEntityName, FromDate, ToDate, EmployeeCodes, Status, UpdatePostedFlag, BatchReference})
            Return CType(results(0),ExpenseLineWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpensesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EmployeeCodes As String, ByVal Status As String, ByVal UpdatePostedFlag As Boolean, ByVal BatchReference As String)
            Me.GetExpensesAsync(Login, Password, BusinessEntityName, FromDate, ToDate, EmployeeCodes, Status, UpdatePostedFlag, BatchReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpensesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal EmployeeCodes As String, ByVal Status As String, ByVal UpdatePostedFlag As Boolean, ByVal BatchReference As String, ByVal userState As Object)
            If (Me.GetExpensesOperationCompleted Is Nothing) Then
                Me.GetExpensesOperationCompleted = AddressOf Me.OnGetExpensesOperationCompleted
            End If
            Me.InvokeAsync("GetExpenses", New Object() {Login, Password, BusinessEntityName, FromDate, ToDate, EmployeeCodes, Status, UpdatePostedFlag, BatchReference}, Me.GetExpensesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpensesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpensesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpensesCompleted(Me, New GetExpensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertProjectTransaction", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertProjectTransaction(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Transaction As ProjectTransactionHelpObject) As Integer
            Dim results() As Object = Me.Invoke("InsertProjectTransaction", New Object() {Login, Password, BusinessEntityName, Transaction})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertProjectTransactionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Transaction As ProjectTransactionHelpObject)
            Me.InsertProjectTransactionAsync(Login, Password, BusinessEntityName, Transaction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertProjectTransactionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Transaction As ProjectTransactionHelpObject, ByVal userState As Object)
            If (Me.InsertProjectTransactionOperationCompleted Is Nothing) Then
                Me.InsertProjectTransactionOperationCompleted = AddressOf Me.OnInsertProjectTransactionOperationCompleted
            End If
            Me.InvokeAsync("InsertProjectTransaction", New Object() {Login, Password, BusinessEntityName, Transaction}, Me.InsertProjectTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertProjectTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertProjectTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertProjectTransactionCompleted(Me, New InsertProjectTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyProjectsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyProjectsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal Page As Integer, ByVal PageSize As Integer) As ProjectWSI()
            Dim results() As Object = Me.Invoke("GetMyProjectsPaged", New Object() {Login, Password, BusinessEntityName, PendingOnly, Page, PageSize})
            Return CType(results(0),ProjectWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyProjectsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyProjectsPagedAsync(Login, Password, BusinessEntityName, PendingOnly, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyProjectsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyProjectsPagedOperationCompleted Is Nothing) Then
                Me.GetMyProjectsPagedOperationCompleted = AddressOf Me.OnGetMyProjectsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyProjectsPaged", New Object() {Login, Password, BusinessEntityName, PendingOnly, Page, PageSize}, Me.GetMyProjectsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyProjectsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyProjectsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyProjectsPagedCompleted(Me, New GetMyProjectsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyProjectTasksPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyProjectTasksPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal ProjectID As Integer, ByVal Page As Integer, ByVal PageSize As Integer) As ProjectTaskWSI()
            Dim results() As Object = Me.Invoke("GetMyProjectTasksPaged", New Object() {Login, Password, BusinessEntityName, PendingOnly, ProjectID, Page, PageSize})
            Return CType(results(0),ProjectTaskWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyProjectTasksPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal ProjectID As Integer, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyProjectTasksPagedAsync(Login, Password, BusinessEntityName, PendingOnly, ProjectID, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyProjectTasksPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal ProjectID As Integer, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyProjectTasksPagedOperationCompleted Is Nothing) Then
                Me.GetMyProjectTasksPagedOperationCompleted = AddressOf Me.OnGetMyProjectTasksPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyProjectTasksPaged", New Object() {Login, Password, BusinessEntityName, PendingOnly, ProjectID, Page, PageSize}, Me.GetMyProjectTasksPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyProjectTasksPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyProjectTasksPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyProjectTasksPagedCompleted(Me, New GetMyProjectTasksPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyTasks", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyTasks(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean) As ProjectTaskWSI()
            Dim results() As Object = Me.Invoke("GetMyTasks", New Object() {Login, Password, BusinessEntityName, PendingOnly})
            Return CType(results(0),ProjectTaskWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyTasksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean)
            Me.GetMyTasksAsync(Login, Password, BusinessEntityName, PendingOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyTasksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal PendingOnly As Boolean, ByVal userState As Object)
            If (Me.GetMyTasksOperationCompleted Is Nothing) Then
                Me.GetMyTasksOperationCompleted = AddressOf Me.OnGetMyTasksOperationCompleted
            End If
            Me.InvokeAsync("GetMyTasks", New Object() {Login, Password, BusinessEntityName, PendingOnly}, Me.GetMyTasksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyTasksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyTasksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyTasksCompleted(Me, New GetMyTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyJobApplicationsList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyJobApplicationsList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As JobApplicationWSI()
            Dim results() As Object = Me.Invoke("GetMyJobApplicationsList", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),JobApplicationWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyJobApplicationsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetMyJobApplicationsListAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyJobApplicationsListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetMyJobApplicationsListOperationCompleted Is Nothing) Then
                Me.GetMyJobApplicationsListOperationCompleted = AddressOf Me.OnGetMyJobApplicationsListOperationCompleted
            End If
            Me.InvokeAsync("GetMyJobApplicationsList", New Object() {Login, Password, BusinessEntityName}, Me.GetMyJobApplicationsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyJobApplicationsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyJobApplicationsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyJobApplicationsListCompleted(Me, New GetMyJobApplicationsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyJobApplicationsListPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyJobApplicationsListPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer) As JobApplicationWSI()
            Dim results() As Object = Me.Invoke("GetMyJobApplicationsListPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize})
            Return CType(results(0),JobApplicationWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyJobApplicationsListPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyJobApplicationsListPagedAsync(Login, Password, BusinessEntityName, Status, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyJobApplicationsListPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyJobApplicationsListPagedOperationCompleted Is Nothing) Then
                Me.GetMyJobApplicationsListPagedOperationCompleted = AddressOf Me.OnGetMyJobApplicationsListPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyJobApplicationsListPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize}, Me.GetMyJobApplicationsListPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyJobApplicationsListPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyJobApplicationsListPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyJobApplicationsListPagedCompleted(Me, New GetMyJobApplicationsListPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetJobApplication", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobApplication(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationReference As String) As JobApplicationFullWSI
            Dim results() As Object = Me.Invoke("GetJobApplication", New Object() {Login, Password, BusinessEntityName, ApplicationReference})
            Return CType(results(0),JobApplicationFullWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationReference As String)
            Me.GetJobApplicationAsync(Login, Password, BusinessEntityName, ApplicationReference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobApplicationAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicationReference As String, ByVal userState As Object)
            If (Me.GetJobApplicationOperationCompleted Is Nothing) Then
                Me.GetJobApplicationOperationCompleted = AddressOf Me.OnGetJobApplicationOperationCompleted
            End If
            Me.InvokeAsync("GetJobApplication", New Object() {Login, Password, BusinessEntityName, ApplicationReference}, Me.GetJobApplicationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobApplicationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobApplicationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobApplicationCompleted(Me, New GetJobApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetApplicant", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApplicant(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String) As ApplicantWSI()
            Dim results() As Object = Me.Invoke("GetApplicant", New Object() {Login, Password, BusinessEntityName, ApplicantCode, Status})
            Return CType(results(0),ApplicantWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApplicantAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String)
            Me.GetApplicantAsync(Login, Password, BusinessEntityName, ApplicantCode, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApplicantAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApplicantCode As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetApplicantOperationCompleted Is Nothing) Then
                Me.GetApplicantOperationCompleted = AddressOf Me.OnGetApplicantOperationCompleted
            End If
            Me.InvokeAsync("GetApplicant", New Object() {Login, Password, BusinessEntityName, ApplicantCode, Status}, Me.GetApplicantOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApplicantOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApplicantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApplicantCompleted(Me, New GetApplicantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyApprovalTransactions", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyApprovalTransactions(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String) As ApprovalTransactionWSI()
            Dim results() As Object = Me.Invoke("GetMyApprovalTransactions", New Object() {Login, Password, BusinessEntityName, Status})
            Return CType(results(0),ApprovalTransactionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyApprovalTransactionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String)
            Me.GetMyApprovalTransactionsAsync(Login, Password, BusinessEntityName, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyApprovalTransactionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetMyApprovalTransactionsOperationCompleted Is Nothing) Then
                Me.GetMyApprovalTransactionsOperationCompleted = AddressOf Me.OnGetMyApprovalTransactionsOperationCompleted
            End If
            Me.InvokeAsync("GetMyApprovalTransactions", New Object() {Login, Password, BusinessEntityName, Status}, Me.GetMyApprovalTransactionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyApprovalTransactionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyApprovalTransactionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyApprovalTransactionsCompleted(Me, New GetMyApprovalTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyApprovalTransactionsPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyApprovalTransactionsPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer) As ApprovalTransactionWSI()
            Dim results() As Object = Me.Invoke("GetMyApprovalTransactionsPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize})
            Return CType(results(0),ApprovalTransactionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyApprovalTransactionsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetMyApprovalTransactionsPagedAsync(Login, Password, BusinessEntityName, Status, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyApprovalTransactionsPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetMyApprovalTransactionsPagedOperationCompleted Is Nothing) Then
                Me.GetMyApprovalTransactionsPagedOperationCompleted = AddressOf Me.OnGetMyApprovalTransactionsPagedOperationCompleted
            End If
            Me.InvokeAsync("GetMyApprovalTransactionsPaged", New Object() {Login, Password, BusinessEntityName, Status, Page, PageSize}, Me.GetMyApprovalTransactionsPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyApprovalTransactionsPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyApprovalTransactionsPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyApprovalTransactionsPagedCompleted(Me, New GetMyApprovalTransactionsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostApprovalTransactionAction", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostApprovalTransactionAction(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApprovalTransactionID As Integer, ByVal Action As String, ByVal ApproverComments As String) As Integer
            Dim results() As Object = Me.Invoke("PostApprovalTransactionAction", New Object() {Login, Password, BusinessEntityName, ApprovalTransactionID, Action, ApproverComments})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostApprovalTransactionActionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApprovalTransactionID As Integer, ByVal Action As String, ByVal ApproverComments As String)
            Me.PostApprovalTransactionActionAsync(Login, Password, BusinessEntityName, ApprovalTransactionID, Action, ApproverComments, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostApprovalTransactionActionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal ApprovalTransactionID As Integer, ByVal Action As String, ByVal ApproverComments As String, ByVal userState As Object)
            If (Me.PostApprovalTransactionActionOperationCompleted Is Nothing) Then
                Me.PostApprovalTransactionActionOperationCompleted = AddressOf Me.OnPostApprovalTransactionActionOperationCompleted
            End If
            Me.InvokeAsync("PostApprovalTransactionAction", New Object() {Login, Password, BusinessEntityName, ApprovalTransactionID, Action, ApproverComments}, Me.PostApprovalTransactionActionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostApprovalTransactionActionOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostApprovalTransactionActionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostApprovalTransactionActionCompleted(Me, New PostApprovalTransactionActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetLanguageList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLanguageList() As LanguageWSI()
            Dim results() As Object = Me.Invoke("GetLanguageList", New Object(-1) {})
            Return CType(results(0),LanguageWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLanguageListAsync()
            Me.GetLanguageListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLanguageListAsync(ByVal userState As Object)
            If (Me.GetLanguageListOperationCompleted Is Nothing) Then
                Me.GetLanguageListOperationCompleted = AddressOf Me.OnGetLanguageListOperationCompleted
            End If
            Me.InvokeAsync("GetLanguageList", New Object(-1) {}, Me.GetLanguageListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLanguageListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLanguageListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLanguageListCompleted(Me, New GetLanguageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetWorkingTime", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWorkingTime(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeId As Integer, ByVal checkDate As Date) As WorkingTimeWSI
            Dim results() As Object = Me.Invoke("GetWorkingTime", New Object() {Login, Password, BusinessEntityName, employeeId, checkDate})
            Return CType(results(0),WorkingTimeWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWorkingTimeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeId As Integer, ByVal checkDate As Date)
            Me.GetWorkingTimeAsync(Login, Password, BusinessEntityName, employeeId, checkDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWorkingTimeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal employeeId As Integer, ByVal checkDate As Date, ByVal userState As Object)
            If (Me.GetWorkingTimeOperationCompleted Is Nothing) Then
                Me.GetWorkingTimeOperationCompleted = AddressOf Me.OnGetWorkingTimeOperationCompleted
            End If
            Me.InvokeAsync("GetWorkingTime", New Object() {Login, Password, BusinessEntityName, employeeId, checkDate}, Me.GetWorkingTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWorkingTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWorkingTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWorkingTimeCompleted(Me, New GetWorkingTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetValidCausesOfAbsence", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetValidCausesOfAbsence(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As CauseOfAbsenceWSI()
            Dim results() As Object = Me.Invoke("GetValidCausesOfAbsence", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),CauseOfAbsenceWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetValidCausesOfAbsenceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetValidCausesOfAbsenceAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetValidCausesOfAbsenceAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetValidCausesOfAbsenceOperationCompleted Is Nothing) Then
                Me.GetValidCausesOfAbsenceOperationCompleted = AddressOf Me.OnGetValidCausesOfAbsenceOperationCompleted
            End If
            Me.InvokeAsync("GetValidCausesOfAbsence", New Object() {Login, Password, BusinessEntityName}, Me.GetValidCausesOfAbsenceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetValidCausesOfAbsenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetValidCausesOfAbsenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetValidCausesOfAbsenceCompleted(Me, New GetValidCausesOfAbsenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/CheckLogin", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckLogin(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As LoginUserWSI
            Dim results() As Object = Me.Invoke("CheckLogin", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),LoginUserWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.CheckLoginAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.CheckLoginOperationCompleted Is Nothing) Then
                Me.CheckLoginOperationCompleted = AddressOf Me.OnCheckLoginOperationCompleted
            End If
            Me.InvokeAsync("CheckLogin", New Object() {Login, Password, BusinessEntityName}, Me.CheckLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckLoginCompleted(Me, New CheckLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UserLogin", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UserLogin(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal SSO As String) As LoginUserWSI
            Dim results() As Object = Me.Invoke("UserLogin", New Object() {Login, Password, BusinessEntityName, SSO})
            Return CType(results(0),LoginUserWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UserLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal SSO As String)
            Me.UserLoginAsync(Login, Password, BusinessEntityName, SSO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UserLoginAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal SSO As String, ByVal userState As Object)
            If (Me.UserLoginOperationCompleted Is Nothing) Then
                Me.UserLoginOperationCompleted = AddressOf Me.OnUserLoginOperationCompleted
            End If
            Me.InvokeAsync("UserLogin", New Object() {Login, Password, BusinessEntityName, SSO}, Me.UserLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnUserLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.UserLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UserLoginCompleted(Me, New UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/RequestNewPassword", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RequestNewPassword(ByVal Login As String, ByVal BusinessEntityName As String, ByVal ignoreCheck As Boolean) As ItemStringKeyValue
            Dim results() As Object = Me.Invoke("RequestNewPassword", New Object() {Login, BusinessEntityName, ignoreCheck})
            Return CType(results(0),ItemStringKeyValue)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RequestNewPasswordAsync(ByVal Login As String, ByVal BusinessEntityName As String, ByVal ignoreCheck As Boolean)
            Me.RequestNewPasswordAsync(Login, BusinessEntityName, ignoreCheck, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestNewPasswordAsync(ByVal Login As String, ByVal BusinessEntityName As String, ByVal ignoreCheck As Boolean, ByVal userState As Object)
            If (Me.RequestNewPasswordOperationCompleted Is Nothing) Then
                Me.RequestNewPasswordOperationCompleted = AddressOf Me.OnRequestNewPasswordOperationCompleted
            End If
            Me.InvokeAsync("RequestNewPassword", New Object() {Login, BusinessEntityName, ignoreCheck}, Me.RequestNewPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequestNewPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.RequestNewPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RequestNewPasswordCompleted(Me, New RequestNewPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeAttendanceStatus", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeAttendanceStatus(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal TANumber As String, ByVal SecondaryVerification As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal [Date] As System.Nullable(Of Date)) As AttendanceStatusWSI
            Dim results() As Object = Me.Invoke("GetEmployeeAttendanceStatus", New Object() {Login, Password, BusinessEntityName, EmployeeCode, TANumber, SecondaryVerification, [Date]})
            Return CType(results(0),AttendanceStatusWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAttendanceStatusAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal TANumber As String, ByVal SecondaryVerification As String, ByVal [Date] As System.Nullable(Of Date))
            Me.GetEmployeeAttendanceStatusAsync(Login, Password, BusinessEntityName, EmployeeCode, TANumber, SecondaryVerification, [Date], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAttendanceStatusAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal TANumber As String, ByVal SecondaryVerification As String, ByVal [Date] As System.Nullable(Of Date), ByVal userState As Object)
            If (Me.GetEmployeeAttendanceStatusOperationCompleted Is Nothing) Then
                Me.GetEmployeeAttendanceStatusOperationCompleted = AddressOf Me.OnGetEmployeeAttendanceStatusOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeAttendanceStatus", New Object() {Login, Password, BusinessEntityName, EmployeeCode, TANumber, SecondaryVerification, [Date]}, Me.GetEmployeeAttendanceStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeAttendanceStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeAttendanceStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeAttendanceStatusCompleted(Me, New GetEmployeeAttendanceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/UpdateEmployeeAttendanceStatus", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateEmployeeAttendanceStatus(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal AttendanceStatus As AttendanceStatusWSI) As Boolean
            Dim results() As Object = Me.Invoke("UpdateEmployeeAttendanceStatus", New Object() {Login, Password, BusinessEntityName, EmployeeCode, AttendanceStatus})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateEmployeeAttendanceStatusAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal AttendanceStatus As AttendanceStatusWSI)
            Me.UpdateEmployeeAttendanceStatusAsync(Login, Password, BusinessEntityName, EmployeeCode, AttendanceStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateEmployeeAttendanceStatusAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal AttendanceStatus As AttendanceStatusWSI, ByVal userState As Object)
            If (Me.UpdateEmployeeAttendanceStatusOperationCompleted Is Nothing) Then
                Me.UpdateEmployeeAttendanceStatusOperationCompleted = AddressOf Me.OnUpdateEmployeeAttendanceStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateEmployeeAttendanceStatus", New Object() {Login, Password, BusinessEntityName, EmployeeCode, AttendanceStatus}, Me.UpdateEmployeeAttendanceStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateEmployeeAttendanceStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateEmployeeAttendanceStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateEmployeeAttendanceStatusCompleted(Me, New UpdateEmployeeAttendanceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/AddTimeAttendanceRecord", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddTimeAttendanceRecord(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimeAttendanceRecord As AttendanceStatusWSI) As Boolean
            Dim results() As Object = Me.Invoke("AddTimeAttendanceRecord", New Object() {Login, Password, BusinessEntityName, TimeAttendanceRecord})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddTimeAttendanceRecordAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimeAttendanceRecord As AttendanceStatusWSI)
            Me.AddTimeAttendanceRecordAsync(Login, Password, BusinessEntityName, TimeAttendanceRecord, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddTimeAttendanceRecordAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal TimeAttendanceRecord As AttendanceStatusWSI, ByVal userState As Object)
            If (Me.AddTimeAttendanceRecordOperationCompleted Is Nothing) Then
                Me.AddTimeAttendanceRecordOperationCompleted = AddressOf Me.OnAddTimeAttendanceRecordOperationCompleted
            End If
            Me.InvokeAsync("AddTimeAttendanceRecord", New Object() {Login, Password, BusinessEntityName, TimeAttendanceRecord}, Me.AddTimeAttendanceRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddTimeAttendanceRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddTimeAttendanceRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddTimeAttendanceRecordCompleted(Me, New AddTimeAttendanceRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/AddAttendanceStatus", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddAttendanceStatus(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AttendanceStatus As AttendanceStatusWSI) As Boolean
            Dim results() As Object = Me.Invoke("AddAttendanceStatus", New Object() {Login, Password, BusinessEntityName, AttendanceStatus})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddAttendanceStatusAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AttendanceStatus As AttendanceStatusWSI)
            Me.AddAttendanceStatusAsync(Login, Password, BusinessEntityName, AttendanceStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddAttendanceStatusAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AttendanceStatus As AttendanceStatusWSI, ByVal userState As Object)
            If (Me.AddAttendanceStatusOperationCompleted Is Nothing) Then
                Me.AddAttendanceStatusOperationCompleted = AddressOf Me.OnAddAttendanceStatusOperationCompleted
            End If
            Me.InvokeAsync("AddAttendanceStatus", New Object() {Login, Password, BusinessEntityName, AttendanceStatus}, Me.AddAttendanceStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddAttendanceStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddAttendanceStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddAttendanceStatusCompleted(Me, New AddAttendanceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/RegisterWorkingTime", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegisterWorkingTime(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal attendanceDate As Date, ByVal FromTime As String, ByVal ToTime As String, ByVal BreakFromTime As String, ByVal BreakToTime As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal WorkAttendanceTypeID As System.Nullable(Of Integer), ByVal Comments As String) As Boolean
            Dim results() As Object = Me.Invoke("RegisterWorkingTime", New Object() {Login, Password, BusinessEntityName, EmployeeCode, attendanceDate, FromTime, ToTime, BreakFromTime, BreakToTime, WorkAttendanceTypeID, Comments})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegisterWorkingTimeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal attendanceDate As Date, ByVal FromTime As String, ByVal ToTime As String, ByVal BreakFromTime As String, ByVal BreakToTime As String, ByVal WorkAttendanceTypeID As System.Nullable(Of Integer), ByVal Comments As String)
            Me.RegisterWorkingTimeAsync(Login, Password, BusinessEntityName, EmployeeCode, attendanceDate, FromTime, ToTime, BreakFromTime, BreakToTime, WorkAttendanceTypeID, Comments, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterWorkingTimeAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal attendanceDate As Date, ByVal FromTime As String, ByVal ToTime As String, ByVal BreakFromTime As String, ByVal BreakToTime As String, ByVal WorkAttendanceTypeID As System.Nullable(Of Integer), ByVal Comments As String, ByVal userState As Object)
            If (Me.RegisterWorkingTimeOperationCompleted Is Nothing) Then
                Me.RegisterWorkingTimeOperationCompleted = AddressOf Me.OnRegisterWorkingTimeOperationCompleted
            End If
            Me.InvokeAsync("RegisterWorkingTime", New Object() {Login, Password, BusinessEntityName, EmployeeCode, attendanceDate, FromTime, ToTime, BreakFromTime, BreakToTime, WorkAttendanceTypeID, Comments}, Me.RegisterWorkingTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterWorkingTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterWorkingTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterWorkingTimeCompleted(Me, New RegisterWorkingTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/SetPrivacySettings", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetPrivacySettings(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal privacy As PrivacySettingsWSI) As Boolean
            Dim results() As Object = Me.Invoke("SetPrivacySettings", New Object() {Login, Password, BusinessEntityName, privacy})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPrivacySettingsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal privacy As PrivacySettingsWSI)
            Me.SetPrivacySettingsAsync(Login, Password, BusinessEntityName, privacy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPrivacySettingsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal privacy As PrivacySettingsWSI, ByVal userState As Object)
            If (Me.SetPrivacySettingsOperationCompleted Is Nothing) Then
                Me.SetPrivacySettingsOperationCompleted = AddressOf Me.OnSetPrivacySettingsOperationCompleted
            End If
            Me.InvokeAsync("SetPrivacySettings", New Object() {Login, Password, BusinessEntityName, privacy}, Me.SetPrivacySettingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPrivacySettingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPrivacySettingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPrivacySettingsCompleted(Me, New SetPrivacySettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/ChangePassword", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangePassword(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal newPassword As String) As String
            Dim results() As Object = Me.Invoke("ChangePassword", New Object() {Login, Password, BusinessEntityName, newPassword})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal newPassword As String)
            Me.ChangePasswordAsync(Login, Password, BusinessEntityName, newPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal newPassword As String, ByVal userState As Object)
            If (Me.ChangePasswordOperationCompleted Is Nothing) Then
                Me.ChangePasswordOperationCompleted = AddressOf Me.OnChangePasswordOperationCompleted
            End If
            Me.InvokeAsync("ChangePassword", New Object() {Login, Password, BusinessEntityName, newPassword}, Me.ChangePasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangePasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangePasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangePasswordCompleted(Me, New ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetShiftList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetShiftList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal Status As String, ByVal IncludeTeamShifts As Boolean) As ShiftWSI()
            Dim results() As Object = Me.Invoke("GetShiftList", New Object() {Login, Password, BusinessEntityName, EmployeeCode, FromDate, ToDate, Status, IncludeTeamShifts})
            Return CType(results(0),ShiftWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetShiftListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal Status As String, ByVal IncludeTeamShifts As Boolean)
            Me.GetShiftListAsync(Login, Password, BusinessEntityName, EmployeeCode, FromDate, ToDate, Status, IncludeTeamShifts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetShiftListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal FromDate As Date, ByVal ToDate As Date, ByVal Status As String, ByVal IncludeTeamShifts As Boolean, ByVal userState As Object)
            If (Me.GetShiftListOperationCompleted Is Nothing) Then
                Me.GetShiftListOperationCompleted = AddressOf Me.OnGetShiftListOperationCompleted
            End If
            Me.InvokeAsync("GetShiftList", New Object() {Login, Password, BusinessEntityName, EmployeeCode, FromDate, ToDate, Status, IncludeTeamShifts}, Me.GetShiftListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetShiftListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetShiftListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetShiftListCompleted(Me, New GetShiftListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeProjectTimeList", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProjectTimeList(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As EmployeeProjectTimeWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeProjectTimeList", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),EmployeeProjectTimeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProjectTimeListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetEmployeeProjectTimeListAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProjectTimeListAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetEmployeeProjectTimeListOperationCompleted Is Nothing) Then
                Me.GetEmployeeProjectTimeListOperationCompleted = AddressOf Me.OnGetEmployeeProjectTimeListOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProjectTimeList", New Object() {Login, Password, BusinessEntityName}, Me.GetEmployeeProjectTimeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProjectTimeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProjectTimeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProjectTimeListCompleted(Me, New GetEmployeeProjectTimeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyPayslipsLinks", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyPayslipsLinks(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As DocumentWSI()
            Dim results() As Object = Me.Invoke("GetMyPayslipsLinks", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),DocumentWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyPayslipsLinksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetMyPayslipsLinksAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyPayslipsLinksAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetMyPayslipsLinksOperationCompleted Is Nothing) Then
                Me.GetMyPayslipsLinksOperationCompleted = AddressOf Me.OnGetMyPayslipsLinksOperationCompleted
            End If
            Me.InvokeAsync("GetMyPayslipsLinks", New Object() {Login, Password, BusinessEntityName}, Me.GetMyPayslipsLinksOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyPayslipsLinksOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyPayslipsLinksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyPayslipsLinksCompleted(Me, New GetMyPayslipsLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertAdHocAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertAdHocAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal adhocAppraisal As EmployeeAdhocAppraisalWSI) As EmployeeAdhocAppraisalWSI
            Dim results() As Object = Me.Invoke("InsertAdHocAppraisal", New Object() {Login, Password, BusinessEntityName, adhocAppraisal})
            Return CType(results(0),EmployeeAdhocAppraisalWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertAdHocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal adhocAppraisal As EmployeeAdhocAppraisalWSI)
            Me.InsertAdHocAppraisalAsync(Login, Password, BusinessEntityName, adhocAppraisal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertAdHocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal adhocAppraisal As EmployeeAdhocAppraisalWSI, ByVal userState As Object)
            If (Me.InsertAdHocAppraisalOperationCompleted Is Nothing) Then
                Me.InsertAdHocAppraisalOperationCompleted = AddressOf Me.OnInsertAdHocAppraisalOperationCompleted
            End If
            Me.InvokeAsync("InsertAdHocAppraisal", New Object() {Login, Password, BusinessEntityName, adhocAppraisal}, Me.InsertAdHocAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertAdHocAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertAdHocAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertAdHocAppraisalCompleted(Me, New InsertAdHocAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/DeleteEmployeeAdhocAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteEmployeeAdhocAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AppraisalID As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteEmployeeAdhocAppraisal", New Object() {Login, Password, BusinessEntityName, AppraisalID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteEmployeeAdhocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AppraisalID As String)
            Me.DeleteEmployeeAdhocAppraisalAsync(Login, Password, BusinessEntityName, AppraisalID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteEmployeeAdhocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AppraisalID As String, ByVal userState As Object)
            If (Me.DeleteEmployeeAdhocAppraisalOperationCompleted Is Nothing) Then
                Me.DeleteEmployeeAdhocAppraisalOperationCompleted = AddressOf Me.OnDeleteEmployeeAdhocAppraisalOperationCompleted
            End If
            Me.InvokeAsync("DeleteEmployeeAdhocAppraisal", New Object() {Login, Password, BusinessEntityName, AppraisalID}, Me.DeleteEmployeeAdhocAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteEmployeeAdhocAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteEmployeeAdhocAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteEmployeeAdhocAppraisalCompleted(Me, New DeleteEmployeeAdhocAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetAdHocAppraisals", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdHocAppraisals(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AppraiserCode As String, ByVal EmployeeID As Integer, ByVal Page As Integer, ByVal PageSize As Integer) As EmployeeAdhocAppraisalWSI()
            Dim results() As Object = Me.Invoke("GetAdHocAppraisals", New Object() {Login, Password, BusinessEntityName, AppraiserCode, EmployeeID, Page, PageSize})
            Return CType(results(0),EmployeeAdhocAppraisalWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdHocAppraisalsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AppraiserCode As String, ByVal EmployeeID As Integer, ByVal Page As Integer, ByVal PageSize As Integer)
            Me.GetAdHocAppraisalsAsync(Login, Password, BusinessEntityName, AppraiserCode, EmployeeID, Page, PageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdHocAppraisalsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal AppraiserCode As String, ByVal EmployeeID As Integer, ByVal Page As Integer, ByVal PageSize As Integer, ByVal userState As Object)
            If (Me.GetAdHocAppraisalsOperationCompleted Is Nothing) Then
                Me.GetAdHocAppraisalsOperationCompleted = AddressOf Me.OnGetAdHocAppraisalsOperationCompleted
            End If
            Me.InvokeAsync("GetAdHocAppraisals", New Object() {Login, Password, BusinessEntityName, AppraiserCode, EmployeeID, Page, PageSize}, Me.GetAdHocAppraisalsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdHocAppraisalsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdHocAppraisalsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdHocAppraisalsCompleted(Me, New GetAdHocAppraisalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetAdHocAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdHocAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerID As String) As EmployeeAdhocAppraisalWSI
            Dim results() As Object = Me.Invoke("GetAdHocAppraisal", New Object() {Login, Password, BusinessEntityName, OwnerID})
            Return CType(results(0),EmployeeAdhocAppraisalWSI)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdHocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerID As String)
            Me.GetAdHocAppraisalAsync(Login, Password, BusinessEntityName, OwnerID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdHocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal OwnerID As String, ByVal userState As Object)
            If (Me.GetAdHocAppraisalOperationCompleted Is Nothing) Then
                Me.GetAdHocAppraisalOperationCompleted = AddressOf Me.OnGetAdHocAppraisalOperationCompleted
            End If
            Me.InvokeAsync("GetAdHocAppraisal", New Object() {Login, Password, BusinessEntityName, OwnerID}, Me.GetAdHocAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdHocAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdHocAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdHocAppraisalCompleted(Me, New GetAdHocAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetAdHocAppraisalTemplates", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdHocAppraisalTemplates(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As AppraisalTemplateWSI()
            Dim results() As Object = Me.Invoke("GetAdHocAppraisalTemplates", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),AppraisalTemplateWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdHocAppraisalTemplatesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetAdHocAppraisalTemplatesAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdHocAppraisalTemplatesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetAdHocAppraisalTemplatesOperationCompleted Is Nothing) Then
                Me.GetAdHocAppraisalTemplatesOperationCompleted = AddressOf Me.OnGetAdHocAppraisalTemplatesOperationCompleted
            End If
            Me.InvokeAsync("GetAdHocAppraisalTemplates", New Object() {Login, Password, BusinessEntityName}, Me.GetAdHocAppraisalTemplatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdHocAppraisalTemplatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdHocAppraisalTemplatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdHocAppraisalTemplatesCompleted(Me, New GetAdHocAppraisalTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostAdHocAppraisal", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostAdHocAppraisal(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal appraisal As EmployeeAdhocAppraisalWSI, ByVal submit As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("PostAdHocAppraisal", New Object() {Login, Password, BusinessEntityName, appraisal, submit})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostAdHocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal appraisal As EmployeeAdhocAppraisalWSI, ByVal submit As Boolean)
            Me.PostAdHocAppraisalAsync(Login, Password, BusinessEntityName, appraisal, submit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostAdHocAppraisalAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal appraisal As EmployeeAdhocAppraisalWSI, ByVal submit As Boolean, ByVal userState As Object)
            If (Me.PostAdHocAppraisalOperationCompleted Is Nothing) Then
                Me.PostAdHocAppraisalOperationCompleted = AddressOf Me.OnPostAdHocAppraisalOperationCompleted
            End If
            Me.InvokeAsync("PostAdHocAppraisal", New Object() {Login, Password, BusinessEntityName, appraisal, submit}, Me.PostAdHocAppraisalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostAdHocAppraisalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostAdHocAppraisalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostAdHocAppraisalCompleted(Me, New PostAdHocAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetLocations", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocations(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As LocationWSI()
            Dim results() As Object = Me.Invoke("GetLocations", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),LocationWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLocationsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetLocationsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLocationsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetLocationsOperationCompleted Is Nothing) Then
                Me.GetLocationsOperationCompleted = AddressOf Me.OnGetLocationsOperationCompleted
            End If
            Me.InvokeAsync("GetLocations", New Object() {Login, Password, BusinessEntityName}, Me.GetLocationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLocationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLocationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLocationsCompleted(Me, New GetLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetBuildings", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBuildings(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LocationID As Integer) As BuildingWSI()
            Dim results() As Object = Me.Invoke("GetBuildings", New Object() {Login, Password, BusinessEntityName, LocationID})
            Return CType(results(0),BuildingWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBuildingsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LocationID As Integer)
            Me.GetBuildingsAsync(Login, Password, BusinessEntityName, LocationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBuildingsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LocationID As Integer, ByVal userState As Object)
            If (Me.GetBuildingsOperationCompleted Is Nothing) Then
                Me.GetBuildingsOperationCompleted = AddressOf Me.OnGetBuildingsOperationCompleted
            End If
            Me.InvokeAsync("GetBuildings", New Object() {Login, Password, BusinessEntityName, LocationID}, Me.GetBuildingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBuildingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBuildingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBuildingsCompleted(Me, New GetBuildingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetBuildingFloors", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBuildingFloors(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal BuildingID As Integer, ByVal LocationID As Integer, ByVal Type As String, ByVal StartDate As Date, ByVal ToDate As Date) As BuildingFloorWSI()
            Dim results() As Object = Me.Invoke("GetBuildingFloors", New Object() {Login, Password, BusinessEntityName, BuildingID, LocationID, Type, StartDate, ToDate})
            Return CType(results(0),BuildingFloorWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBuildingFloorsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal BuildingID As Integer, ByVal LocationID As Integer, ByVal Type As String, ByVal StartDate As Date, ByVal ToDate As Date)
            Me.GetBuildingFloorsAsync(Login, Password, BusinessEntityName, BuildingID, LocationID, Type, StartDate, ToDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBuildingFloorsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal BuildingID As Integer, ByVal LocationID As Integer, ByVal Type As String, ByVal StartDate As Date, ByVal ToDate As Date, ByVal userState As Object)
            If (Me.GetBuildingFloorsOperationCompleted Is Nothing) Then
                Me.GetBuildingFloorsOperationCompleted = AddressOf Me.OnGetBuildingFloorsOperationCompleted
            End If
            Me.InvokeAsync("GetBuildingFloors", New Object() {Login, Password, BusinessEntityName, BuildingID, LocationID, Type, StartDate, ToDate}, Me.GetBuildingFloorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBuildingFloorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBuildingFloorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBuildingFloorsCompleted(Me, New GetBuildingFloorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetWorkspaces", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWorkspaces(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LocationID As Integer, ByVal BuildingID As Integer, ByVal FloorID As Integer, ByVal Type As String, ByVal Start As Date, ByVal [End] As Date, ByVal EmployeeID As Integer, ByVal Status As String, ByVal page As Integer, ByVal pageSize As Integer) As WorkspaceWSI()
            Dim results() As Object = Me.Invoke("GetWorkspaces", New Object() {Login, Password, BusinessEntityName, LocationID, BuildingID, FloorID, Type, Start, [End], EmployeeID, Status, page, pageSize})
            Return CType(results(0),WorkspaceWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWorkspacesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LocationID As Integer, ByVal BuildingID As Integer, ByVal FloorID As Integer, ByVal Type As String, ByVal Start As Date, ByVal [End] As Date, ByVal EmployeeID As Integer, ByVal Status As String, ByVal page As Integer, ByVal pageSize As Integer)
            Me.GetWorkspacesAsync(Login, Password, BusinessEntityName, LocationID, BuildingID, FloorID, Type, Start, [End], EmployeeID, Status, page, pageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWorkspacesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LocationID As Integer, ByVal BuildingID As Integer, ByVal FloorID As Integer, ByVal Type As String, ByVal Start As Date, ByVal [End] As Date, ByVal EmployeeID As Integer, ByVal Status As String, ByVal page As Integer, ByVal pageSize As Integer, ByVal userState As Object)
            If (Me.GetWorkspacesOperationCompleted Is Nothing) Then
                Me.GetWorkspacesOperationCompleted = AddressOf Me.OnGetWorkspacesOperationCompleted
            End If
            Me.InvokeAsync("GetWorkspaces", New Object() {Login, Password, BusinessEntityName, LocationID, BuildingID, FloorID, Type, Start, [End], EmployeeID, Status, page, pageSize}, Me.GetWorkspacesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWorkspacesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWorkspacesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWorkspacesCompleted(Me, New GetWorkspacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/PostWorkspaceReservation", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostWorkspaceReservation(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal workspace As WorkspaceWSI) As Integer
            Dim results() As Object = Me.Invoke("PostWorkspaceReservation", New Object() {Login, Password, BusinessEntityName, workspace})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostWorkspaceReservationAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal workspace As WorkspaceWSI)
            Me.PostWorkspaceReservationAsync(Login, Password, BusinessEntityName, workspace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostWorkspaceReservationAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal workspace As WorkspaceWSI, ByVal userState As Object)
            If (Me.PostWorkspaceReservationOperationCompleted Is Nothing) Then
                Me.PostWorkspaceReservationOperationCompleted = AddressOf Me.OnPostWorkspaceReservationOperationCompleted
            End If
            Me.InvokeAsync("PostWorkspaceReservation", New Object() {Login, Password, BusinessEntityName, workspace}, Me.PostWorkspaceReservationOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostWorkspaceReservationOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostWorkspaceReservationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostWorkspaceReservationCompleted(Me, New PostWorkspaceReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetMyOvertimeRequests", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyOvertimeRequests(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal page As Integer, ByVal pageSize As Integer) As OvertimeRequestWSI()
            Dim results() As Object = Me.Invoke("GetMyOvertimeRequests", New Object() {Login, Password, BusinessEntityName, Status, page, pageSize})
            Return CType(results(0),OvertimeRequestWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMyOvertimeRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal page As Integer, ByVal pageSize As Integer)
            Me.GetMyOvertimeRequestsAsync(Login, Password, BusinessEntityName, Status, page, pageSize, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMyOvertimeRequestsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal Status As String, ByVal page As Integer, ByVal pageSize As Integer, ByVal userState As Object)
            If (Me.GetMyOvertimeRequestsOperationCompleted Is Nothing) Then
                Me.GetMyOvertimeRequestsOperationCompleted = AddressOf Me.OnGetMyOvertimeRequestsOperationCompleted
            End If
            Me.InvokeAsync("GetMyOvertimeRequests", New Object() {Login, Password, BusinessEntityName, Status, page, pageSize}, Me.GetMyOvertimeRequestsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMyOvertimeRequestsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMyOvertimeRequestsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMyOvertimeRequestsCompleted(Me, New GetMyOvertimeRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetNews", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNews(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As NewsItemWSI()
            Dim results() As Object = Me.Invoke("GetNews", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),NewsItemWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNewsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetNewsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNewsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetNewsOperationCompleted Is Nothing) Then
                Me.GetNewsOperationCompleted = AddressOf Me.OnGetNewsOperationCompleted
            End If
            Me.InvokeAsync("GetNews", New Object() {Login, Password, BusinessEntityName}, Me.GetNewsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNewsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNewsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNewsCompleted(Me, New GetNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeContractTypes", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeContractTypes(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pFromDate As Date) As EmployeeContractTypeWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeContractTypes", New Object() {Login, Password, BusinessEntityName, pFromDate})
            Return CType(results(0),EmployeeContractTypeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeContractTypesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pFromDate As Date)
            Me.GetEmployeeContractTypesAsync(Login, Password, BusinessEntityName, pFromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeContractTypesAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal pFromDate As Date, ByVal userState As Object)
            If (Me.GetEmployeeContractTypesOperationCompleted Is Nothing) Then
                Me.GetEmployeeContractTypesOperationCompleted = AddressOf Me.OnGetEmployeeContractTypesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeContractTypes", New Object() {Login, Password, BusinessEntityName, pFromDate}, Me.GetEmployeeContractTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeContractTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeContractTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeContractTypesCompleted(Me, New GetEmployeeContractTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEque2EmployeesPagedCount", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEque2EmployeesPagedCount(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LegalEntityCode As String, ByVal PayrollCompanyCode As String, ByVal PageSize As Integer, ByVal FromDate As Date, ByVal EmployeeFillType As String) As Long
            Dim results() As Object = Me.Invoke("GetEque2EmployeesPagedCount", New Object() {Login, Password, BusinessEntityName, LegalEntityCode, PayrollCompanyCode, PageSize, FromDate, EmployeeFillType})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEque2EmployeesPagedCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LegalEntityCode As String, ByVal PayrollCompanyCode As String, ByVal PageSize As Integer, ByVal FromDate As Date, ByVal EmployeeFillType As String)
            Me.GetEque2EmployeesPagedCountAsync(Login, Password, BusinessEntityName, LegalEntityCode, PayrollCompanyCode, PageSize, FromDate, EmployeeFillType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEque2EmployeesPagedCountAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal LegalEntityCode As String, ByVal PayrollCompanyCode As String, ByVal PageSize As Integer, ByVal FromDate As Date, ByVal EmployeeFillType As String, ByVal userState As Object)
            If (Me.GetEque2EmployeesPagedCountOperationCompleted Is Nothing) Then
                Me.GetEque2EmployeesPagedCountOperationCompleted = AddressOf Me.OnGetEque2EmployeesPagedCountOperationCompleted
            End If
            Me.InvokeAsync("GetEque2EmployeesPagedCount", New Object() {Login, Password, BusinessEntityName, LegalEntityCode, PayrollCompanyCode, PageSize, FromDate, EmployeeFillType}, Me.GetEque2EmployeesPagedCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEque2EmployeesPagedCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEque2EmployeesPagedCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEque2EmployeesPagedCountCompleted(Me, New GetEque2EmployeesPagedCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEque2EmployeesPaged", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEque2EmployeesPaged(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal LegalEntityCode As String, ByVal PayrollCompanyCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal FromDate As Date, ByVal EmployeeFillType As String) As Eque2EmployeeWSI()
            Dim results() As Object = Me.Invoke("GetEque2EmployeesPaged", New Object() {Login, Password, BusinessEntityName, EmployeeCode, LegalEntityCode, PayrollCompanyCode, Page, PageSize, FromDate, EmployeeFillType})
            Return CType(results(0),Eque2EmployeeWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEque2EmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal LegalEntityCode As String, ByVal PayrollCompanyCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal FromDate As Date, ByVal EmployeeFillType As String)
            Me.GetEque2EmployeesPagedAsync(Login, Password, BusinessEntityName, EmployeeCode, LegalEntityCode, PayrollCompanyCode, Page, PageSize, FromDate, EmployeeFillType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEque2EmployeesPagedAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal LegalEntityCode As String, ByVal PayrollCompanyCode As String, ByVal Page As Integer, ByVal PageSize As Integer, ByVal FromDate As Date, ByVal EmployeeFillType As String, ByVal userState As Object)
            If (Me.GetEque2EmployeesPagedOperationCompleted Is Nothing) Then
                Me.GetEque2EmployeesPagedOperationCompleted = AddressOf Me.OnGetEque2EmployeesPagedOperationCompleted
            End If
            Me.InvokeAsync("GetEque2EmployeesPaged", New Object() {Login, Password, BusinessEntityName, EmployeeCode, LegalEntityCode, PayrollCompanyCode, Page, PageSize, FromDate, EmployeeFillType}, Me.GetEque2EmployeesPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEque2EmployeesPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEque2EmployeesPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEque2EmployeesPagedCompleted(Me, New GetEque2EmployeesPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetEmployeeDimensionDefinitions", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeDimensionDefinitions(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String) As DimensionDefinitionWSI()
            Dim results() As Object = Me.Invoke("GetEmployeeDimensionDefinitions", New Object() {Login, Password, BusinessEntityName})
            Return CType(results(0),DimensionDefinitionWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeDimensionDefinitionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String)
            Me.GetEmployeeDimensionDefinitionsAsync(Login, Password, BusinessEntityName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeDimensionDefinitionsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal userState As Object)
            If (Me.GetEmployeeDimensionDefinitionsOperationCompleted Is Nothing) Then
                Me.GetEmployeeDimensionDefinitionsOperationCompleted = AddressOf Me.OnGetEmployeeDimensionDefinitionsOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeDimensionDefinitions", New Object() {Login, Password, BusinessEntityName}, Me.GetEmployeeDimensionDefinitionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeDimensionDefinitionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeDimensionDefinitionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeDimensionDefinitionsCompleted(Me, New GetEmployeeDimensionDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertUpdateDimensionValue", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertUpdateDimensionValue(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String, ByVal DimensionValueDescription As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertUpdateDimensionValue", New Object() {Login, Password, BusinessEntityName, DimensionCode, DimensionValueCode, DimensionValueDescription})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertUpdateDimensionValueAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String, ByVal DimensionValueDescription As String)
            Me.InsertUpdateDimensionValueAsync(Login, Password, BusinessEntityName, DimensionCode, DimensionValueCode, DimensionValueDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertUpdateDimensionValueAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String, ByVal DimensionValueDescription As String, ByVal userState As Object)
            If (Me.InsertUpdateDimensionValueOperationCompleted Is Nothing) Then
                Me.InsertUpdateDimensionValueOperationCompleted = AddressOf Me.OnInsertUpdateDimensionValueOperationCompleted
            End If
            Me.InvokeAsync("InsertUpdateDimensionValue", New Object() {Login, Password, BusinessEntityName, DimensionCode, DimensionValueCode, DimensionValueDescription}, Me.InsertUpdateDimensionValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertUpdateDimensionValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertUpdateDimensionValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertUpdateDimensionValueCompleted(Me, New InsertUpdateDimensionValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/DeleteDimensionValue", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDimensionValue(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteDimensionValue", New Object() {Login, Password, BusinessEntityName, DimensionCode, DimensionValueCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDimensionValueAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String)
            Me.DeleteDimensionValueAsync(Login, Password, BusinessEntityName, DimensionCode, DimensionValueCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDimensionValueAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String, ByVal userState As Object)
            If (Me.DeleteDimensionValueOperationCompleted Is Nothing) Then
                Me.DeleteDimensionValueOperationCompleted = AddressOf Me.OnDeleteDimensionValueOperationCompleted
            End If
            Me.InvokeAsync("DeleteDimensionValue", New Object() {Login, Password, BusinessEntityName, DimensionCode, DimensionValueCode}, Me.DeleteDimensionValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDimensionValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDimensionValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDimensionValueCompleted(Me, New DeleteDimensionValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/GetTimeAttendanceRecords", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimeAttendanceRecords(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal FromDate As Date) As TimeAttendanceRecordWSI()
            Dim results() As Object = Me.Invoke("GetTimeAttendanceRecords", New Object() {Login, Password, BusinessEntityName, FromDate})
            Return CType(results(0),TimeAttendanceRecordWSI())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimeAttendanceRecordsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal FromDate As Date)
            Me.GetTimeAttendanceRecordsAsync(Login, Password, BusinessEntityName, FromDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimeAttendanceRecordsAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal FromDate As Date, ByVal userState As Object)
            If (Me.GetTimeAttendanceRecordsOperationCompleted Is Nothing) Then
                Me.GetTimeAttendanceRecordsOperationCompleted = AddressOf Me.OnGetTimeAttendanceRecordsOperationCompleted
            End If
            Me.InvokeAsync("GetTimeAttendanceRecords", New Object() {Login, Password, BusinessEntityName, FromDate}, Me.GetTimeAttendanceRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimeAttendanceRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimeAttendanceRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimeAttendanceRecordsCompleted(Me, New GetTimeAttendanceRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/InsertUpdateEmployeeDimension", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertUpdateEmployeeDimension(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertUpdateEmployeeDimension", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DimensionCode, DimensionValueCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertUpdateEmployeeDimensionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String)
            Me.InsertUpdateEmployeeDimensionAsync(Login, Password, BusinessEntityName, EmployeeCode, DimensionCode, DimensionValueCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertUpdateEmployeeDimensionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DimensionCode As String, ByVal DimensionValueCode As String, ByVal userState As Object)
            If (Me.InsertUpdateEmployeeDimensionOperationCompleted Is Nothing) Then
                Me.InsertUpdateEmployeeDimensionOperationCompleted = AddressOf Me.OnInsertUpdateEmployeeDimensionOperationCompleted
            End If
            Me.InvokeAsync("InsertUpdateEmployeeDimension", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DimensionCode, DimensionValueCode}, Me.InsertUpdateEmployeeDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertUpdateEmployeeDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertUpdateEmployeeDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertUpdateEmployeeDimensionCompleted(Me, New InsertUpdateEmployeeDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Exelsys/DeleteEmployeeDimension", RequestNamespace:="http://Exelsys/", ResponseNamespace:="http://Exelsys/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteEmployeeDimension(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DimensionCode As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteEmployeeDimension", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DimensionCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteEmployeeDimensionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DimensionCode As String)
            Me.DeleteEmployeeDimensionAsync(Login, Password, BusinessEntityName, EmployeeCode, DimensionCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteEmployeeDimensionAsync(ByVal Login As String, ByVal Password As String, ByVal BusinessEntityName As String, ByVal EmployeeCode As String, ByVal DimensionCode As String, ByVal userState As Object)
            If (Me.DeleteEmployeeDimensionOperationCompleted Is Nothing) Then
                Me.DeleteEmployeeDimensionOperationCompleted = AddressOf Me.OnDeleteEmployeeDimensionOperationCompleted
            End If
            Me.InvokeAsync("DeleteEmployeeDimension", New Object() {Login, Password, BusinessEntityName, EmployeeCode, DimensionCode}, Me.DeleteEmployeeDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteEmployeeDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteEmployeeDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteEmployeeDimensionCompleted(Me, New DeleteEmployeeDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SubmitEmployeeAbsenceRequestWSI
        
        Private employeeCodeField As String
        
        Private approvedField As Boolean
        
        Private causeOfAbsenceCodeField As String
        
        Private descriptionField As String
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private entryDateField As System.Nullable(Of Date)
        
        Private quantityField As Decimal
        
        Private unitOfMeasureCodeField As String
        
        Private documentNoField As String
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Approved() As Boolean
            Get
                Return Me.approvedField
            End Get
            Set
                Me.approvedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsenceCode() As String
            Get
                Return Me.causeOfAbsenceCodeField
            End Get
            Set
                Me.causeOfAbsenceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EntryDate() As System.Nullable(Of Date)
            Get
                Return Me.entryDateField
            End Get
            Set
                Me.entryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DimensionValue
        
        Private codeField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DimensionDefinitionWSI
        
        Private dimensionCodeField As String
        
        Private nameField As String
        
        Private labelField As String
        
        Private valuesField() As DimensionValue
        
        '''<remarks/>
        Public Property DimensionCode() As String
            Get
                Return Me.dimensionCodeField
            End Get
            Set
                Me.dimensionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Values() As DimensionValue()
            Get
                Return Me.valuesField
            End Get
            Set
                Me.valuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class Eque2AddressWSI
        
        Private addressTypeField As String
        
        Private addressLine1Field As String
        
        Private addressLine2Field As String
        
        Private addressLine3Field As String
        
        Private cityField As String
        
        Private postCodeField As String
        
        Private countryISOCodeField As String
        
        Private districtProvinceField As String
        
        '''<remarks/>
        Public Property AddressType() As String
            Get
                Return Me.addressTypeField
            End Get
            Set
                Me.addressTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine1() As String
            Get
                Return Me.addressLine1Field
            End Get
            Set
                Me.addressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine2() As String
            Get
                Return Me.addressLine2Field
            End Get
            Set
                Me.addressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine3() As String
            Get
                Return Me.addressLine3Field
            End Get
            Set
                Me.addressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCode() As String
            Get
                Return Me.postCodeField
            End Get
            Set
                Me.postCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCode() As String
            Get
                Return Me.countryISOCodeField
            End Get
            Set
                Me.countryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvince() As String
            Get
                Return Me.districtProvinceField
            End Get
            Set
                Me.districtProvinceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class Eque2EmployeeWSI
        
        Private employeeCodeField As String
        
        Private payrollCompanyNoField As String
        
        Private payrollField As String
        
        Private gUIDField As String
        
        Private lastNameField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private namePrefixField As String
        
        Private departmentManagerCodeField As String
        
        Private departmentManagerNameField As String
        
        Private parentDepartmentCodeField As String
        
        Private nameSuffixField As String
        
        Private birthDateField As Date
        
        Private statusField As String
        
        Private salaryLastUpdatedField As System.Nullable(Of Date)
        
        Private salaryLastUpdatedStringField As String
        
        Private mainAddressField As Eque2AddressWSI
        
        Private genderField As String
        
        Private socialSecurityNoField As String
        
        Private employmentDateField As Date
        
        Private terminationDateField As System.Nullable(Of Date)
        
        Private terminationReasonCodeField As String
        
        Private terminationCommentsField As String
        
        Private inactiveDateField As System.Nullable(Of Date)
        
        Private inactivityCodeField As String
        
        Private employeeContractTypeField As String
        
        Private employeeContractTypeCodeField As String
        
        Private employeeContractTypeTypeField As String
        
        Private employeeJobDescriptionCodeField As String
        
        Private employeeJobDescriptionField As String
        
        Private workEMailField As String
        
        Private bankNameField As String
        
        Private bankSortCodeField As String
        
        Private bankAccountNoField As String
        
        Private iBANField As String
        
        Private bICField As String
        
        Private weeklyWorkingHoursField As System.Nullable(Of Decimal)
        
        Private dailyWorkingHoursField As System.Nullable(Of Decimal)
        
        Private daysPerWeekField As System.Nullable(Of Integer)
        
        Private currentSalaryAmountField As System.Nullable(Of Decimal)
        
        Private salaryTypeField As String
        
        Private paymentFrequencyField As String
        
        Private currencyIDField As String
        
        Private fTEquivalentField As System.Nullable(Of Decimal)
        
        Private positionField As String
        
        Private departmentCodeField As String
        
        Private employeeCostCenterCodeField As String
        
        Private dateOfClassificationField As System.Nullable(Of Date)
        
        Private dateOfClassificationStringField As String
        
        Private maritalStatusField As String
        
        Private religionField As String
        
        Private incomeTaxNoField As String
        
        Private nationalityCountryISOCodeField As String
        
        Private payrollNoField As String
        
        Private employeeGradeField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private createdByField As String
        
        Private updatedByField As String
        
        Private validRightToWorkField As Boolean
        
        Private workMobileNoField As String
        
        Private taxCodeCodeField As String
        
        Private taxCodeDescriptionField As String
        
        Private userFieldsField() As EmployeeUserField
        
        Private dimensionsField() As EmployeeDimension
        
        Private positionAssignmentsField() As PositionAssignmentWSI
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PayrollCompanyNo() As String
            Get
                Return Me.payrollCompanyNoField
            End Get
            Set
                Me.payrollCompanyNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Payroll() As String
            Get
                Return Me.payrollField
            End Get
            Set
                Me.payrollField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GUID() As String
            Get
                Return Me.gUIDField
            End Get
            Set
                Me.gUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentManagerCode() As String
            Get
                Return Me.departmentManagerCodeField
            End Get
            Set
                Me.departmentManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentManagerName() As String
            Get
                Return Me.departmentManagerNameField
            End Get
            Set
                Me.departmentManagerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentDepartmentCode() As String
            Get
                Return Me.parentDepartmentCodeField
            End Get
            Set
                Me.parentDepartmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDate() As Date
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryLastUpdated() As System.Nullable(Of Date)
            Get
                Return Me.salaryLastUpdatedField
            End Get
            Set
                Me.salaryLastUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryLastUpdatedString() As String
            Get
                Return Me.salaryLastUpdatedStringField
            End Get
            Set
                Me.salaryLastUpdatedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddress() As Eque2AddressWSI
            Get
                Return Me.mainAddressField
            End Get
            Set
                Me.mainAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SocialSecurityNo() As String
            Get
                Return Me.socialSecurityNoField
            End Get
            Set
                Me.socialSecurityNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmploymentDate() As Date
            Get
                Return Me.employmentDateField
            End Get
            Set
                Me.employmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TerminationDate() As System.Nullable(Of Date)
            Get
                Return Me.terminationDateField
            End Get
            Set
                Me.terminationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TerminationReasonCode() As String
            Get
                Return Me.terminationReasonCodeField
            End Get
            Set
                Me.terminationReasonCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TerminationComments() As String
            Get
                Return Me.terminationCommentsField
            End Get
            Set
                Me.terminationCommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InactiveDate() As System.Nullable(Of Date)
            Get
                Return Me.inactiveDateField
            End Get
            Set
                Me.inactiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InactivityCode() As String
            Get
                Return Me.inactivityCodeField
            End Get
            Set
                Me.inactivityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContractType() As String
            Get
                Return Me.employeeContractTypeField
            End Get
            Set
                Me.employeeContractTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContractTypeCode() As String
            Get
                Return Me.employeeContractTypeCodeField
            End Get
            Set
                Me.employeeContractTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContractTypeType() As String
            Get
                Return Me.employeeContractTypeTypeField
            End Get
            Set
                Me.employeeContractTypeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescriptionCode() As String
            Get
                Return Me.employeeJobDescriptionCodeField
            End Get
            Set
                Me.employeeJobDescriptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescription() As String
            Get
                Return Me.employeeJobDescriptionField
            End Get
            Set
                Me.employeeJobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkEMail() As String
            Get
                Return Me.workEMailField
            End Get
            Set
                Me.workEMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankName() As String
            Get
                Return Me.bankNameField
            End Get
            Set
                Me.bankNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankSortCode() As String
            Get
                Return Me.bankSortCodeField
            End Get
            Set
                Me.bankSortCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountNo() As String
            Get
                Return Me.bankAccountNoField
            End Get
            Set
                Me.bankAccountNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IBAN() As String
            Get
                Return Me.iBANField
            End Get
            Set
                Me.iBANField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BIC() As String
            Get
                Return Me.bICField
            End Get
            Set
                Me.bICField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WeeklyWorkingHours() As System.Nullable(Of Decimal)
            Get
                Return Me.weeklyWorkingHoursField
            End Get
            Set
                Me.weeklyWorkingHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DailyWorkingHours() As System.Nullable(Of Decimal)
            Get
                Return Me.dailyWorkingHoursField
            End Get
            Set
                Me.dailyWorkingHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DaysPerWeek() As System.Nullable(Of Integer)
            Get
                Return Me.daysPerWeekField
            End Get
            Set
                Me.daysPerWeekField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalaryAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryAmountField
            End Get
            Set
                Me.currentSalaryAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryType() As String
            Get
                Return Me.salaryTypeField
            End Get
            Set
                Me.salaryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentFrequency() As String
            Get
                Return Me.paymentFrequencyField
            End Get
            Set
                Me.paymentFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrencyID() As String
            Get
                Return Me.currencyIDField
            End Get
            Set
                Me.currencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FTEquivalent() As System.Nullable(Of Decimal)
            Get
                Return Me.fTEquivalentField
            End Get
            Set
                Me.fTEquivalentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCostCenterCode() As String
            Get
                Return Me.employeeCostCenterCodeField
            End Get
            Set
                Me.employeeCostCenterCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateOfClassification() As System.Nullable(Of Date)
            Get
                Return Me.dateOfClassificationField
            End Get
            Set
                Me.dateOfClassificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateOfClassificationString() As String
            Get
                Return Me.dateOfClassificationStringField
            End Get
            Set
                Me.dateOfClassificationStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IncomeTaxNo() As String
            Get
                Return Me.incomeTaxNoField
            End Get
            Set
                Me.incomeTaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountryISOCode() As String
            Get
                Return Me.nationalityCountryISOCodeField
            End Get
            Set
                Me.nationalityCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PayrollNo() As String
            Get
                Return Me.payrollNoField
            End Get
            Set
                Me.payrollNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeGrade() As String
            Get
                Return Me.employeeGradeField
            End Get
            Set
                Me.employeeGradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidRightToWork() As Boolean
            Get
                Return Me.validRightToWorkField
            End Get
            Set
                Me.validRightToWorkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkMobileNo() As String
            Get
                Return Me.workMobileNoField
            End Get
            Set
                Me.workMobileNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaxCodeCode() As String
            Get
                Return Me.taxCodeCodeField
            End Get
            Set
                Me.taxCodeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaxCodeDescription() As String
            Get
                Return Me.taxCodeDescriptionField
            End Get
            Set
                Me.taxCodeDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFields() As EmployeeUserField()
            Get
                Return Me.userFieldsField
            End Get
            Set
                Me.userFieldsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Dimensions() As EmployeeDimension()
            Get
                Return Me.dimensionsField
            End Get
            Set
                Me.dimensionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionAssignments() As PositionAssignmentWSI()
            Get
                Return Me.positionAssignmentsField
            End Get
            Set
                Me.positionAssignmentsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeUserField
        
        Private descriptionField As String
        
        Private valueField As String
        
        Private gUIDField As String
        
        Private nameField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GUID() As String
            Get
                Return Me.gUIDField
            End Get
            Set
                Me.gUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeDimension
        
        Private descriptionField As String
        
        Private valueField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PositionAssignmentWSI
        
        Private positionCodeField As String
        
        Private organisationalUnitCodeField As String
        
        Private legalEntityCodeField As String
        
        Private positionAssignmentIDField As Integer
        
        Private positionField As String
        
        Private employeeCodeField As String
        
        Private transactionTypeField As String
        
        Private descriptionField As String
        
        Private assignmentTypeField As String
        
        Private positionStartDateField As Date
        
        Private positionStartDateStringField As String
        
        Private positionEndDateField As System.Nullable(Of Date)
        
        Private positionEndDateStringField As String
        
        Private salaryTypeField As String
        
        Private currencyIDField As String
        
        Private salaryField As Decimal
        
        Private annualSalaryField As Decimal
        
        Private statusField As String
        
        Private reviewDateField As System.Nullable(Of Date)
        
        Private fTEquivalentField As Decimal
        
        Private actionedByEmployeeField As String
        
        Private primaryPositionAssignmentField As Boolean
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property PositionCode() As String
            Get
                Return Me.positionCodeField
            End Get
            Set
                Me.positionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrganisationalUnitCode() As String
            Get
                Return Me.organisationalUnitCodeField
            End Get
            Set
                Me.organisationalUnitCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LegalEntityCode() As String
            Get
                Return Me.legalEntityCodeField
            End Get
            Set
                Me.legalEntityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionAssignmentID() As Integer
            Get
                Return Me.positionAssignmentIDField
            End Get
            Set
                Me.positionAssignmentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionType() As String
            Get
                Return Me.transactionTypeField
            End Get
            Set
                Me.transactionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssignmentType() As String
            Get
                Return Me.assignmentTypeField
            End Get
            Set
                Me.assignmentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionStartDate() As Date
            Get
                Return Me.positionStartDateField
            End Get
            Set
                Me.positionStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionStartDateString() As String
            Get
                Return Me.positionStartDateStringField
            End Get
            Set
                Me.positionStartDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PositionEndDate() As System.Nullable(Of Date)
            Get
                Return Me.positionEndDateField
            End Get
            Set
                Me.positionEndDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionEndDateString() As String
            Get
                Return Me.positionEndDateStringField
            End Get
            Set
                Me.positionEndDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryType() As String
            Get
                Return Me.salaryTypeField
            End Get
            Set
                Me.salaryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrencyID() As String
            Get
                Return Me.currencyIDField
            End Get
            Set
                Me.currencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Salary() As Decimal
            Get
                Return Me.salaryField
            End Get
            Set
                Me.salaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnnualSalary() As Decimal
            Get
                Return Me.annualSalaryField
            End Get
            Set
                Me.annualSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReviewDate() As System.Nullable(Of Date)
            Get
                Return Me.reviewDateField
            End Get
            Set
                Me.reviewDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTEquivalent() As Decimal
            Get
                Return Me.fTEquivalentField
            End Get
            Set
                Me.fTEquivalentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActionedByEmployee() As String
            Get
                Return Me.actionedByEmployeeField
            End Get
            Set
                Me.actionedByEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrimaryPositionAssignment() As Boolean
            Get
                Return Me.primaryPositionAssignmentField
            End Get
            Set
                Me.primaryPositionAssignmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeContractTypeWSI
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private dateFirstIntroducedField As System.Nullable(Of Date)
        
        Private validUntilField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private notesField As String
        
        Private typeField As String
        
        Private salaryTypeField As String
        
        Private annualSalaryFormulaField As String
        
        Private paymentFrequencyField As String
        
        Private onShiftWorkField As System.Nullable(Of Boolean)
        
        Private absencesUseShiftsField As Boolean
        
        Private weeklyWorkingHoursField As System.Nullable(Of Decimal)
        
        Private dailyWorkingHoursField As System.Nullable(Of Decimal)
        
        Private defaultFTEField As System.Nullable(Of Decimal)
        
        Private dateCreatedField As Date
        
        Private dateUpdatedField As Date
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateFirstIntroduced() As System.Nullable(Of Date)
            Get
                Return Me.dateFirstIntroducedField
            End Get
            Set
                Me.dateFirstIntroducedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidUntil() As System.Nullable(Of Date)
            Get
                Return Me.validUntilField
            End Get
            Set
                Me.validUntilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryType() As String
            Get
                Return Me.salaryTypeField
            End Get
            Set
                Me.salaryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnnualSalaryFormula() As String
            Get
                Return Me.annualSalaryFormulaField
            End Get
            Set
                Me.annualSalaryFormulaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentFrequency() As String
            Get
                Return Me.paymentFrequencyField
            End Get
            Set
                Me.paymentFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OnShiftWork() As System.Nullable(Of Boolean)
            Get
                Return Me.onShiftWorkField
            End Get
            Set
                Me.onShiftWorkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AbsencesUseShifts() As Boolean
            Get
                Return Me.absencesUseShiftsField
            End Get
            Set
                Me.absencesUseShiftsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WeeklyWorkingHours() As System.Nullable(Of Decimal)
            Get
                Return Me.weeklyWorkingHoursField
            End Get
            Set
                Me.weeklyWorkingHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DailyWorkingHours() As System.Nullable(Of Decimal)
            Get
                Return Me.dailyWorkingHoursField
            End Get
            Set
                Me.dailyWorkingHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DefaultFTE() As System.Nullable(Of Decimal)
            Get
                Return Me.defaultFTEField
            End Get
            Set
                Me.defaultFTEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class NewsItemWSI
        
        Private notesField As String
        
        Private releaseDateField As System.Nullable(Of Date)
        
        Private headingField As String
        
        Private newsItemIDField As Integer
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReleaseDate() As System.Nullable(Of Date)
            Get
                Return Me.releaseDateField
            End Get
            Set
                Me.releaseDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Heading() As String
            Get
                Return Me.headingField
            End Get
            Set
                Me.headingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewsItemID() As Integer
            Get
                Return Me.newsItemIDField
            End Get
            Set
                Me.newsItemIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class OvertimeRequestWSI
        
        Private overtimeRequestIDField As Integer
        
        Private startDateField As Date
        
        Private unitOfMeasureField As String
        
        Private transactionEndDateField As Date
        
        Private transactionDateField As Date
        
        Private quantityField As Decimal
        
        Private entryDateField As Date
        
        Private employeeCodeField As String
        
        Private documentNoField As String
        
        Private descriptionField As String
        
        Private unitOfMeasureCodeField As String
        
        Private canBeApprovedField As Boolean
        
        Private approvalStatusField As String
        
        Private dateCreatedField As Date
        
        Private dateUpdatedField As Date
        
        '''<remarks/>
        Public Property OvertimeRequestID() As Integer
            Get
                Return Me.overtimeRequestIDField
            End Get
            Set
                Me.overtimeRequestIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasure() As String
            Get
                Return Me.unitOfMeasureField
            End Get
            Set
                Me.unitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionEndDate() As Date
            Get
                Return Me.transactionEndDateField
            End Get
            Set
                Me.transactionEndDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionDate() As Date
            Get
                Return Me.transactionDateField
            End Get
            Set
                Me.transactionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryDate() As Date
            Get
                Return Me.entryDateField
            End Get
            Set
                Me.entryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanBeApproved() As Boolean
            Get
                Return Me.canBeApprovedField
            End Get
            Set
                Me.canBeApprovedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovalStatus() As String
            Get
                Return Me.approvalStatusField
            End Get
            Set
                Me.approvalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class WorkspaceWSI
        
        Private workspaceResourceIDField As Integer
        
        Private workspaceReservationIDField As Integer
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private employeeField As String
        
        Private bookedFromField As System.Nullable(Of Date)
        
        Private bookedUntilField As System.Nullable(Of Date)
        
        Private employeeIDField As Integer
        
        Private locationIDField As Integer
        
        Private buildingIDField As Integer
        
        Private floorIDField As Integer
        
        Private statusField As String
        
        Private notesField As String
        
        Private locationField As String
        
        Private buildingField As String
        
        Private buildingFloorField As String
        
        Private actionField As String
        
        Private idField As Integer
        
        Private nameField As String
        
        Private startDateField As Date
        
        Private endDateField As Date
        
        Private resourceIdField As Integer
        
        '''<remarks/>
        Public Property WorkspaceResourceID() As Integer
            Get
                Return Me.workspaceResourceIDField
            End Get
            Set
                Me.workspaceResourceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkspaceReservationID() As Integer
            Get
                Return Me.workspaceReservationIDField
            End Get
            Set
                Me.workspaceReservationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Employee() As String
            Get
                Return Me.employeeField
            End Get
            Set
                Me.employeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BookedFrom() As System.Nullable(Of Date)
            Get
                Return Me.bookedFromField
            End Get
            Set
                Me.bookedFromField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BookedUntil() As System.Nullable(Of Date)
            Get
                Return Me.bookedUntilField
            End Get
            Set
                Me.bookedUntilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationID() As Integer
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuildingID() As Integer
            Get
                Return Me.buildingIDField
            End Get
            Set
                Me.buildingIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FloorID() As Integer
            Get
                Return Me.floorIDField
            End Get
            Set
                Me.floorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Building() As String
            Get
                Return Me.buildingField
            End Get
            Set
                Me.buildingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuildingFloor() As String
            Get
                Return Me.buildingFloorField
            End Get
            Set
                Me.buildingFloorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Action() As String
            Get
                Return Me.actionField
            End Get
            Set
                Me.actionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResourceId() As Integer
            Get
                Return Me.resourceIdField
            End Get
            Set
                Me.resourceIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class BuildingFloorWSI
        
        Private buildingFloorIDField As Integer
        
        Private buildingIDField As Integer
        
        Private descriptionField As String
        
        Private notesField As String
        
        Private availableCountField As Integer
        
        Private documentUrlField As String
        
        '''<remarks/>
        Public Property BuildingFloorID() As Integer
            Get
                Return Me.buildingFloorIDField
            End Get
            Set
                Me.buildingFloorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BuildingID() As Integer
            Get
                Return Me.buildingIDField
            End Get
            Set
                Me.buildingIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvailableCount() As Integer
            Get
                Return Me.availableCountField
            End Get
            Set
                Me.availableCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentUrl() As String
            Get
                Return Me.documentUrlField
            End Get
            Set
                Me.documentUrlField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class BuildingWSI
        
        Private buildingIDField As Integer
        
        Private descriptionField As String
        
        Private locationIDField As Integer
        
        '''<remarks/>
        Public Property BuildingID() As Integer
            Get
                Return Me.buildingIDField
            End Get
            Set
                Me.buildingIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationID() As Integer
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class LocationWSI
        
        Private idField As Integer
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class AppraisalTemplateWSI
        
        Private descriptionField As String
        
        Private appraisalTemplateIDField As Integer
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalTemplateID() As Integer
            Get
                Return Me.appraisalTemplateIDField
            End Get
            Set
                Me.appraisalTemplateIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAdhocAppraisalCompetencyWSI
        
        Private mandatoryField As Boolean
        
        Private employeeAdhocAppraisalCompetencyIDField As Integer
        
        Private weightField As Integer
        
        Private displayOrderField As System.Nullable(Of Short)
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private markField As Integer
        
        Private commentField As String
        
        Private competencyGroupField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Mandatory() As Boolean
            Get
                Return Me.mandatoryField
            End Get
            Set
                Me.mandatoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAdhocAppraisalCompetencyID() As Integer
            Get
                Return Me.employeeAdhocAppraisalCompetencyIDField
            End Get
            Set
                Me.employeeAdhocAppraisalCompetencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Weight() As Integer
            Get
                Return Me.weightField
            End Get
            Set
                Me.weightField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DisplayOrder() As System.Nullable(Of Short)
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mark() As Integer
            Get
                Return Me.markField
            End Get
            Set
                Me.markField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompetencyGroup() As String
            Get
                Return Me.competencyGroupField
            End Get
            Set
                Me.competencyGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAdhocAppraisalWSI
        
        Private descriptionIDField As String
        
        Private appraiserCodeField As String
        
        Private appraiserNameField As String
        
        Private departmentIDField As System.Nullable(Of Integer)
        
        Private employeeIDField As Integer
        
        Private employeeNameField As String
        
        Private employeePictureIDField As String
        
        Private adHocAppraisalCategoryIDField As Integer
        
        Private statusField As String
        
        Private appraisalTemplateIDField As System.Nullable(Of Integer)
        
        Private languageIDField As Integer
        
        Private appraisalDateField As Date
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private competentiesField() As EmployeeAdhocAppraisalCompetencyWSI
        
        Private marksField() As AppraisalMarkingCodeWSI
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraiserCode() As String
            Get
                Return Me.appraiserCodeField
            End Get
            Set
                Me.appraiserCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraiserName() As String
            Get
                Return Me.appraiserNameField
            End Get
            Set
                Me.appraiserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DepartmentID() As System.Nullable(Of Integer)
            Get
                Return Me.departmentIDField
            End Get
            Set
                Me.departmentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeePictureID() As String
            Get
                Return Me.employeePictureIDField
            End Get
            Set
                Me.employeePictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdHocAppraisalCategoryID() As Integer
            Get
                Return Me.adHocAppraisalCategoryIDField
            End Get
            Set
                Me.adHocAppraisalCategoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AppraisalTemplateID() As System.Nullable(Of Integer)
            Get
                Return Me.appraisalTemplateIDField
            End Get
            Set
                Me.appraisalTemplateIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageID() As Integer
            Get
                Return Me.languageIDField
            End Get
            Set
                Me.languageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalDate() As Date
            Get
                Return Me.appraisalDateField
            End Get
            Set
                Me.appraisalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Competenties() As EmployeeAdhocAppraisalCompetencyWSI()
            Get
                Return Me.competentiesField
            End Get
            Set
                Me.competentiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Marks() As AppraisalMarkingCodeWSI()
            Get
                Return Me.marksField
            End Get
            Set
                Me.marksField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class AppraisalMarkingCodeWSI
        
        Private appraisalMarkingCodeIDField As Integer
        
        Private displayOrderField As Short
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private valueField As Integer
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property AppraisalMarkingCodeID() As Integer
            Get
                Return Me.appraisalMarkingCodeIDField
            End Get
            Set
                Me.appraisalMarkingCodeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayOrder() As Short
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As Integer
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeProjectTimeWSI
        
        Private businessEntityIdField As Integer
        
        Private employeeCodeField As String
        
        Private nameField As String
        
        Private departmentField As String
        
        Private projectField As String
        
        Private chargeableField As Decimal
        
        Private nonChargeableField As Decimal
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Project() As String
            Get
                Return Me.projectField
            End Get
            Set
                Me.projectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Chargeable() As Decimal
            Get
                Return Me.chargeableField
            End Get
            Set
                Me.chargeableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NonChargeable() As Decimal
            Get
                Return Me.nonChargeableField
            End Get
            Set
                Me.nonChargeableField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ShiftWSI
        
        Private shiftColourField As String
        
        Private nameField As String
        
        Private locationField As String
        
        Private shortDescriptionField As String
        
        Private startDateField As Date
        
        Private endDateField As Date
        
        Private resourceIdField As Integer
        
        Private shiftIDField As Integer
        
        Private employeeIDField As Integer
        
        Private shiftTemplateIDField As System.Nullable(Of Integer)
        
        Private departmentIDField As System.Nullable(Of Integer)
        
        Private businessEntityIdField As Integer
        
        Private commentField As String
        
        Private statusField As String
        
        Private dateField As Date
        
        Private timeInField As Date
        
        Private timeOutField As Date
        
        Private locationIDField As System.Nullable(Of Integer)
        
        Private jobDescriptionIDField As System.Nullable(Of Integer)
        
        Private unpaidBreakField As System.Nullable(Of Integer)
        
        Private workHoursField As System.Nullable(Of Decimal)
        
        Private flexTimeInField As System.Nullable(Of Integer)
        
        Private flexTimeOutField As System.Nullable(Of Integer)
        
        Private hardshipField As Boolean
        
        Private conflictField As Boolean
        
        Private overtimeField As Decimal
        
        Private allowOvertimeField As Boolean
        
        Private customShiftField As Boolean
        
        '''<remarks/>
        Public Property ShiftColour() As String
            Get
                Return Me.shiftColourField
            End Get
            Set
                Me.shiftColourField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShortDescription() As String
            Get
                Return Me.shortDescriptionField
            End Get
            Set
                Me.shortDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResourceId() As Integer
            Get
                Return Me.resourceIdField
            End Get
            Set
                Me.resourceIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShiftID() As Integer
            Get
                Return Me.shiftIDField
            End Get
            Set
                Me.shiftIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ShiftTemplateID() As System.Nullable(Of Integer)
            Get
                Return Me.shiftTemplateIDField
            End Get
            Set
                Me.shiftTemplateIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DepartmentID() As System.Nullable(Of Integer)
            Get
                Return Me.departmentIDField
            End Get
            Set
                Me.departmentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeIn() As Date
            Get
                Return Me.timeInField
            End Get
            Set
                Me.timeInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeOut() As Date
            Get
                Return Me.timeOutField
            End Get
            Set
                Me.timeOutField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LocationID() As System.Nullable(Of Integer)
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property JobDescriptionID() As System.Nullable(Of Integer)
            Get
                Return Me.jobDescriptionIDField
            End Get
            Set
                Me.jobDescriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnpaidBreak() As System.Nullable(Of Integer)
            Get
                Return Me.unpaidBreakField
            End Get
            Set
                Me.unpaidBreakField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkHours() As System.Nullable(Of Decimal)
            Get
                Return Me.workHoursField
            End Get
            Set
                Me.workHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FlexTimeIn() As System.Nullable(Of Integer)
            Get
                Return Me.flexTimeInField
            End Get
            Set
                Me.flexTimeInField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FlexTimeOut() As System.Nullable(Of Integer)
            Get
                Return Me.flexTimeOutField
            End Get
            Set
                Me.flexTimeOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hardship() As Boolean
            Get
                Return Me.hardshipField
            End Get
            Set
                Me.hardshipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Conflict() As Boolean
            Get
                Return Me.conflictField
            End Get
            Set
                Me.conflictField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Overtime() As Decimal
            Get
                Return Me.overtimeField
            End Get
            Set
                Me.overtimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowOvertime() As Boolean
            Get
                Return Me.allowOvertimeField
            End Get
            Set
                Me.allowOvertimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomShift() As Boolean
            Get
                Return Me.customShiftField
            End Get
            Set
                Me.customShiftField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class AttendanceStatusWSI
        
        Private perDayField() As AttendanceStatusWSI
        
        Private timeAttendanceRecordField As TimeAttendanceRecordWSI
        
        Private employeeNameField As String
        
        Private deviceIDField As String
        
        Private workAttendanceTypeIDField As System.Nullable(Of Integer)
        
        Private breakField As Decimal
        
        Private timeZoneField As String
        
        Private longitudeField As String
        
        Private latitudeField As String
        
        Private addressField As String
        
        Private statusField As String
        
        Private lastActionDateTimeField As System.Nullable(Of Date)
        
        Private tAEmployeeNumberField As String
        
        Private fromDateTimeField As Date
        
        Private paramDateTimeField As System.Nullable(Of Date)
        
        Private toDateTimeField As Date
        
        Private hoursDurationField As Decimal
        
        Private processingStatusField As String
        
        Private commentField As String
        
        Private overtimeField As Decimal
        
        Private weeklyHoursWorkedFromTAField As Decimal
        
        Private todayHoursWorkedFromTAField As Decimal
        
        Private setCurrentTimeField As System.Nullable(Of Boolean)
        
        '''<remarks/>
        Public Property PerDay() As AttendanceStatusWSI()
            Get
                Return Me.perDayField
            End Get
            Set
                Me.perDayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeAttendanceRecord() As TimeAttendanceRecordWSI
            Get
                Return Me.timeAttendanceRecordField
            End Get
            Set
                Me.timeAttendanceRecordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeviceID() As String
            Get
                Return Me.deviceIDField
            End Get
            Set
                Me.deviceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkAttendanceTypeID() As System.Nullable(Of Integer)
            Get
                Return Me.workAttendanceTypeIDField
            End Get
            Set
                Me.workAttendanceTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Break() As Decimal
            Get
                Return Me.breakField
            End Get
            Set
                Me.breakField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeZone() As String
            Get
                Return Me.timeZoneField
            End Get
            Set
                Me.timeZoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Longitude() As String
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Latitude() As String
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LastActionDateTime() As System.Nullable(Of Date)
            Get
                Return Me.lastActionDateTimeField
            End Get
            Set
                Me.lastActionDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TAEmployeeNumber() As String
            Get
                Return Me.tAEmployeeNumberField
            End Get
            Set
                Me.tAEmployeeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateTime() As Date
            Get
                Return Me.fromDateTimeField
            End Get
            Set
                Me.fromDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ParamDateTime() As System.Nullable(Of Date)
            Get
                Return Me.paramDateTimeField
            End Get
            Set
                Me.paramDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateTime() As Date
            Get
                Return Me.toDateTimeField
            End Get
            Set
                Me.toDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HoursDuration() As Decimal
            Get
                Return Me.hoursDurationField
            End Get
            Set
                Me.hoursDurationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProcessingStatus() As String
            Get
                Return Me.processingStatusField
            End Get
            Set
                Me.processingStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Overtime() As Decimal
            Get
                Return Me.overtimeField
            End Get
            Set
                Me.overtimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WeeklyHoursWorkedFromTA() As Decimal
            Get
                Return Me.weeklyHoursWorkedFromTAField
            End Get
            Set
                Me.weeklyHoursWorkedFromTAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TodayHoursWorkedFromTA() As Decimal
            Get
                Return Me.todayHoursWorkedFromTAField
            End Get
            Set
                Me.todayHoursWorkedFromTAField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SetCurrentTime() As System.Nullable(Of Boolean)
            Get
                Return Me.setCurrentTimeField
            End Get
            Set
                Me.setCurrentTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TimeAttendanceRecordWSI
        
        Private timeAttendanceRecordIDField As Integer
        
        Private shiftField As String
        
        Private workAttendanceTypeField As String
        
        Private timeShiftField As Integer
        
        Private nonWorkingField As String
        
        Private tAEmployeeNumberField As String
        
        Private locationCodeField As String
        
        Private lateMinutesField As System.Nullable(Of Integer)
        
        Private overtimeField As Decimal
        
        Private commentField As String
        
        Private processingStatusField As String
        
        Private hoursDurationField As Decimal
        
        Private toDateTimeField As Date
        
        Private fromDateTimeField As Date
        
        Private employeeCodeField As String
        
        Private departmentCodeField As String
        
        Private dateCreatedField As Date
        
        Private dateUpdatedField As Date
        
        '''<remarks/>
        Public Property TimeAttendanceRecordID() As Integer
            Get
                Return Me.timeAttendanceRecordIDField
            End Get
            Set
                Me.timeAttendanceRecordIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Shift() As String
            Get
                Return Me.shiftField
            End Get
            Set
                Me.shiftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkAttendanceType() As String
            Get
                Return Me.workAttendanceTypeField
            End Get
            Set
                Me.workAttendanceTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeShift() As Integer
            Get
                Return Me.timeShiftField
            End Get
            Set
                Me.timeShiftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NonWorking() As String
            Get
                Return Me.nonWorkingField
            End Get
            Set
                Me.nonWorkingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TAEmployeeNumber() As String
            Get
                Return Me.tAEmployeeNumberField
            End Get
            Set
                Me.tAEmployeeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationCode() As String
            Get
                Return Me.locationCodeField
            End Get
            Set
                Me.locationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LateMinutes() As System.Nullable(Of Integer)
            Get
                Return Me.lateMinutesField
            End Get
            Set
                Me.lateMinutesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Overtime() As Decimal
            Get
                Return Me.overtimeField
            End Get
            Set
                Me.overtimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProcessingStatus() As String
            Get
                Return Me.processingStatusField
            End Get
            Set
                Me.processingStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HoursDuration() As Decimal
            Get
                Return Me.hoursDurationField
            End Get
            Set
                Me.hoursDurationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateTime() As Date
            Get
                Return Me.toDateTimeField
            End Get
            Set
                Me.toDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateTime() As Date
            Get
                Return Me.fromDateTimeField
            End Get
            Set
                Me.fromDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CauseOfAbsenceWSI
        
        Private codeField As String
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private limitToBalanceField As Boolean
        
        Private useReasonCodesField As String
        
        Private reasonCodeListField As String
        
        Private calculationTypeField As String
        
        Private unitOfMeasureIDField As Integer
        
        Private carriedForwardPercentField As Decimal
        
        Private carriedForwardCeilingField As Decimal
        
        Private yearlyCeilingField As Decimal
        
        Private interfaceWithPayrollField As Boolean
        
        Private daysToCountField As String
        
        Private effectiveDateField As Date
        
        Private endYearDayField As Integer
        
        Private endYearMonthField As Integer
        
        Private locationField As String
        
        Private expiryDateField As System.Nullable(Of Date)
        
        Private minQtyField As System.Nullable(Of Decimal)
        
        Private maxQtyField As System.Nullable(Of Decimal)
        
        Private defaultField As Boolean
        
        Private restrictUOMUserInputField As Boolean
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LimitToBalance() As Boolean
            Get
                Return Me.limitToBalanceField
            End Get
            Set
                Me.limitToBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseReasonCodes() As String
            Get
                Return Me.useReasonCodesField
            End Get
            Set
                Me.useReasonCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReasonCodeList() As String
            Get
                Return Me.reasonCodeListField
            End Get
            Set
                Me.reasonCodeListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CalculationType() As String
            Get
                Return Me.calculationTypeField
            End Get
            Set
                Me.calculationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureID() As Integer
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarriedForwardPercent() As Decimal
            Get
                Return Me.carriedForwardPercentField
            End Get
            Set
                Me.carriedForwardPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarriedForwardCeiling() As Decimal
            Get
                Return Me.carriedForwardCeilingField
            End Get
            Set
                Me.carriedForwardCeilingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property YearlyCeiling() As Decimal
            Get
                Return Me.yearlyCeilingField
            End Get
            Set
                Me.yearlyCeilingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterfaceWithPayroll() As Boolean
            Get
                Return Me.interfaceWithPayrollField
            End Get
            Set
                Me.interfaceWithPayrollField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaysToCount() As String
            Get
                Return Me.daysToCountField
            End Get
            Set
                Me.daysToCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveDate() As Date
            Get
                Return Me.effectiveDateField
            End Get
            Set
                Me.effectiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndYearDay() As Integer
            Get
                Return Me.endYearDayField
            End Get
            Set
                Me.endYearDayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndYearMonth() As Integer
            Get
                Return Me.endYearMonthField
            End Get
            Set
                Me.endYearMonthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.expiryDateField
            End Get
            Set
                Me.expiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinQty() As System.Nullable(Of Decimal)
            Get
                Return Me.minQtyField
            End Get
            Set
                Me.minQtyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MaxQty() As System.Nullable(Of Decimal)
            Get
                Return Me.maxQtyField
            End Get
            Set
                Me.maxQtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Default]() As Boolean
            Get
                Return Me.defaultField
            End Get
            Set
                Me.defaultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RestrictUOMUserInput() As Boolean
            Get
                Return Me.restrictUOMUserInputField
            End Get
            Set
                Me.restrictUOMUserInputField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class WorkingTimeWSI
        
        Private startDateField As Date
        
        Private endDateField As Date
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class LanguageWSI
        
        Private languageIDField As Integer
        
        Private languageNameField As String
        
        Private languageCodeField As String
        
        '''<remarks/>
        Public Property LanguageID() As Integer
            Get
                Return Me.languageIDField
            End Get
            Set
                Me.languageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageName() As String
            Get
                Return Me.languageNameField
            End Get
            Set
                Me.languageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageCode() As String
            Get
                Return Me.languageCodeField
            End Get
            Set
                Me.languageCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApprovalTransactionWSI
        
        Private approvalTransactionIDField As Integer
        
        Private approvalRoutingField As String
        
        Private documentTypeField As String
        
        Private orderSequenceField As Integer
        
        Private originatorEmployeeField As String
        
        Private senderEmployeeField As String
        
        Private approverEmployeeField As String
        
        Private dateTimeSentField As System.Nullable(Of Date)
        
        Private dateTimeActionTakenField As System.Nullable(Of Date)
        
        Private anyCanApproveField As Boolean
        
        Private otherDocumentReferenceField As String
        
        Private approverCommentsField As String
        
        Private approvalRequestSummaryField As String
        
        Private actionRequiredField As String
        
        Private statusField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property ApprovalTransactionID() As Integer
            Get
                Return Me.approvalTransactionIDField
            End Get
            Set
                Me.approvalTransactionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovalRouting() As String
            Get
                Return Me.approvalRoutingField
            End Get
            Set
                Me.approvalRoutingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrderSequence() As Integer
            Get
                Return Me.orderSequenceField
            End Get
            Set
                Me.orderSequenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OriginatorEmployee() As String
            Get
                Return Me.originatorEmployeeField
            End Get
            Set
                Me.originatorEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SenderEmployee() As String
            Get
                Return Me.senderEmployeeField
            End Get
            Set
                Me.senderEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApproverEmployee() As String
            Get
                Return Me.approverEmployeeField
            End Get
            Set
                Me.approverEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateTimeSent() As System.Nullable(Of Date)
            Get
                Return Me.dateTimeSentField
            End Get
            Set
                Me.dateTimeSentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateTimeActionTaken() As System.Nullable(Of Date)
            Get
                Return Me.dateTimeActionTakenField
            End Get
            Set
                Me.dateTimeActionTakenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnyCanApprove() As Boolean
            Get
                Return Me.anyCanApproveField
            End Get
            Set
                Me.anyCanApproveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OtherDocumentReference() As String
            Get
                Return Me.otherDocumentReferenceField
            End Get
            Set
                Me.otherDocumentReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApproverComments() As String
            Get
                Return Me.approverCommentsField
            End Get
            Set
                Me.approverCommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovalRequestSummary() As String
            Get
                Return Me.approvalRequestSummaryField
            End Get
            Set
                Me.approvalRequestSummaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActionRequired() As String
            Get
                Return Me.actionRequiredField
            End Get
            Set
                Me.actionRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class JobApplicationFullWSI
        
        Private applicationReferenceField As String
        
        Private vacancyField As String
        
        Private applicantTypeField As String
        
        Private applicantNameField As String
        
        Private applicationDateField As Date
        
        Private interviewScoreField As System.Nullable(Of Decimal)
        
        Private experienceScoreField As System.Nullable(Of Decimal)
        
        Private examScoreField As System.Nullable(Of Decimal)
        
        Private qualificationScoreField As System.Nullable(Of Decimal)
        
        Private otherScoreField As System.Nullable(Of Decimal)
        
        Private currentSalaryField As System.Nullable(Of Decimal)
        
        Private salaryExpectationField As System.Nullable(Of Decimal)
        
        Private workStatusField As String
        
        Private availabilityCommentField As String
        
        Private availabilityInWeeksField As System.Nullable(Of Integer)
        
        Private interviewedByEmployeeField As String
        
        Private nextInterviewDateTimeField As System.Nullable(Of Date)
        
        Private notesField As String
        
        Private applicationStatusField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property ApplicationReference() As String
            Get
                Return Me.applicationReferenceField
            End Get
            Set
                Me.applicationReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Vacancy() As String
            Get
                Return Me.vacancyField
            End Get
            Set
                Me.vacancyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantType() As String
            Get
                Return Me.applicantTypeField
            End Get
            Set
                Me.applicantTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantName() As String
            Get
                Return Me.applicantNameField
            End Get
            Set
                Me.applicantNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationDate() As Date
            Get
                Return Me.applicationDateField
            End Get
            Set
                Me.applicationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InterviewScore() As System.Nullable(Of Decimal)
            Get
                Return Me.interviewScoreField
            End Get
            Set
                Me.interviewScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExperienceScore() As System.Nullable(Of Decimal)
            Get
                Return Me.experienceScoreField
            End Get
            Set
                Me.experienceScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExamScore() As System.Nullable(Of Decimal)
            Get
                Return Me.examScoreField
            End Get
            Set
                Me.examScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property QualificationScore() As System.Nullable(Of Decimal)
            Get
                Return Me.qualificationScoreField
            End Get
            Set
                Me.qualificationScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherScore() As System.Nullable(Of Decimal)
            Get
                Return Me.otherScoreField
            End Get
            Set
                Me.otherScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryField
            End Get
            Set
                Me.currentSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryExpectation() As System.Nullable(Of Decimal)
            Get
                Return Me.salaryExpectationField
            End Get
            Set
                Me.salaryExpectationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkStatus() As String
            Get
                Return Me.workStatusField
            End Get
            Set
                Me.workStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvailabilityComment() As String
            Get
                Return Me.availabilityCommentField
            End Get
            Set
                Me.availabilityCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AvailabilityInWeeks() As System.Nullable(Of Integer)
            Get
                Return Me.availabilityInWeeksField
            End Get
            Set
                Me.availabilityInWeeksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterviewedByEmployee() As String
            Get
                Return Me.interviewedByEmployeeField
            End Get
            Set
                Me.interviewedByEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NextInterviewDateTime() As System.Nullable(Of Date)
            Get
                Return Me.nextInterviewDateTimeField
            End Get
            Set
                Me.nextInterviewDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationStatus() As String
            Get
                Return Me.applicationStatusField
            End Get
            Set
                Me.applicationStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ProjectTransactionHelpObject
        
        Private projectCodeField As String
        
        Private taskSerialNumberField As Integer
        
        Private employeeCodeField As String
        
        Private transactionTypeField As String
        
        Private workDateField As Date
        
        Private documentNoField As String
        
        Private descriptionField As String
        
        Private currencyField As String
        
        Private costValueField As System.Nullable(Of Decimal)
        
        Private currencyRateField As System.Nullable(Of Decimal)
        
        Private costValueBaseField As System.Nullable(Of Decimal)
        
        Private unitOfMeasureCodeField As String
        
        Private workedUnitsField As Decimal
        
        Private workedUnitsBaseField As System.Nullable(Of Decimal)
        
        Private workedUnitsPerUOMField As System.Nullable(Of Decimal)
        
        Private isChargeableField As System.Nullable(Of Boolean)
        
        '''<remarks/>
        Public Property ProjectCode() As String
            Get
                Return Me.projectCodeField
            End Get
            Set
                Me.projectCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskSerialNumber() As Integer
            Get
                Return Me.taskSerialNumberField
            End Get
            Set
                Me.taskSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionType() As String
            Get
                Return Me.transactionTypeField
            End Get
            Set
                Me.transactionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkDate() As Date
            Get
                Return Me.workDateField
            End Get
            Set
                Me.workDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CostValue() As System.Nullable(Of Decimal)
            Get
                Return Me.costValueField
            End Get
            Set
                Me.costValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrencyRate() As System.Nullable(Of Decimal)
            Get
                Return Me.currencyRateField
            End Get
            Set
                Me.currencyRateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CostValueBase() As System.Nullable(Of Decimal)
            Get
                Return Me.costValueBaseField
            End Get
            Set
                Me.costValueBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkedUnits() As Decimal
            Get
                Return Me.workedUnitsField
            End Get
            Set
                Me.workedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkedUnitsBase() As System.Nullable(Of Decimal)
            Get
                Return Me.workedUnitsBaseField
            End Get
            Set
                Me.workedUnitsBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkedUnitsPerUOM() As System.Nullable(Of Decimal)
            Get
                Return Me.workedUnitsPerUOMField
            End Get
            Set
                Me.workedUnitsPerUOMField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IsChargeable() As System.Nullable(Of Boolean)
            Get
                Return Me.isChargeableField
            End Get
            Set
                Me.isChargeableField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class QualificationWSI
        
        Private qualificationIDField As Integer
        
        Private codeField As String
        
        Private viewNameField As String
        
        Private descriptionField As String
        
        Private isPublishedField As Boolean
        
        Private qualificationTypeField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property QualificationID() As Integer
            Get
                Return Me.qualificationIDField
            End Get
            Set
                Me.qualificationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ViewName() As String
            Get
                Return Me.viewNameField
            End Get
            Set
                Me.viewNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsPublished() As Boolean
            Get
                Return Me.isPublishedField
            End Get
            Set
                Me.isPublishedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QualificationType() As String
            Get
                Return Me.qualificationTypeField
            End Get
            Set
                Me.qualificationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeJobDescriptionWSI
        
        Private employeeJobDescriptionIDField As Integer
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private dateFirstIntroducedField As System.Nullable(Of Date)
        
        Private dateFirstIntroducedStringField As String
        
        Private validUntilField As System.Nullable(Of Date)
        
        Private validUntilStringField As String
        
        Private statusField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property EmployeeJobDescriptionID() As Integer
            Get
                Return Me.employeeJobDescriptionIDField
            End Get
            Set
                Me.employeeJobDescriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateFirstIntroduced() As System.Nullable(Of Date)
            Get
                Return Me.dateFirstIntroducedField
            End Get
            Set
                Me.dateFirstIntroducedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateFirstIntroducedString() As String
            Get
                Return Me.dateFirstIntroducedStringField
            End Get
            Set
                Me.dateFirstIntroducedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidUntil() As System.Nullable(Of Date)
            Get
                Return Me.validUntilField
            End Get
            Set
                Me.validUntilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidUntilString() As String
            Get
                Return Me.validUntilStringField
            End Get
            Set
                Me.validUntilStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DepartmentWSI
        
        Private managerEmployeeCodeField As String
        
        Private parentDepartmentIDField As System.Nullable(Of Integer)
        
        Private descriptionField As String
        
        Private idField As Integer
        
        Private codeField As String
        
        Private fullPathField As String
        
        Private countRelatedRecordsField As Long
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private interfaceCodeField As String
        
        Private typeField As String
        
        Private employeeCountField As Integer
        
        '''<remarks/>
        Public Property ManagerEmployeeCode() As String
            Get
                Return Me.managerEmployeeCodeField
            End Get
            Set
                Me.managerEmployeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ParentDepartmentID() As System.Nullable(Of Integer)
            Get
                Return Me.parentDepartmentIDField
            End Get
            Set
                Me.parentDepartmentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullPath() As String
            Get
                Return Me.fullPathField
            End Get
            Set
                Me.fullPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountRelatedRecords() As Long
            Get
                Return Me.countRelatedRecordsField
            End Get
            Set
                Me.countRelatedRecordsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterfaceCode() As String
            Get
                Return Me.interfaceCodeField
            End Get
            Set
                Me.interfaceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCount() As Integer
            Get
                Return Me.employeeCountField
            End Get
            Set
                Me.employeeCountField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PositionWSI
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private orgChartShapeField As String
        
        Private effectiveDateField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private numberRequiredField As System.Nullable(Of Integer)
        
        Private minimumSalaryField As System.Nullable(Of Decimal)
        
        Private maximumSalaryField As System.Nullable(Of Decimal)
        
        Private budgetedFTEField As System.Nullable(Of Decimal)
        
        Private budgetedSalaryCostField As System.Nullable(Of Decimal)
        
        Private actualFTEField As System.Nullable(Of Decimal)
        
        Private actualSalaryCostField As System.Nullable(Of Decimal)
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrgChartShape() As String
            Get
                Return Me.orgChartShapeField
            End Get
            Set
                Me.orgChartShapeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EffectiveDate() As System.Nullable(Of Date)
            Get
                Return Me.effectiveDateField
            End Get
            Set
                Me.effectiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NumberRequired() As System.Nullable(Of Integer)
            Get
                Return Me.numberRequiredField
            End Get
            Set
                Me.numberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinimumSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.minimumSalaryField
            End Get
            Set
                Me.minimumSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MaximumSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.maximumSalaryField
            End Get
            Set
                Me.maximumSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BudgetedFTE() As System.Nullable(Of Decimal)
            Get
                Return Me.budgetedFTEField
            End Get
            Set
                Me.budgetedFTEField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BudgetedSalaryCost() As System.Nullable(Of Decimal)
            Get
                Return Me.budgetedSalaryCostField
            End Get
            Set
                Me.budgetedSalaryCostField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualFTE() As System.Nullable(Of Decimal)
            Get
                Return Me.actualFTEField
            End Get
            Set
                Me.actualFTEField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualSalaryCost() As System.Nullable(Of Decimal)
            Get
                Return Me.actualSalaryCostField
            End Get
            Set
                Me.actualSalaryCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class LocationHelpObject
        
        Private descriptionIDField As String
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private typeField As String
        
        Private responsibleEmployeeCodeField As String
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResponsibleEmployeeCode() As String
            Get
                Return Me.responsibleEmployeeCodeField
            End Get
            Set
                Me.responsibleEmployeeCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DepartmentHelpObject
        
        Private descriptionIDField As String
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private endDateField As System.Nullable(Of Date)
        
        Private locationCodeField As String
        
        Private parentDepartmentCodeField As String
        
        Private managerEmployeeCodeField As String
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EndDate() As System.Nullable(Of Date)
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationCode() As String
            Get
                Return Me.locationCodeField
            End Get
            Set
                Me.locationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentDepartmentCode() As String
            Get
                Return Me.parentDepartmentCodeField
            End Get
            Set
                Me.parentDepartmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ManagerEmployeeCode() As String
            Get
                Return Me.managerEmployeeCodeField
            End Get
            Set
                Me.managerEmployeeCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeHelpObject
        
        Private businessEntityIdField As Integer
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private emailAddressField As String
        
        Private employeeCodeField As String
        
        Private jobTitleField As String
        
        Private genderField As String
        
        Private birthDateField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private employmentDateField As System.Nullable(Of Date)
        
        Private pictureIDField As String
        
        Private departmentCodeField As String
        
        Private employeeManagerCodeField As String
        
        Private employeeGradeCodeField As String
        
        Private employeeJobDescriptionCodeField As String
        
        Private fTEquivalentField As Integer
        
        Private locationCodeField As String
        
        Private initialsField As String
        
        Private contactTypeCodeField As String
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BirthDate() As System.Nullable(Of Date)
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmploymentDate() As System.Nullable(Of Date)
            Get
                Return Me.employmentDateField
            End Get
            Set
                Me.employmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureID() As String
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeManagerCode() As String
            Get
                Return Me.employeeManagerCodeField
            End Get
            Set
                Me.employeeManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeGradeCode() As String
            Get
                Return Me.employeeGradeCodeField
            End Get
            Set
                Me.employeeGradeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescriptionCode() As String
            Get
                Return Me.employeeJobDescriptionCodeField
            End Get
            Set
                Me.employeeJobDescriptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTEquivalent() As Integer
            Get
                Return Me.fTEquivalentField
            End Get
            Set
                Me.fTEquivalentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationCode() As String
            Get
                Return Me.locationCodeField
            End Get
            Set
                Me.locationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactTypeCode() As String
            Get
                Return Me.contactTypeCodeField
            End Get
            Set
                Me.contactTypeCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ListDomainValueWSI
        
        Private listItemIDField As Integer
        
        Private listItemValueField As String
        
        Private listItemValueTranslatedField As String
        
        '''<remarks/>
        Public Property ListItemID() As Integer
            Get
                Return Me.listItemIDField
            End Get
            Set
                Me.listItemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListItemValue() As String
            Get
                Return Me.listItemValueField
            End Get
            Set
                Me.listItemValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListItemValueTranslated() As String
            Get
                Return Me.listItemValueTranslatedField
            End Get
            Set
                Me.listItemValueTranslatedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CodeDescriptionWSI
        
        Private codeDescriptionIDField As Integer
        
        Private codeField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property CodeDescriptionID() As Integer
            Get
                Return Me.codeDescriptionIDField
            End Get
            Set
                Me.codeDescriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CountryBO)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public MustInherit Class DomainObjectOfString
        
        Private serverTimeSettedField As Boolean
        
        Private clientTimeSettedField As Boolean
        
        Private idField As String
        
        Private uIIDField As String
        
        '''<remarks/>
        Public Property ServerTimeSetted() As Boolean
            Get
                Return Me.serverTimeSettedField
            End Get
            Set
                Me.serverTimeSettedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientTimeSetted() As Boolean
            Get
                Return Me.clientTimeSettedField
            End Get
            Set
                Me.clientTimeSettedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UIID() As String
            Get
                Return Me.uIIDField
            End Get
            Set
                Me.uIIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CountryBO
        Inherits DomainObjectOfString
        
        Private countryISOCodeField As String
        
        Private nameField As String
        
        Private nationalityField As String
        
        Private numericISOCodeField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private dST_StartField As System.Nullable(Of Date)
        
        Private dST_EndField As System.Nullable(Of Date)
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property CountryISOCode() As String
            Get
                Return Me.countryISOCodeField
            End Get
            Set
                Me.countryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nationality() As String
            Get
                Return Me.nationalityField
            End Get
            Set
                Me.nationalityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumericISOCode() As String
            Get
                Return Me.numericISOCodeField
            End Get
            Set
                Me.numericISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DST_Start() As System.Nullable(Of Date)
            Get
                Return Me.dST_StartField
            End Get
            Set
                Me.dST_StartField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DST_End() As System.Nullable(Of Date)
            Get
                Return Me.dST_EndField
            End Get
            Set
                Me.dST_EndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantContainer
        
        Private loggedField As Boolean
        
        Private applicantField As ApplicantBO
        
        Private applicantMainAddressField As AddressBO
        
        Private documentsField() As DocumentBO
        
        Private educationsField() As ApplicantEducationBO
        
        Private qualificationField() As ApplicantQualificationBO
        
        Private pastExperienceField() As ApplicantPastExperienceBO
        
        Private referenceField() As ApplicantReferenceBO
        
        Private jobApplicationsField() As JobApplicationBO
        
        Private userFieldsField() As UserFieldValueBO
        
        Private surveysField() As SurveyWSI
        
        Private nIMonitoringField As NIMonitoringBO
        
        Private pictureField As PictureBO
        
        '''<remarks/>
        Public Property Logged() As Boolean
            Get
                Return Me.loggedField
            End Get
            Set
                Me.loggedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Applicant() As ApplicantBO
            Get
                Return Me.applicantField
            End Get
            Set
                Me.applicantField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantMainAddress() As AddressBO
            Get
                Return Me.applicantMainAddressField
            End Get
            Set
                Me.applicantMainAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Documents() As DocumentBO()
            Get
                Return Me.documentsField
            End Get
            Set
                Me.documentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Educations() As ApplicantEducationBO()
            Get
                Return Me.educationsField
            End Get
            Set
                Me.educationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Qualification() As ApplicantQualificationBO()
            Get
                Return Me.qualificationField
            End Get
            Set
                Me.qualificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PastExperience() As ApplicantPastExperienceBO()
            Get
                Return Me.pastExperienceField
            End Get
            Set
                Me.pastExperienceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reference() As ApplicantReferenceBO()
            Get
                Return Me.referenceField
            End Get
            Set
                Me.referenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobApplications() As JobApplicationBO()
            Get
                Return Me.jobApplicationsField
            End Get
            Set
                Me.jobApplicationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFields() As UserFieldValueBO()
            Get
                Return Me.userFieldsField
            End Get
            Set
                Me.userFieldsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Surveys() As SurveyWSI()
            Get
                Return Me.surveysField
            End Get
            Set
                Me.surveysField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NIMonitoring() As NIMonitoringBO
            Get
                Return Me.nIMonitoringField
            End Get
            Set
                Me.nIMonitoringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Picture() As PictureBO
            Get
                Return Me.pictureField
            End Get
            Set
                Me.pictureField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantBO
        Inherits DomainObjectOfInt32
        
        Private applicantIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private firstNameDbField As String
        
        Private middleNameDbField As String
        
        Private lastNameDbField As String
        
        Private applicantCodeField As String
        
        Private initialsField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private genderField As String
        
        Private pictureIDField As String
        
        Private birthDateField As Date
        
        Private statusField As String
        
        Private registrationDateField As Date
        
        Private mainAddressIDField As System.Nullable(Of Integer)
        
        Private maritalStatusField As String
        
        Private religionField As String
        
        Private socialSecurityNoField As String
        
        Private identityCardNoField As String
        
        Private passportNoField As String
        
        Private passportDateofIssueField As System.Nullable(Of Date)
        
        Private passportPlaceofIssueField As String
        
        Private passportIssuedByField As String
        
        Private passportExpiryDateField As System.Nullable(Of Date)
        
        Private incomeTaxNoField As String
        
        Private languageIDField As Integer
        
        Private statisticalCodeIDField As System.Nullable(Of Integer)
        
        Private sourceIDField As System.Nullable(Of Integer)
        
        Private nationalityCountryISOCodeField As String
        
        Private notesField As String
        
        Private educationLevelIDField As System.Nullable(Of Integer)
        
        Private yearsExperienceField As System.Nullable(Of Decimal)
        
        Private occupationIDField As System.Nullable(Of Integer)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private salaryExpectationField As System.Nullable(Of Decimal)
        
        Private currentSalaryField As System.Nullable(Of Decimal)
        
        Private experienceOtherRolesField As String
        
        Private referredByField As String
        
        Private currentJobTitleField As String
        
        Private preferredCityField As String
        
        Private industryIDField As System.Nullable(Of Integer)
        
        Private passwordField As String
        
        Private nationalInsuranceNoField As String
        
        Private ethnicityField As System.Nullable(Of Integer)
        
        Private sexualOrientationField As System.Nullable(Of Integer)
        
        Private disabilityField As System.Nullable(Of Integer)
        
        Private ratingField As System.Nullable(Of Short)
        
        Private dataRetentionMonthsField As System.Nullable(Of Short)
        
        Private recruiterGroupIDField As System.Nullable(Of Integer)
        
        Private emailField As String
        
        Private sourceField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private descriptionLanguageIDField As Integer
        
        Private birthDateStringField As String
        
        Private registrationDateStringField As String
        
        Private addressStringField As String
        
        Private addressLine1Field As String
        
        Private addressLine2Field As String
        
        Private addressLine3Field As String
        
        Private companyNameField As String
        
        Private postCodeField As String
        
        Private pOBoxField As String
        
        Private pOBoxPostCodeField As String
        
        Private cityField As String
        
        Private districtProvinceField As String
        
        Private countryISOCodeField As String
        
        Private countryField As String
        
        Private phoneNoField As String
        
        Private phoneNo2Field As String
        
        Private faxNoField As String
        
        Private mobilePhoneField As String
        
        Private carPhoneField As String

        ' Private eMailField As String

        Private homePageField As String
        
        Private onlineChatIDField As String
        
        Private passportDateofIssueStringField As String
        
        Private passportExpiryDateStringField As String
        
        Private languageNameField As String
        
        Private nationalityCountryISONameField As String
        
        Private employeeNameField As String
        
        Private occupationField As String
        
        Private educationLevelField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedStringField As String
        
        Private industryField As String
        
        Private documentTypeField As String
        
        Private documentPreviewLinkField As String
        
        Private loadIDField As String
        
        '''<remarks/>
        Public Property ApplicantID() As Integer
            Get
                Return Me.applicantIDField
            End Get
            Set
                Me.applicantIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstNameDb() As String
            Get
                Return Me.firstNameDbField
            End Get
            Set
                Me.firstNameDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleNameDb() As String
            Get
                Return Me.middleNameDbField
            End Get
            Set
                Me.middleNameDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastNameDb() As String
            Get
                Return Me.lastNameDbField
            End Get
            Set
                Me.lastNameDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantCode() As String
            Get
                Return Me.applicantCodeField
            End Get
            Set
                Me.applicantCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureID() As String
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDate() As Date
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RegistrationDate() As Date
            Get
                Return Me.registrationDateField
            End Get
            Set
                Me.registrationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MainAddressID() As System.Nullable(Of Integer)
            Get
                Return Me.mainAddressIDField
            End Get
            Set
                Me.mainAddressIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SocialSecurityNo() As String
            Get
                Return Me.socialSecurityNoField
            End Get
            Set
                Me.socialSecurityNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportNo() As String
            Get
                Return Me.passportNoField
            End Get
            Set
                Me.passportNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PassportDateofIssue() As System.Nullable(Of Date)
            Get
                Return Me.passportDateofIssueField
            End Get
            Set
                Me.passportDateofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportPlaceofIssue() As String
            Get
                Return Me.passportPlaceofIssueField
            End Get
            Set
                Me.passportPlaceofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportIssuedBy() As String
            Get
                Return Me.passportIssuedByField
            End Get
            Set
                Me.passportIssuedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PassportExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.passportExpiryDateField
            End Get
            Set
                Me.passportExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IncomeTaxNo() As String
            Get
                Return Me.incomeTaxNoField
            End Get
            Set
                Me.incomeTaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageID() As Integer
            Get
                Return Me.languageIDField
            End Get
            Set
                Me.languageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property StatisticalCodeID() As System.Nullable(Of Integer)
            Get
                Return Me.statisticalCodeIDField
            End Get
            Set
                Me.statisticalCodeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SourceID() As System.Nullable(Of Integer)
            Get
                Return Me.sourceIDField
            End Get
            Set
                Me.sourceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountryISOCode() As String
            Get
                Return Me.nationalityCountryISOCodeField
            End Get
            Set
                Me.nationalityCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EducationLevelID() As System.Nullable(Of Integer)
            Get
                Return Me.educationLevelIDField
            End Get
            Set
                Me.educationLevelIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property YearsExperience() As System.Nullable(Of Decimal)
            Get
                Return Me.yearsExperienceField
            End Get
            Set
                Me.yearsExperienceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OccupationID() As System.Nullable(Of Integer)
            Get
                Return Me.occupationIDField
            End Get
            Set
                Me.occupationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryExpectation() As System.Nullable(Of Decimal)
            Get
                Return Me.salaryExpectationField
            End Get
            Set
                Me.salaryExpectationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryField
            End Get
            Set
                Me.currentSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExperienceOtherRoles() As String
            Get
                Return Me.experienceOtherRolesField
            End Get
            Set
                Me.experienceOtherRolesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferredBy() As String
            Get
                Return Me.referredByField
            End Get
            Set
                Me.referredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentJobTitle() As String
            Get
                Return Me.currentJobTitleField
            End Get
            Set
                Me.currentJobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreferredCity() As String
            Get
                Return Me.preferredCityField
            End Get
            Set
                Me.preferredCityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IndustryID() As System.Nullable(Of Integer)
            Get
                Return Me.industryIDField
            End Get
            Set
                Me.industryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalInsuranceNo() As String
            Get
                Return Me.nationalInsuranceNoField
            End Get
            Set
                Me.nationalInsuranceNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Ethnicity() As System.Nullable(Of Integer)
            Get
                Return Me.ethnicityField
            End Get
            Set
                Me.ethnicityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SexualOrientation() As System.Nullable(Of Integer)
            Get
                Return Me.sexualOrientationField
            End Get
            Set
                Me.sexualOrientationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Disability() As System.Nullable(Of Integer)
            Get
                Return Me.disabilityField
            End Get
            Set
                Me.disabilityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Rating() As System.Nullable(Of Short)
            Get
                Return Me.ratingField
            End Get
            Set
                Me.ratingField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DataRetentionMonths() As System.Nullable(Of Short)
            Get
                Return Me.dataRetentionMonthsField
            End Get
            Set
                Me.dataRetentionMonthsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RecruiterGroupID() As System.Nullable(Of Integer)
            Get
                Return Me.recruiterGroupIDField
            End Get
            Set
                Me.recruiterGroupIDField = value
            End Set
        End Property

        '''<remarks/>
        'Public Overloads Property Email() As String
        '    Get
        '        Return Me.emailField
        '    End Get
        '    Set
        '        Me.emailField = value
        '    End Set
        'End Property

        '''<remarks/>
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDateString() As String
            Get
                Return Me.birthDateStringField
            End Get
            Set
                Me.birthDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RegistrationDateString() As String
            Get
                Return Me.registrationDateStringField
            End Get
            Set
                Me.registrationDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressString() As String
            Get
                Return Me.addressStringField
            End Get
            Set
                Me.addressStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine1() As String
            Get
                Return Me.addressLine1Field
            End Get
            Set
                Me.addressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine2() As String
            Get
                Return Me.addressLine2Field
            End Get
            Set
                Me.addressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine3() As String
            Get
                Return Me.addressLine3Field
            End Get
            Set
                Me.addressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCode() As String
            Get
                Return Me.postCodeField
            End Get
            Set
                Me.postCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBox() As String
            Get
                Return Me.pOBoxField
            End Get
            Set
                Me.pOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxPostCode() As String
            Get
                Return Me.pOBoxPostCodeField
            End Get
            Set
                Me.pOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvince() As String
            Get
                Return Me.districtProvinceField
            End Get
            Set
                Me.districtProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCode() As String
            Get
                Return Me.countryISOCodeField
            End Get
            Set
                Me.countryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo() As String
            Get
                Return Me.phoneNoField
            End Get
            Set
                Me.phoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo2() As String
            Get
                Return Me.phoneNo2Field
            End Get
            Set
                Me.phoneNo2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxNo() As String
            Get
                Return Me.faxNoField
            End Get
            Set
                Me.faxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhone() As String
            Get
                Return Me.carPhoneField
            End Get
            Set
                Me.carPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Overloads Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePage() As String
            Get
                Return Me.homePageField
            End Get
            Set
                Me.homePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatID() As String
            Get
                Return Me.onlineChatIDField
            End Get
            Set
                Me.onlineChatIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportDateofIssueString() As String
            Get
                Return Me.passportDateofIssueStringField
            End Get
            Set
                Me.passportDateofIssueStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportExpiryDateString() As String
            Get
                Return Me.passportExpiryDateStringField
            End Get
            Set
                Me.passportExpiryDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageName() As String
            Get
                Return Me.languageNameField
            End Get
            Set
                Me.languageNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountryISOName() As String
            Get
                Return Me.nationalityCountryISONameField
            End Get
            Set
                Me.nationalityCountryISONameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Occupation() As String
            Get
                Return Me.occupationField
            End Get
            Set
                Me.occupationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EducationLevel() As String
            Get
                Return Me.educationLevelField
            End Get
            Set
                Me.educationLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdatedString() As String
            Get
                Return Me.dateUpdatedStringField
            End Get
            Set
                Me.dateUpdatedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Industry() As String
            Get
                Return Me.industryField
            End Get
            Set
                Me.industryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentPreviewLink() As String
            Get
                Return Me.documentPreviewLinkField
            End Get
            Set
                Me.documentPreviewLinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoadID() As String
            Get
                Return Me.loadIDField
            End Get
            Set
                Me.loadIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EmployeeJobDescriptionBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CodeDescriptionBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PictureBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(NIMonitoringBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(JobApplicationBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ApplicantReferenceBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ApplicantPastExperienceBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ApplicantQualificationBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ApplicantEducationBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DocumentBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ApplicantBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserFieldValueBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EmployeeBasicBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EmployeePastExperienceBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UnitOfMeasureBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PerformanceFactorHelpBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PerformanceGoalHelpBO)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(AddressBO)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public MustInherit Class DomainObjectOfInt32
        
        Private idField As Integer
        
        Private serverTimeSettedField As Boolean
        
        Private clientTimeSettedField As Boolean
        
        Private uIIDField As String
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServerTimeSetted() As Boolean
            Get
                Return Me.serverTimeSettedField
            End Get
            Set
                Me.serverTimeSettedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientTimeSetted() As Boolean
            Get
                Return Me.clientTimeSettedField
            End Get
            Set
                Me.clientTimeSettedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UIID() As String
            Get
                Return Me.uIIDField
            End Get
            Set
                Me.uIIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeJobDescriptionBO
        Inherits DomainObjectOfInt32
        
        Private employeeJobDescriptionIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private codeField As String
        
        Private descriptionIDField As String
        
        Private descriptionDbField As String
        
        Private dateFirstIntroducedField As System.Nullable(Of Date)
        
        Private validUntilField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private jobFamilyIDField As System.Nullable(Of Integer)
        
        Private descriptionLanguageIDField As Integer
        
        Private descriptionField As String
        
        Private dateFirstIntroducedStringField As String
        
        Private validUntilStringField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property EmployeeJobDescriptionID() As Integer
            Get
                Return Me.employeeJobDescriptionIDField
            End Get
            Set
                Me.employeeJobDescriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionDb() As String
            Get
                Return Me.descriptionDbField
            End Get
            Set
                Me.descriptionDbField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateFirstIntroduced() As System.Nullable(Of Date)
            Get
                Return Me.dateFirstIntroducedField
            End Get
            Set
                Me.dateFirstIntroducedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidUntil() As System.Nullable(Of Date)
            Get
                Return Me.validUntilField
            End Get
            Set
                Me.validUntilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property JobFamilyID() As System.Nullable(Of Integer)
            Get
                Return Me.jobFamilyIDField
            End Get
            Set
                Me.jobFamilyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateFirstIntroducedString() As String
            Get
                Return Me.dateFirstIntroducedStringField
            End Get
            Set
                Me.dateFirstIntroducedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidUntilString() As String
            Get
                Return Me.validUntilStringField
            End Get
            Set
                Me.validUntilStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CodeDescriptionBO
        Inherits DomainObjectOfInt32
        
        Private codeDescriptionIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private entityCodeField As String
        
        Private codeField As String
        
        Private descriptionIDField As String
        
        Private descriptionDbField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private expiryDateField As System.Nullable(Of Date)
        
        Private descriptionLanguageIDField As Integer
        
        Private descriptionField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property CodeDescriptionID() As Integer
            Get
                Return Me.codeDescriptionIDField
            End Get
            Set
                Me.codeDescriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityCode() As String
            Get
                Return Me.entityCodeField
            End Get
            Set
                Me.entityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionDb() As String
            Get
                Return Me.descriptionDbField
            End Get
            Set
                Me.descriptionDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.expiryDateField
            End Get
            Set
                Me.expiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PictureBO
        Inherits DomainObjectOfInt32
        
        Private pictureIDField As Integer
        
        Private pictureOwnerIDField As String
        
        Private pictureTypeField As String
        
        Private pictureField() As Byte
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private uRLField As String
        
        Private businessEntityIdField As System.Nullable(Of Integer)
        
        Private entityField As String
        
        Private entityCodeField As System.Nullable(Of Integer)
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property PictureID() As Integer
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureOwnerID() As String
            Get
                Return Me.pictureOwnerIDField
            End Get
            Set
                Me.pictureOwnerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureType() As String
            Get
                Return Me.pictureTypeField
            End Get
            Set
                Me.pictureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Picture() As Byte()
            Get
                Return Me.pictureField
            End Get
            Set
                Me.pictureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property URL() As String
            Get
                Return Me.uRLField
            End Get
            Set
                Me.uRLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BusinessEntityId() As System.Nullable(Of Integer)
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entity() As String
            Get
                Return Me.entityField
            End Get
            Set
                Me.entityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EntityCode() As System.Nullable(Of Integer)
            Get
                Return Me.entityCodeField
            End Get
            Set
                Me.entityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class NIMonitoringBO
        Inherits DomainObjectOfInt32
        
        Private nIMonitoringIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicantIDField As System.Nullable(Of Integer)
        
        Private employeeIDField As System.Nullable(Of Integer)
        
        Private communityBackgroundField As String
        
        Private racialGroupField As String
        
        Private disabledPersonField As System.Nullable(Of Boolean)
        
        Private physicalImpairmentField As System.Nullable(Of Boolean)
        
        Private sensoryImpairmentField As System.Nullable(Of Boolean)
        
        Private mentalHealthConditionField As System.Nullable(Of Boolean)
        
        Private learningDisabilityField As System.Nullable(Of Boolean)
        
        Private longStandingIllnessField As System.Nullable(Of Boolean)
        
        Private otherDisabilityField As String
        
        Private sexualOrientationField As String
        
        Private marriedField As System.Nullable(Of Boolean)
        
        Private dependantsField As System.Nullable(Of Boolean)
        
        Private dependantsChildField As System.Nullable(Of Boolean)
        
        Private dependantsDisabledField As System.Nullable(Of Boolean)
        
        Private dependantsElderlyField As System.Nullable(Of Boolean)
        
        Private dependantsOtherField As String
        
        Private entityTypeField As String
        
        Private racialGroupOtherField As String
        
        Private markedField As System.Nullable(Of Boolean)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private applicantTypeField As String
        
        Private entityField As String
        
        Private statusField As String
        
        Private nameField As String
        
        Private genderField As String
        
        Private nationalityField As String
        
        Private maritalStatusField As String
        
        Private birthDateField As System.Nullable(Of Date)
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property NIMonitoringID() As Integer
            Get
                Return Me.nIMonitoringIDField
            End Get
            Set
                Me.nIMonitoringIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ApplicantID() As System.Nullable(Of Integer)
            Get
                Return Me.applicantIDField
            End Get
            Set
                Me.applicantIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmployeeID() As System.Nullable(Of Integer)
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CommunityBackground() As String
            Get
                Return Me.communityBackgroundField
            End Get
            Set
                Me.communityBackgroundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RacialGroup() As String
            Get
                Return Me.racialGroupField
            End Get
            Set
                Me.racialGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DisabledPerson() As System.Nullable(Of Boolean)
            Get
                Return Me.disabledPersonField
            End Get
            Set
                Me.disabledPersonField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PhysicalImpairment() As System.Nullable(Of Boolean)
            Get
                Return Me.physicalImpairmentField
            End Get
            Set
                Me.physicalImpairmentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SensoryImpairment() As System.Nullable(Of Boolean)
            Get
                Return Me.sensoryImpairmentField
            End Get
            Set
                Me.sensoryImpairmentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MentalHealthCondition() As System.Nullable(Of Boolean)
            Get
                Return Me.mentalHealthConditionField
            End Get
            Set
                Me.mentalHealthConditionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LearningDisability() As System.Nullable(Of Boolean)
            Get
                Return Me.learningDisabilityField
            End Get
            Set
                Me.learningDisabilityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LongStandingIllness() As System.Nullable(Of Boolean)
            Get
                Return Me.longStandingIllnessField
            End Get
            Set
                Me.longStandingIllnessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OtherDisability() As String
            Get
                Return Me.otherDisabilityField
            End Get
            Set
                Me.otherDisabilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SexualOrientation() As String
            Get
                Return Me.sexualOrientationField
            End Get
            Set
                Me.sexualOrientationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Married() As System.Nullable(Of Boolean)
            Get
                Return Me.marriedField
            End Get
            Set
                Me.marriedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Dependants() As System.Nullable(Of Boolean)
            Get
                Return Me.dependantsField
            End Get
            Set
                Me.dependantsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DependantsChild() As System.Nullable(Of Boolean)
            Get
                Return Me.dependantsChildField
            End Get
            Set
                Me.dependantsChildField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DependantsDisabled() As System.Nullable(Of Boolean)
            Get
                Return Me.dependantsDisabledField
            End Get
            Set
                Me.dependantsDisabledField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DependantsElderly() As System.Nullable(Of Boolean)
            Get
                Return Me.dependantsElderlyField
            End Get
            Set
                Me.dependantsElderlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DependantsOther() As String
            Get
                Return Me.dependantsOtherField
            End Get
            Set
                Me.dependantsOtherField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityType() As String
            Get
                Return Me.entityTypeField
            End Get
            Set
                Me.entityTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RacialGroupOther() As String
            Get
                Return Me.racialGroupOtherField
            End Get
            Set
                Me.racialGroupOtherField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Marked() As System.Nullable(Of Boolean)
            Get
                Return Me.markedField
            End Get
            Set
                Me.markedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantType() As String
            Get
                Return Me.applicantTypeField
            End Get
            Set
                Me.applicantTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entity() As String
            Get
                Return Me.entityField
            End Get
            Set
                Me.entityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nationality() As String
            Get
                Return Me.nationalityField
            End Get
            Set
                Me.nationalityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BirthDate() As System.Nullable(Of Date)
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class JobApplicationBO
        Inherits DomainObjectOfInt32
        
        Private jobApplicationIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicationReferenceField As String
        
        Private vacancyIDField As System.Nullable(Of Integer)
        
        Private applicantTypeField As String
        
        Private applicantCodeField As Integer
        
        Private applicantGUIDField As String
        
        Private descriptionIDField As String
        
        Private applicationDateField As Date
        
        Private interviewScoreField As System.Nullable(Of Decimal)
        
        Private experienceScoreField As System.Nullable(Of Decimal)
        
        Private examScoreField As System.Nullable(Of Decimal)
        
        Private qualificationScoreField As System.Nullable(Of Decimal)
        
        Private otherScoreField As System.Nullable(Of Decimal)
        
        Private salaryExpectationField As System.Nullable(Of Decimal)
        
        Private currentSalaryField As System.Nullable(Of Decimal)
        
        Private workStatusField As String
        
        Private availabilityCommentField As String
        
        Private availabilityInWeeksField As System.Nullable(Of Integer)
        
        Private interviewedByEmployeeIDField As System.Nullable(Of Integer)
        
        Private nextInterviewDateTimeField As System.Nullable(Of Date)
        
        Private notesField As String
        
        Private applicationStatusField As String
        
        Private appraisalTemplateIDField As System.Nullable(Of Integer)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private psychometricScoreField As System.Nullable(Of Decimal)
        
        Private messageField As String
        
        Private idField As Integer
        
        Private nameField As String
        
        Private startDateField As Date
        
        Private endDateField As Date
        
        Private resourceIdField As Integer
        
        Private vacancyField As String
        
        Private applicantStatusField As String
        
        Private applicantCodeStringField As String
        
        Private descriptionLanguageIDField As Integer
        
        Private applicantNameField As String
        
        Private applicantEmailField As String
        
        Private applicantLanguageIDField As Integer
        
        Private applicationDateStringField As String
        
        Private applicantPictureIDField As String
        
        Private interviewScoreStringField As String
        
        Private psychometricScoreStringField As String
        
        Private experienceScoreStringField As String
        
        Private examScoreStringField As String
        
        Private qualificationScoreStringField As String
        
        Private otherScoreStringField As String
        
        Private salaryExpectationStringField As String
        
        Private currentSalaryStringField As String
        
        Private interviewedByField As String
        
        Private interviewedByEmployeeField As String
        
        Private nextInterviewField As System.Nullable(Of Date)
        
        Private nextInterviewDateTimeEndField As System.Nullable(Of Date)
        
        Private nextInterviewDateTimeStringField As String
        
        Private statusField As String
        
        Private stageStringField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedStringField As String
        
        Private employeCodeField As String
        
        Private employeeNameField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private messageForThePersonWhenAssignedToField As String
        
        Private suffixField As String
        
        Private titleField As String
        
        Private identityCardNoField As String
        
        Private documentTypeField As String
        
        Private documentPreviewLinkField As String
        
        '''<remarks/>
        Public Property JobApplicationID() As Integer
            Get
                Return Me.jobApplicationIDField
            End Get
            Set
                Me.jobApplicationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationReference() As String
            Get
                Return Me.applicationReferenceField
            End Get
            Set
                Me.applicationReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VacancyID() As System.Nullable(Of Integer)
            Get
                Return Me.vacancyIDField
            End Get
            Set
                Me.vacancyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantType() As String
            Get
                Return Me.applicantTypeField
            End Get
            Set
                Me.applicantTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantCode() As Integer
            Get
                Return Me.applicantCodeField
            End Get
            Set
                Me.applicantCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantGUID() As String
            Get
                Return Me.applicantGUIDField
            End Get
            Set
                Me.applicantGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationDate() As Date
            Get
                Return Me.applicationDateField
            End Get
            Set
                Me.applicationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InterviewScore() As System.Nullable(Of Decimal)
            Get
                Return Me.interviewScoreField
            End Get
            Set
                Me.interviewScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExperienceScore() As System.Nullable(Of Decimal)
            Get
                Return Me.experienceScoreField
            End Get
            Set
                Me.experienceScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExamScore() As System.Nullable(Of Decimal)
            Get
                Return Me.examScoreField
            End Get
            Set
                Me.examScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property QualificationScore() As System.Nullable(Of Decimal)
            Get
                Return Me.qualificationScoreField
            End Get
            Set
                Me.qualificationScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherScore() As System.Nullable(Of Decimal)
            Get
                Return Me.otherScoreField
            End Get
            Set
                Me.otherScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryExpectation() As System.Nullable(Of Decimal)
            Get
                Return Me.salaryExpectationField
            End Get
            Set
                Me.salaryExpectationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryField
            End Get
            Set
                Me.currentSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkStatus() As String
            Get
                Return Me.workStatusField
            End Get
            Set
                Me.workStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvailabilityComment() As String
            Get
                Return Me.availabilityCommentField
            End Get
            Set
                Me.availabilityCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AvailabilityInWeeks() As System.Nullable(Of Integer)
            Get
                Return Me.availabilityInWeeksField
            End Get
            Set
                Me.availabilityInWeeksField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InterviewedByEmployeeID() As System.Nullable(Of Integer)
            Get
                Return Me.interviewedByEmployeeIDField
            End Get
            Set
                Me.interviewedByEmployeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NextInterviewDateTime() As System.Nullable(Of Date)
            Get
                Return Me.nextInterviewDateTimeField
            End Get
            Set
                Me.nextInterviewDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationStatus() As String
            Get
                Return Me.applicationStatusField
            End Get
            Set
                Me.applicationStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AppraisalTemplateID() As System.Nullable(Of Integer)
            Get
                Return Me.appraisalTemplateIDField
            End Get
            Set
                Me.appraisalTemplateIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PsychometricScore() As System.Nullable(Of Decimal)
            Get
                Return Me.psychometricScoreField
            End Get
            Set
                Me.psychometricScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResourceId() As Integer
            Get
                Return Me.resourceIdField
            End Get
            Set
                Me.resourceIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Vacancy() As String
            Get
                Return Me.vacancyField
            End Get
            Set
                Me.vacancyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantStatus() As String
            Get
                Return Me.applicantStatusField
            End Get
            Set
                Me.applicantStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantCodeString() As String
            Get
                Return Me.applicantCodeStringField
            End Get
            Set
                Me.applicantCodeStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantName() As String
            Get
                Return Me.applicantNameField
            End Get
            Set
                Me.applicantNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantEmail() As String
            Get
                Return Me.applicantEmailField
            End Get
            Set
                Me.applicantEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantLanguageID() As Integer
            Get
                Return Me.applicantLanguageIDField
            End Get
            Set
                Me.applicantLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationDateString() As String
            Get
                Return Me.applicationDateStringField
            End Get
            Set
                Me.applicationDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantPictureID() As String
            Get
                Return Me.applicantPictureIDField
            End Get
            Set
                Me.applicantPictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterviewScoreString() As String
            Get
                Return Me.interviewScoreStringField
            End Get
            Set
                Me.interviewScoreStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PsychometricScoreString() As String
            Get
                Return Me.psychometricScoreStringField
            End Get
            Set
                Me.psychometricScoreStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExperienceScoreString() As String
            Get
                Return Me.experienceScoreStringField
            End Get
            Set
                Me.experienceScoreStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExamScoreString() As String
            Get
                Return Me.examScoreStringField
            End Get
            Set
                Me.examScoreStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QualificationScoreString() As String
            Get
                Return Me.qualificationScoreStringField
            End Get
            Set
                Me.qualificationScoreStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OtherScoreString() As String
            Get
                Return Me.otherScoreStringField
            End Get
            Set
                Me.otherScoreStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryExpectationString() As String
            Get
                Return Me.salaryExpectationStringField
            End Get
            Set
                Me.salaryExpectationStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentSalaryString() As String
            Get
                Return Me.currentSalaryStringField
            End Get
            Set
                Me.currentSalaryStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterviewedBy() As String
            Get
                Return Me.interviewedByField
            End Get
            Set
                Me.interviewedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterviewedByEmployee() As String
            Get
                Return Me.interviewedByEmployeeField
            End Get
            Set
                Me.interviewedByEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NextInterview() As System.Nullable(Of Date)
            Get
                Return Me.nextInterviewField
            End Get
            Set
                Me.nextInterviewField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NextInterviewDateTimeEnd() As System.Nullable(Of Date)
            Get
                Return Me.nextInterviewDateTimeEndField
            End Get
            Set
                Me.nextInterviewDateTimeEndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NextInterviewDateTimeString() As String
            Get
                Return Me.nextInterviewDateTimeStringField
            End Get
            Set
                Me.nextInterviewDateTimeStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StageString() As String
            Get
                Return Me.stageStringField
            End Get
            Set
                Me.stageStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdatedString() As String
            Get
                Return Me.dateUpdatedStringField
            End Get
            Set
                Me.dateUpdatedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeCode() As String
            Get
                Return Me.employeCodeField
            End Get
            Set
                Me.employeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MessageForThePersonWhenAssignedTo() As String
            Get
                Return Me.messageForThePersonWhenAssignedToField
            End Get
            Set
                Me.messageForThePersonWhenAssignedToField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Suffix() As String
            Get
                Return Me.suffixField
            End Get
            Set
                Me.suffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentPreviewLink() As String
            Get
                Return Me.documentPreviewLinkField
            End Get
            Set
                Me.documentPreviewLinkField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantReferenceBO
        Inherits DomainObjectOfInt32
        
        Private applicantReferenceIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicantIDField As Integer
        
        Private applicantGUIDField As String
        
        Private descriptionIDField As String
        
        Private nameField As String
        
        Private companyField As String
        
        Private positionField As String
        
        Private telephoneField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private addressField As String
        
        Private emailField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property ApplicantReferenceID() As Integer
            Get
                Return Me.applicantReferenceIDField
            End Get
            Set
                Me.applicantReferenceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantID() As Integer
            Get
                Return Me.applicantIDField
            End Get
            Set
                Me.applicantIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantGUID() As String
            Get
                Return Me.applicantGUIDField
            End Get
            Set
                Me.applicantGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telephone() As String
            Get
                Return Me.telephoneField
            End Get
            Set
                Me.telephoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantPastExperienceBO
        Inherits DomainObjectOfInt32
        
        Private applicantPastExperienceIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicantIDField As Integer
        
        Private applicantGUIDField As String
        
        Private companyField As String
        
        Private positionField As String
        
        Private dutiesField As String
        
        Private fromDataField As System.Nullable(Of Date)
        
        Private toDateField As System.Nullable(Of Date)
        
        Private lastSalaryField As Decimal
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private addressField As String
        
        Private industrySectorIDField As System.Nullable(Of Integer)
        
        Private reasonForLeavingField As String
        
        Private fromDataStringField As String
        
        Private toDateStringField As String
        
        Private lastSalaryStringField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property ApplicantPastExperienceID() As Integer
            Get
                Return Me.applicantPastExperienceIDField
            End Get
            Set
                Me.applicantPastExperienceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantID() As Integer
            Get
                Return Me.applicantIDField
            End Get
            Set
                Me.applicantIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantGUID() As String
            Get
                Return Me.applicantGUIDField
            End Get
            Set
                Me.applicantGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duties() As String
            Get
                Return Me.dutiesField
            End Get
            Set
                Me.dutiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromData() As System.Nullable(Of Date)
            Get
                Return Me.fromDataField
            End Get
            Set
                Me.fromDataField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastSalary() As Decimal
            Get
                Return Me.lastSalaryField
            End Get
            Set
                Me.lastSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IndustrySectorID() As System.Nullable(Of Integer)
            Get
                Return Me.industrySectorIDField
            End Get
            Set
                Me.industrySectorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReasonForLeaving() As String
            Get
                Return Me.reasonForLeavingField
            End Get
            Set
                Me.reasonForLeavingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDataString() As String
            Get
                Return Me.fromDataStringField
            End Get
            Set
                Me.fromDataStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastSalaryString() As String
            Get
                Return Me.lastSalaryStringField
            End Get
            Set
                Me.lastSalaryStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantQualificationBO
        Inherits DomainObjectOfInt32
        
        Private applicantQualificationIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicantIDField As System.Nullable(Of Integer)
        
        Private applicantGUIDField As String
        
        Private qualificationIDField As Integer
        
        Private descriptionIDField As String
        
        Private descriptionDbField As String
        
        Private qualificationTypeField As String
        
        Private awardedByField As String
        
        Private markField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private expiryDateField As System.Nullable(Of Date)
        
        Private dateAwardedField As System.Nullable(Of Date)
        
        Private qualificationCodeField As String
        
        Private descriptionLanguageIDField As Integer
        
        Private descriptionField As String
        
        Private typeField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property ApplicantQualificationID() As Integer
            Get
                Return Me.applicantQualificationIDField
            End Get
            Set
                Me.applicantQualificationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ApplicantID() As System.Nullable(Of Integer)
            Get
                Return Me.applicantIDField
            End Get
            Set
                Me.applicantIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantGUID() As String
            Get
                Return Me.applicantGUIDField
            End Get
            Set
                Me.applicantGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QualificationID() As Integer
            Get
                Return Me.qualificationIDField
            End Get
            Set
                Me.qualificationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionDb() As String
            Get
                Return Me.descriptionDbField
            End Get
            Set
                Me.descriptionDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QualificationType() As String
            Get
                Return Me.qualificationTypeField
            End Get
            Set
                Me.qualificationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AwardedBy() As String
            Get
                Return Me.awardedByField
            End Get
            Set
                Me.awardedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mark() As String
            Get
                Return Me.markField
            End Get
            Set
                Me.markField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.expiryDateField
            End Get
            Set
                Me.expiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateAwarded() As System.Nullable(Of Date)
            Get
                Return Me.dateAwardedField
            End Get
            Set
                Me.dateAwardedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QualificationCode() As String
            Get
                Return Me.qualificationCodeField
            End Get
            Set
                Me.qualificationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantEducationBO
        Inherits DomainObjectOfInt32
        
        Private applicantEducationIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicantIDField As Integer
        
        Private applicantGUIDField As String
        
        Private descriptionIDField As String
        
        Private institutionNameDbField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private toDateField As System.Nullable(Of Date)
        
        Private subjectField As String
        
        Private awardedQualificationField As String
        
        Private markGradeField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private descriptionLanguageIDField As Integer
        
        Private institutionNameField As String
        
        Private fromDateStringField As String
        
        Private toDateStringField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private descriptionField As String
        
        Private descriptionDbField As String
        
        '''<remarks/>
        Public Property ApplicantEducationID() As Integer
            Get
                Return Me.applicantEducationIDField
            End Get
            Set
                Me.applicantEducationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantID() As Integer
            Get
                Return Me.applicantIDField
            End Get
            Set
                Me.applicantIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantGUID() As String
            Get
                Return Me.applicantGUIDField
            End Get
            Set
                Me.applicantGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionNameDb() As String
            Get
                Return Me.institutionNameDbField
            End Get
            Set
                Me.institutionNameDbField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Subject() As String
            Get
                Return Me.subjectField
            End Get
            Set
                Me.subjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AwardedQualification() As String
            Get
                Return Me.awardedQualificationField
            End Get
            Set
                Me.awardedQualificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MarkGrade() As String
            Get
                Return Me.markGradeField
            End Get
            Set
                Me.markGradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionName() As String
            Get
                Return Me.institutionNameField
            End Get
            Set
                Me.institutionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateString() As String
            Get
                Return Me.fromDateStringField
            End Get
            Set
                Me.fromDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionDb() As String
            Get
                Return Me.descriptionDbField
            End Get
            Set
                Me.descriptionDbField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DocumentBO
        Inherits DomainObjectOfInt32
        
        Private documentIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private documentOwnerIDField As String
        
        Private ownerSourceField As String
        
        Private descriptionIDField As String
        
        Private descriptionDbField As String
        
        Private documentTypeField As String
        
        Private externalStorageIDField As String
        
        Private documentFolderIDField As System.Nullable(Of Integer)
        
        Private storageTypeDbField As Integer
        
        Private parentDocumentIDField As System.Nullable(Of Integer)
        
        Private versionField As System.Nullable(Of Integer)
        
        Private versionsCountField As System.Nullable(Of Integer)
        
        Private linkedWithField As String
        
        Private checkedOutByLoginIDField As System.Nullable(Of Integer)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private readReceiptField As Boolean
        
        Private requestAgreementField As Boolean
        
        Private isReadOnlyField As Boolean
        
        Private isClassifiedField As Boolean
        
        Private folderField As String
        
        Private languageIDField As Integer
        
        Private descriptionField As String
        
        Private documentFolderField As String
        
        Private storageTypeField As DocumentStorageType
        
        Private documentPreviewLinkField As String
        
        Private documentExtensionField As String
        
        Private checkedOutField As Boolean
        
        Private checkedOutByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private ownerCodeField As String
        
        Private ownerFullNameField As String
        
        '''<remarks/>
        Public Property DocumentID() As Integer
            Get
                Return Me.documentIDField
            End Get
            Set
                Me.documentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentOwnerID() As String
            Get
                Return Me.documentOwnerIDField
            End Get
            Set
                Me.documentOwnerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OwnerSource() As String
            Get
                Return Me.ownerSourceField
            End Get
            Set
                Me.ownerSourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionDb() As String
            Get
                Return Me.descriptionDbField
            End Get
            Set
                Me.descriptionDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExternalStorageID() As String
            Get
                Return Me.externalStorageIDField
            End Get
            Set
                Me.externalStorageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DocumentFolderID() As System.Nullable(Of Integer)
            Get
                Return Me.documentFolderIDField
            End Get
            Set
                Me.documentFolderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StorageTypeDb() As Integer
            Get
                Return Me.storageTypeDbField
            End Get
            Set
                Me.storageTypeDbField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ParentDocumentID() As System.Nullable(Of Integer)
            Get
                Return Me.parentDocumentIDField
            End Get
            Set
                Me.parentDocumentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Version() As System.Nullable(Of Integer)
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VersionsCount() As System.Nullable(Of Integer)
            Get
                Return Me.versionsCountField
            End Get
            Set
                Me.versionsCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LinkedWith() As String
            Get
                Return Me.linkedWithField
            End Get
            Set
                Me.linkedWithField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CheckedOutByLoginID() As System.Nullable(Of Integer)
            Get
                Return Me.checkedOutByLoginIDField
            End Get
            Set
                Me.checkedOutByLoginIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReadReceipt() As Boolean
            Get
                Return Me.readReceiptField
            End Get
            Set
                Me.readReceiptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestAgreement() As Boolean
            Get
                Return Me.requestAgreementField
            End Get
            Set
                Me.requestAgreementField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsReadOnly() As Boolean
            Get
                Return Me.isReadOnlyField
            End Get
            Set
                Me.isReadOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsClassified() As Boolean
            Get
                Return Me.isClassifiedField
            End Get
            Set
                Me.isClassifiedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Folder() As String
            Get
                Return Me.folderField
            End Get
            Set
                Me.folderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageID() As Integer
            Get
                Return Me.languageIDField
            End Get
            Set
                Me.languageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentFolder() As String
            Get
                Return Me.documentFolderField
            End Get
            Set
                Me.documentFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StorageType() As DocumentStorageType
            Get
                Return Me.storageTypeField
            End Get
            Set
                Me.storageTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentPreviewLink() As String
            Get
                Return Me.documentPreviewLinkField
            End Get
            Set
                Me.documentPreviewLinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentExtension() As String
            Get
                Return Me.documentExtensionField
            End Get
            Set
                Me.documentExtensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CheckedOut() As Boolean
            Get
                Return Me.checkedOutField
            End Get
            Set
                Me.checkedOutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CheckedOutBy() As String
            Get
                Return Me.checkedOutByField
            End Get
            Set
                Me.checkedOutByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OwnerCode() As String
            Get
                Return Me.ownerCodeField
            End Get
            Set
                Me.ownerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OwnerFullName() As String
            Get
                Return Me.ownerFullNameField
            End Get
            Set
                Me.ownerFullNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Public Enum DocumentStorageType
        
        '''<remarks/>
        Internal
        
        '''<remarks/>
        Exelsys
        
        '''<remarks/>
        [True]
        
        '''<remarks/>
        Google
        
        '''<remarks/>
        Dropbox
        
        '''<remarks/>
        SharePoint
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UserFieldValueBO
        Inherits DomainObjectOfInt32
        
        Private userFieldValueIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private entityField As String
        
        Private entityCodeField As Integer
        
        Private entityGUIDField As String
        
        Private userFieldDefinitionIDField As Integer
        
        Private typeField As String
        
        Private textField As String
        
        Private numericField As System.Nullable(Of Integer)
        
        Private decimalField As System.Nullable(Of Decimal)
        
        Private dateField As System.Nullable(Of Date)
        
        Private booleanField As System.Nullable(Of Boolean)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private fieldNameField As String
        
        Private valueField As Object
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property UserFieldValueID() As Integer
            Get
                Return Me.userFieldValueIDField
            End Get
            Set
                Me.userFieldValueIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entity() As String
            Get
                Return Me.entityField
            End Get
            Set
                Me.entityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityCode() As Integer
            Get
                Return Me.entityCodeField
            End Get
            Set
                Me.entityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityGUID() As String
            Get
                Return Me.entityGUIDField
            End Get
            Set
                Me.entityGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFieldDefinitionID() As Integer
            Get
                Return Me.userFieldDefinitionIDField
            End Get
            Set
                Me.userFieldDefinitionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Numeric() As System.Nullable(Of Integer)
            Get
                Return Me.numericField
            End Get
            Set
                Me.numericField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property [Decimal]() As System.Nullable(Of Decimal)
            Get
                Return Me.decimalField
            End Get
            Set
                Me.decimalField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property [Date]() As System.Nullable(Of Date)
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property [Boolean]() As System.Nullable(Of Boolean)
            Get
                Return Me.booleanField
            End Get
            Set
                Me.booleanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeBasicBO
        Inherits DomainObjectOfInt32
        
        Private employeeCodeField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private departmentCodeField As String
        
        Private departmentField As String
        
        Private jobTitleField As String
        
        Private workEMailField As String
        
        Private workIMField As String
        
        Private workTelephoneExtensionField As String
        
        Private statusField As String
        
        Private employeeManagerField As String
        
        Private employeeManagerCodeField As String
        
        Private matrixReportToManagerCodeField As String
        
        Private userFieldsField() As UserFieldValueWSI
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkEMail() As String
            Get
                Return Me.workEMailField
            End Get
            Set
                Me.workEMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkIM() As String
            Get
                Return Me.workIMField
            End Get
            Set
                Me.workIMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkTelephoneExtension() As String
            Get
                Return Me.workTelephoneExtensionField
            End Get
            Set
                Me.workTelephoneExtensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeManager() As String
            Get
                Return Me.employeeManagerField
            End Get
            Set
                Me.employeeManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeManagerCode() As String
            Get
                Return Me.employeeManagerCodeField
            End Get
            Set
                Me.employeeManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MatrixReportToManagerCode() As String
            Get
                Return Me.matrixReportToManagerCodeField
            End Get
            Set
                Me.matrixReportToManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFields() As UserFieldValueWSI()
            Get
                Return Me.userFieldsField
            End Get
            Set
                Me.userFieldsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UserFieldValueWSI
        
        Private nameField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeePastExperienceBO
        Inherits DomainObjectOfInt32
        
        Private employeePastExperienceIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private employeeIDField As Integer
        
        Private employeeGUIDField As String
        
        Private companyField As String
        
        Private positionField As String
        
        Private dutiesField As String
        
        Private fromDataField As System.Nullable(Of Date)
        
        Private toDateField As System.Nullable(Of Date)
        
        Private lastSalaryField As Decimal
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private addressField As String
        
        Private industrySectorIDField As System.Nullable(Of Integer)
        
        Private reasonForLeavingField As String
        
        Private fromDataStringField As String
        
        Private toDateStringField As String
        
        Private lastSalaryStringField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property EmployeePastExperienceID() As Integer
            Get
                Return Me.employeePastExperienceIDField
            End Get
            Set
                Me.employeePastExperienceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeGUID() As String
            Get
                Return Me.employeeGUIDField
            End Get
            Set
                Me.employeeGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duties() As String
            Get
                Return Me.dutiesField
            End Get
            Set
                Me.dutiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromData() As System.Nullable(Of Date)
            Get
                Return Me.fromDataField
            End Get
            Set
                Me.fromDataField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastSalary() As Decimal
            Get
                Return Me.lastSalaryField
            End Get
            Set
                Me.lastSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IndustrySectorID() As System.Nullable(Of Integer)
            Get
                Return Me.industrySectorIDField
            End Get
            Set
                Me.industrySectorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReasonForLeaving() As String
            Get
                Return Me.reasonForLeavingField
            End Get
            Set
                Me.reasonForLeavingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDataString() As String
            Get
                Return Me.fromDataStringField
            End Get
            Set
                Me.fromDataStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastSalaryString() As String
            Get
                Return Me.lastSalaryStringField
            End Get
            Set
                Me.lastSalaryStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UnitOfMeasureBO
        Inherits DomainObjectOfInt32
        
        Private unitOfMeasureIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private applicationCodeField As String
        
        Private codeField As String
        
        Private descriptionIDField As String
        
        Private descriptionDbField As String
        
        Private unitQuantityField As Decimal
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private restrictToIntegerField As Boolean
        
        Private defaultQuantityField As System.Nullable(Of Decimal)
        
        Private descriptionLanguageIDField As Integer
        
        Private descriptionField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property UnitOfMeasureID() As Integer
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationCode() As String
            Get
                Return Me.applicationCodeField
            End Get
            Set
                Me.applicationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionDb() As String
            Get
                Return Me.descriptionDbField
            End Get
            Set
                Me.descriptionDbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitQuantity() As Decimal
            Get
                Return Me.unitQuantityField
            End Get
            Set
                Me.unitQuantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RestrictToInteger() As Boolean
            Get
                Return Me.restrictToIntegerField
            End Get
            Set
                Me.restrictToIntegerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DefaultQuantity() As System.Nullable(Of Decimal)
            Get
                Return Me.defaultQuantityField
            End Get
            Set
                Me.defaultQuantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionLanguageID() As Integer
            Get
                Return Me.descriptionLanguageIDField
            End Get
            Set
                Me.descriptionLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PerformanceFactorHelpBO
        Inherits DomainObjectOfInt32
        
        Private performanceFactorIDField As Integer
        
        Private categoryIDField As Integer
        
        Private factorField As String
        
        Private descriptionField As String
        
        Private unitOfMeasureIDField As System.Nullable(Of Integer)
        
        '''<remarks/>
        Public Property PerformanceFactorID() As Integer
            Get
                Return Me.performanceFactorIDField
            End Get
            Set
                Me.performanceFactorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryID() As Integer
            Get
                Return Me.categoryIDField
            End Get
            Set
                Me.categoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Factor() As String
            Get
                Return Me.factorField
            End Get
            Set
                Me.factorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnitOfMeasureID() As System.Nullable(Of Integer)
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PerformanceGoalHelpBO
        Inherits DomainObjectOfInt32
        
        Private performanceGoalIDField As Integer
        
        Private descriptionField As String
        
        Private categoryIDField As Integer
        
        Private performanceFactorIDField As System.Nullable(Of Integer)
        
        Private actualField As Integer
        
        Private departmentIDField As Integer
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private toDateField As System.Nullable(Of Date)
        
        '''<remarks/>
        Public Property PerformanceGoalID() As Integer
            Get
                Return Me.performanceGoalIDField
            End Get
            Set
                Me.performanceGoalIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryID() As Integer
            Get
                Return Me.categoryIDField
            End Get
            Set
                Me.categoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PerformanceFactorID() As System.Nullable(Of Integer)
            Get
                Return Me.performanceFactorIDField
            End Get
            Set
                Me.performanceFactorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Actual() As Integer
            Get
                Return Me.actualField
            End Get
            Set
                Me.actualField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentID() As Integer
            Get
                Return Me.departmentIDField
            End Get
            Set
                Me.departmentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class AddressBO
        Inherits DomainObjectOfInt32
        
        Private addressIDField As Integer
        
        Private businessEntityIdField As Integer
        
        Private addressTypeField As String
        
        Private addressOwnerIdField As String
        
        Private addressLanguageIDField As Integer
        
        Private addressLine1Field As String
        
        Private addressLine2Field As String
        
        Private addressLine3Field As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private middleNameField As String
        
        Private companyNameField As String
        
        Private postCodeField As String
        
        Private pOBoxField As String
        
        Private pOBoxPostCodeField As String
        
        Private cityField As String
        
        Private districtProvinceField As String
        
        Private countryISOCodeField As String
        
        Private phoneNoField As String
        
        Private phoneNo2Field As String
        
        Private faxNoField As String
        
        Private mobilePhoneField As String
        
        Private carPhoneField As String
        
        Private eMailField As String
        
        Private homePageField As String
        
        Private onlineChatIDField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private countryField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        '''<remarks/>
        Public Property AddressID() As Integer
            Get
                Return Me.addressIDField
            End Get
            Set
                Me.addressIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressType() As String
            Get
                Return Me.addressTypeField
            End Get
            Set
                Me.addressTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressOwnerId() As String
            Get
                Return Me.addressOwnerIdField
            End Get
            Set
                Me.addressOwnerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLanguageID() As Integer
            Get
                Return Me.addressLanguageIDField
            End Get
            Set
                Me.addressLanguageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine1() As String
            Get
                Return Me.addressLine1Field
            End Get
            Set
                Me.addressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine2() As String
            Get
                Return Me.addressLine2Field
            End Get
            Set
                Me.addressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine3() As String
            Get
                Return Me.addressLine3Field
            End Get
            Set
                Me.addressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCode() As String
            Get
                Return Me.postCodeField
            End Get
            Set
                Me.postCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBox() As String
            Get
                Return Me.pOBoxField
            End Get
            Set
                Me.pOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxPostCode() As String
            Get
                Return Me.pOBoxPostCodeField
            End Get
            Set
                Me.pOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvince() As String
            Get
                Return Me.districtProvinceField
            End Get
            Set
                Me.districtProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCode() As String
            Get
                Return Me.countryISOCodeField
            End Get
            Set
                Me.countryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo() As String
            Get
                Return Me.phoneNoField
            End Get
            Set
                Me.phoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo2() As String
            Get
                Return Me.phoneNo2Field
            End Get
            Set
                Me.phoneNo2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxNo() As String
            Get
                Return Me.faxNoField
            End Get
            Set
                Me.faxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhone() As String
            Get
                Return Me.carPhoneField
            End Get
            Set
                Me.carPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePage() As String
            Get
                Return Me.homePageField
            End Get
            Set
                Me.homePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatID() As String
            Get
                Return Me.onlineChatIDField
            End Get
            Set
                Me.onlineChatIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SurveyWSI
        
        Private businessEntityIDField As Integer
        
        Private jobApplicationSurveyIDField As Integer
        
        Private vacancyIDField As Integer
        
        Private jobApplicationIDField As Integer
        
        Private surveyTemplateIDField As Integer
        
        Private surveyItemsField() As SurveyItemWSI
        
        Private surveySubmitTypeField As String
        
        Private allowAnonymousResponsesField As Boolean
        
        Private languageIdField As Integer
        
        Private submitAnonymouslyField As Boolean
        
        Private savedField As Boolean
        
        Private messageField As String
        
        Private errorField As String
        
        Private headerField As String
        
        '''<remarks/>
        Public Property BusinessEntityID() As Integer
            Get
                Return Me.businessEntityIDField
            End Get
            Set
                Me.businessEntityIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobApplicationSurveyID() As Integer
            Get
                Return Me.jobApplicationSurveyIDField
            End Get
            Set
                Me.jobApplicationSurveyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VacancyID() As Integer
            Get
                Return Me.vacancyIDField
            End Get
            Set
                Me.vacancyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobApplicationID() As Integer
            Get
                Return Me.jobApplicationIDField
            End Get
            Set
                Me.jobApplicationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SurveyTemplateID() As Integer
            Get
                Return Me.surveyTemplateIDField
            End Get
            Set
                Me.surveyTemplateIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SurveyItems() As SurveyItemWSI()
            Get
                Return Me.surveyItemsField
            End Get
            Set
                Me.surveyItemsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SurveySubmitType() As String
            Get
                Return Me.surveySubmitTypeField
            End Get
            Set
                Me.surveySubmitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowAnonymousResponses() As Boolean
            Get
                Return Me.allowAnonymousResponsesField
            End Get
            Set
                Me.allowAnonymousResponsesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageId() As Integer
            Get
                Return Me.languageIdField
            End Get
            Set
                Me.languageIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubmitAnonymously() As Boolean
            Get
                Return Me.submitAnonymouslyField
            End Get
            Set
                Me.submitAnonymouslyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Saved() As Boolean
            Get
                Return Me.savedField
            End Get
            Set
                Me.savedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Error]() As String
            Get
                Return Me.errorField
            End Get
            Set
                Me.errorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Header() As String
            Get
                Return Me.headerField
            End Get
            Set
                Me.headerField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SurveyItemWSI
        
        Private indexField As Integer
        
        Private definitionIdField As Integer
        
        Private questionField As String
        
        Private textField As String
        
        Private booleanField As System.Nullable(Of Boolean)
        
        Private decimalField As System.Nullable(Of Decimal)
        
        Private formatField As String
        
        Private typeField As String
        
        Private dateField As System.Nullable(Of Date)
        
        Private numberField As System.Nullable(Of Integer)
        
        Private requiredField As Boolean
        
        Private columnsField() As SurveyColumn
        
        Private rowsField() As SurveyRow
        
        '''<remarks/>
        Public Property Index() As Integer
            Get
                Return Me.indexField
            End Get
            Set
                Me.indexField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefinitionId() As Integer
            Get
                Return Me.definitionIdField
            End Get
            Set
                Me.definitionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Question() As String
            Get
                Return Me.questionField
            End Get
            Set
                Me.questionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property [Boolean]() As System.Nullable(Of Boolean)
            Get
                Return Me.booleanField
            End Get
            Set
                Me.booleanField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property [Decimal]() As System.Nullable(Of Decimal)
            Get
                Return Me.decimalField
            End Get
            Set
                Me.decimalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Format() As String
            Get
                Return Me.formatField
            End Get
            Set
                Me.formatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property [Date]() As System.Nullable(Of Date)
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Number() As System.Nullable(Of Integer)
            Get
                Return Me.numberField
            End Get
            Set
                Me.numberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Required() As Boolean
            Get
                Return Me.requiredField
            End Get
            Set
                Me.requiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Columns() As SurveyColumn()
            Get
                Return Me.columnsField
            End Get
            Set
                Me.columnsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rows() As SurveyRow()
            Get
                Return Me.rowsField
            End Get
            Set
                Me.rowsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SurveyColumn
        
        Private definitionIdField As Integer
        
        Private textField As String
        
        '''<remarks/>
        Public Property DefinitionId() As Integer
            Get
                Return Me.definitionIdField
            End Get
            Set
                Me.definitionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SurveyRow
        
        Private definitionIdField As Integer
        
        Private columnDefinitionIdField As Integer
        
        Private checkedField As Boolean
        
        Private valueField As Integer
        
        Private textField As String
        
        Private checkBoxesField() As SurveyRow
        
        '''<remarks/>
        Public Property DefinitionId() As Integer
            Get
                Return Me.definitionIdField
            End Get
            Set
                Me.definitionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ColumnDefinitionId() As Integer
            Get
                Return Me.columnDefinitionIdField
            End Get
            Set
                Me.columnDefinitionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Checked() As Boolean
            Get
                Return Me.checkedField
            End Get
            Set
                Me.checkedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As Integer
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CheckBoxes() As SurveyRow()
            Get
                Return Me.checkBoxesField
            End Get
            Set
                Me.checkBoxesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ReportParameter
        
        Private nameField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAbsenceRequestWSI
        
        Private causeOfAbsenceField As String
        
        Private descriptionField As String
        
        Private descriptionIDField As String
        
        Private documentNoField As String
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private quantityField As Decimal
        
        Private unitOfMeasureField As String
        
        Private quantityBaseField As Decimal
        
        Private qtyPerUnitOfMeasureField As Decimal
        
        Private entryDateField As Date
        
        Private requestStatusField As String
        
        Private completionStatusField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private cFBalanceField As Decimal
        
        Private entitledField As Decimal
        
        Private requestedField As Decimal
        
        Private usedField As Decimal
        
        Private totalAvailableField As Decimal
        
        Private balanceField As Decimal
        
        Private needSubmitField As Boolean
        
        Private employeeField As String
        
        '''<remarks/>
        Public Property CauseOfAbsence() As String
            Get
                Return Me.causeOfAbsenceField
            End Get
            Set
                Me.causeOfAbsenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasure() As String
            Get
                Return Me.unitOfMeasureField
            End Get
            Set
                Me.unitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuantityBase() As Decimal
            Get
                Return Me.quantityBaseField
            End Get
            Set
                Me.quantityBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QtyPerUnitOfMeasure() As Decimal
            Get
                Return Me.qtyPerUnitOfMeasureField
            End Get
            Set
                Me.qtyPerUnitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryDate() As Date
            Get
                Return Me.entryDateField
            End Get
            Set
                Me.entryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestStatus() As String
            Get
                Return Me.requestStatusField
            End Get
            Set
                Me.requestStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompletionStatus() As String
            Get
                Return Me.completionStatusField
            End Get
            Set
                Me.completionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalance() As Decimal
            Get
                Return Me.cFBalanceField
            End Get
            Set
                Me.cFBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entitled() As Decimal
            Get
                Return Me.entitledField
            End Get
            Set
                Me.entitledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Requested() As Decimal
            Get
                Return Me.requestedField
            End Get
            Set
                Me.requestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Used() As Decimal
            Get
                Return Me.usedField
            End Get
            Set
                Me.usedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailable() As Decimal
            Get
                Return Me.totalAvailableField
            End Get
            Set
                Me.totalAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Balance() As Decimal
            Get
                Return Me.balanceField
            End Get
            Set
                Me.balanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NeedSubmit() As Boolean
            Get
                Return Me.needSubmitField
            End Get
            Set
                Me.needSubmitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Employee() As String
            Get
                Return Me.employeeField
            End Get
            Set
                Me.employeeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PrivacySettingsWSI
        
        Private initialsField As Boolean
        
        Private namePrefixField As Boolean
        
        Private nameSuffixField As Boolean
        
        Private jobTitleField As Boolean
        
        Private genderField As Boolean
        
        Private birthDateField As Boolean
        
        Private statusField As Boolean
        
        Private employmentDateField As Boolean
        
        Private employeeJobDescriptionField As Boolean
        
        Private addressField As Boolean
        
        Private mobilePhoneField As Boolean
        
        Private personalEmailField As Boolean
        
        Private onlineChatIDField As Boolean
        
        Private employeeCodeField As Boolean
        
        Private workTelephoneExtensionField As Boolean
        
        '''<remarks/>
        Public Property Initials() As Boolean
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As Boolean
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As Boolean
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTitle() As Boolean
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As Boolean
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDate() As Boolean
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As Boolean
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmploymentDate() As Boolean
            Get
                Return Me.employmentDateField
            End Get
            Set
                Me.employmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescription() As Boolean
            Get
                Return Me.employeeJobDescriptionField
            End Get
            Set
                Me.employeeJobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address() As Boolean
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As Boolean
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PersonalEmail() As Boolean
            Get
                Return Me.personalEmailField
            End Get
            Set
                Me.personalEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatID() As Boolean
            Get
                Return Me.onlineChatIDField
            End Get
            Set
                Me.onlineChatIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As Boolean
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkTelephoneExtension() As Boolean
            Get
                Return Me.workTelephoneExtensionField
            End Get
            Set
                Me.workTelephoneExtensionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DataKeyValue
        
        Private dataKeyField As String
        
        Private dataValueField As String
        
        '''<remarks/>
        Public Property DataKey() As String
            Get
                Return Me.dataKeyField
            End Get
            Set
                Me.dataKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataValue() As String
            Get
                Return Me.dataValueField
            End Get
            Set
                Me.dataValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ItemStringKeyValue
        
        Private keyField As String
        
        Private valueField As String
        
        Private labelField As String
        
        Private textField As String
        
        Private operandField As String
        
        Private defaultTypeField As String
        
        Private wasChangedField As String
        
        Private dataField() As DataKeyValue
        
        '''<remarks/>
        Public Property Key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Text() As String
            Get
                Return Me.textField
            End Get
            Set
                Me.textField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Operand() As String
            Get
                Return Me.operandField
            End Get
            Set
                Me.operandField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultType() As String
            Get
                Return Me.defaultTypeField
            End Get
            Set
                Me.defaultTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WasChanged() As String
            Get
                Return Me.wasChangedField
            End Get
            Set
                Me.wasChangedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property data() As DataKeyValue()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class LoginUserWSI
        
        Private timeZoneField As String
        
        Private businessEntityField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private isSuperAdminField As Boolean
        
        Private languageIDField As Integer
        
        Private dateFormatField As String
        
        Private timeFormatField As String
        
        Private loginUsingField As String
        
        Private useSSOOnlyField As Boolean
        
        Private pendingNotificationsField() As ItemStringKeyValue
        
        Private privacySettingsField As PrivacySettingsWSI
        
        Private needChangePasswordField As Boolean
        
        '''<remarks/>
        Public Property TimeZone() As String
            Get
                Return Me.timeZoneField
            End Get
            Set
                Me.timeZoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntity() As String
            Get
                Return Me.businessEntityField
            End Get
            Set
                Me.businessEntityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSuperAdmin() As Boolean
            Get
                Return Me.isSuperAdminField
            End Get
            Set
                Me.isSuperAdminField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageID() As Integer
            Get
                Return Me.languageIDField
            End Get
            Set
                Me.languageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateFormat() As String
            Get
                Return Me.dateFormatField
            End Get
            Set
                Me.dateFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeFormat() As String
            Get
                Return Me.timeFormatField
            End Get
            Set
                Me.timeFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoginUsing() As String
            Get
                Return Me.loginUsingField
            End Get
            Set
                Me.loginUsingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseSSOOnly() As Boolean
            Get
                Return Me.useSSOOnlyField
            End Get
            Set
                Me.useSSOOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PendingNotifications() As ItemStringKeyValue()
            Get
                Return Me.pendingNotificationsField
            End Get
            Set
                Me.pendingNotificationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrivacySettings() As PrivacySettingsWSI
            Get
                Return Me.privacySettingsField
            End Get
            Set
                Me.privacySettingsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NeedChangePassword() As Boolean
            Get
                Return Me.needChangePasswordField
            End Get
            Set
                Me.needChangePasswordField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TranslatedString
        
        Private keyField As String
        
        Private translatedValueField As String
        
        '''<remarks/>
        Public Property Key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TranslatedValue() As String
            Get
                Return Me.translatedValueField
            End Get
            Set
                Me.translatedValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UserSecurityProfileWSI
        
        Private minPasswordLengthField As System.Nullable(Of Integer)
        
        Private minNoUpperCaseField As System.Nullable(Of Integer)
        
        Private minNoSpecialCharsField As System.Nullable(Of Integer)
        
        Private minNoNumericField As System.Nullable(Of Integer)
        
        Private minNoLowerCaseField As System.Nullable(Of Integer)
        
        Private maxNoLoginAttemptsField As System.Nullable(Of Integer)
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinPasswordLength() As System.Nullable(Of Integer)
            Get
                Return Me.minPasswordLengthField
            End Get
            Set
                Me.minPasswordLengthField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinNoUpperCase() As System.Nullable(Of Integer)
            Get
                Return Me.minNoUpperCaseField
            End Get
            Set
                Me.minNoUpperCaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinNoSpecialChars() As System.Nullable(Of Integer)
            Get
                Return Me.minNoSpecialCharsField
            End Get
            Set
                Me.minNoSpecialCharsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinNoNumeric() As System.Nullable(Of Integer)
            Get
                Return Me.minNoNumericField
            End Get
            Set
                Me.minNoNumericField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinNoLowerCase() As System.Nullable(Of Integer)
            Get
                Return Me.minNoLowerCaseField
            End Get
            Set
                Me.minNoLowerCaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MaxNoLoginAttempts() As System.Nullable(Of Integer)
            Get
                Return Me.maxNoLoginAttemptsField
            End Get
            Set
                Me.maxNoLoginAttemptsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DateFormatWSI
        
        Private dateFormatField As String
        
        Private dateFormatPHPField As String
        
        '''<remarks/>
        Public Property DateFormat() As String
            Get
                Return Me.dateFormatField
            End Get
            Set
                Me.dateFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateFormatPHP() As String
            Get
                Return Me.dateFormatPHPField
            End Get
            Set
                Me.dateFormatPHPField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UserFieldDefinitionWSI
        
        Private descriptionField As String
        
        Private typeField As String
        
        Private userFieldDefinitionIDField As Integer
        
        Private multiChoiceValuesField() As UserFieldValueBO
        
        Private descriptionIDField As String
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFieldDefinitionID() As Integer
            Get
                Return Me.userFieldDefinitionIDField
            End Get
            Set
                Me.userFieldDefinitionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MultiChoiceValues() As UserFieldValueBO()
            Get
                Return Me.multiChoiceValuesField
            End Get
            Set
                Me.multiChoiceValuesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UnitOfMeasureWSI
        
        Private unitOfMeasureIDField As Integer
        
        Private applicationCodeField As String
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private unitQuantityField As Decimal
        
        Private restrictToIntegerField As Boolean
        
        '''<remarks/>
        Public Property UnitOfMeasureID() As Integer
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationCode() As String
            Get
                Return Me.applicationCodeField
            End Get
            Set
                Me.applicationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitQuantity() As Decimal
            Get
                Return Me.unitQuantityField
            End Get
            Set
                Me.unitQuantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RestrictToInteger() As Boolean
            Get
                Return Me.restrictToIntegerField
            End Get
            Set
                Me.restrictToIntegerField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CalculateEntitledAbsenceBO
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private cFBalanceField As Decimal
        
        Private cFBalanceStringField As String
        
        Private entitledField As Decimal
        
        Private entitledStringField As String
        
        Private usedField As Decimal
        
        Private usedStringField As String
        
        Private requestedField As Decimal
        
        Private requestedStringField As String
        
        Private approvedField As Decimal
        
        Private approvedStringField As String
        
        Private totalAvailableField As Decimal
        
        Private totalAvailableStringField As String
        
        Private balanceField As Decimal
        
        Private balanceBaseField As Decimal
        
        Private balanceStringField As String
        
        Private causeOfAbsenceIDField As Integer
        
        Private employeeIDField As Integer
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalance() As Decimal
            Get
                Return Me.cFBalanceField
            End Get
            Set
                Me.cFBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalanceString() As String
            Get
                Return Me.cFBalanceStringField
            End Get
            Set
                Me.cFBalanceStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entitled() As Decimal
            Get
                Return Me.entitledField
            End Get
            Set
                Me.entitledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntitledString() As String
            Get
                Return Me.entitledStringField
            End Get
            Set
                Me.entitledStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Used() As Decimal
            Get
                Return Me.usedField
            End Get
            Set
                Me.usedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsedString() As String
            Get
                Return Me.usedStringField
            End Get
            Set
                Me.usedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Requested() As Decimal
            Get
                Return Me.requestedField
            End Get
            Set
                Me.requestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestedString() As String
            Get
                Return Me.requestedStringField
            End Get
            Set
                Me.requestedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Approved() As Decimal
            Get
                Return Me.approvedField
            End Get
            Set
                Me.approvedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovedString() As String
            Get
                Return Me.approvedStringField
            End Get
            Set
                Me.approvedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailable() As Decimal
            Get
                Return Me.totalAvailableField
            End Get
            Set
                Me.totalAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailableString() As String
            Get
                Return Me.totalAvailableStringField
            End Get
            Set
                Me.totalAvailableStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Balance() As Decimal
            Get
                Return Me.balanceField
            End Get
            Set
                Me.balanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BalanceBase() As Decimal
            Get
                Return Me.balanceBaseField
            End Get
            Set
                Me.balanceBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BalanceString() As String
            Get
                Return Me.balanceStringField
            End Get
            Set
                Me.balanceStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsenceID() As Integer
            Get
                Return Me.causeOfAbsenceIDField
            End Get
            Set
                Me.causeOfAbsenceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class UserFieldWSI
        
        Private nameField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeSalaryHistoryWSI
        
        Private gradeField As String
        
        Private positionAssignmentField As String
        
        Private currencyCodeField As String
        
        Private currencyField As String
        
        Private previousSalaryField As Decimal
        
        Private previousSalaryStringField As String
        
        Private salaryField As Decimal
        
        Private salaryStringField As String
        
        Private startDateField As Date
        
        Private startDateStringField As String
        
        Private salaryTypeField As String
        
        Private commentsField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private otherSalaryField As System.Nullable(Of Decimal)
        
        Private deductionsField As System.Nullable(Of Decimal)
        
        Private employerContributionsField As System.Nullable(Of Decimal)
        
        Private otherCostsField As System.Nullable(Of Decimal)
        
        Private totalEmployeeCostField As System.Nullable(Of Decimal)
        
        Private workedPointsField As System.Nullable(Of Decimal)
        
        '''<remarks/>
        Public Property Grade() As String
            Get
                Return Me.gradeField
            End Get
            Set
                Me.gradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionAssignment() As String
            Get
                Return Me.positionAssignmentField
            End Get
            Set
                Me.positionAssignmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrencyCode() As String
            Get
                Return Me.currencyCodeField
            End Get
            Set
                Me.currencyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreviousSalary() As Decimal
            Get
                Return Me.previousSalaryField
            End Get
            Set
                Me.previousSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreviousSalaryString() As String
            Get
                Return Me.previousSalaryStringField
            End Get
            Set
                Me.previousSalaryStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Salary() As Decimal
            Get
                Return Me.salaryField
            End Get
            Set
                Me.salaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryString() As String
            Get
                Return Me.salaryStringField
            End Get
            Set
                Me.salaryStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDateString() As String
            Get
                Return Me.startDateStringField
            End Get
            Set
                Me.startDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryType() As String
            Get
                Return Me.salaryTypeField
            End Get
            Set
                Me.salaryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.otherSalaryField
            End Get
            Set
                Me.otherSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Deductions() As System.Nullable(Of Decimal)
            Get
                Return Me.deductionsField
            End Get
            Set
                Me.deductionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmployerContributions() As System.Nullable(Of Decimal)
            Get
                Return Me.employerContributionsField
            End Get
            Set
                Me.employerContributionsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherCosts() As System.Nullable(Of Decimal)
            Get
                Return Me.otherCostsField
            End Get
            Set
                Me.otherCostsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TotalEmployeeCost() As System.Nullable(Of Decimal)
            Get
                Return Me.totalEmployeeCostField
            End Get
            Set
                Me.totalEmployeeCostField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkedPoints() As System.Nullable(Of Decimal)
            Get
                Return Me.workedPointsField
            End Get
            Set
                Me.workedPointsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CalculateEntitledAbsenceWSI
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private cFBalanceField As Decimal
        
        Private cFBalanceStringField As String
        
        Private entitledField As Decimal
        
        Private entitledStringField As String
        
        Private usedField As Decimal
        
        Private usedStringField As String
        
        Private requestedField As Decimal
        
        Private requestedStringField As String
        
        Private approvedField As Decimal
        
        Private approvedStringField As String
        
        Private totalAvailableField As Decimal
        
        Private totalAvailableStringField As String
        
        Private balanceField As Decimal
        
        Private balanceStringField As String
        
        Private causeOfAbsenceIDField As Integer
        
        Private employeeIDField As Integer
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalance() As Decimal
            Get
                Return Me.cFBalanceField
            End Get
            Set
                Me.cFBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalanceString() As String
            Get
                Return Me.cFBalanceStringField
            End Get
            Set
                Me.cFBalanceStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entitled() As Decimal
            Get
                Return Me.entitledField
            End Get
            Set
                Me.entitledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntitledString() As String
            Get
                Return Me.entitledStringField
            End Get
            Set
                Me.entitledStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Used() As Decimal
            Get
                Return Me.usedField
            End Get
            Set
                Me.usedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsedString() As String
            Get
                Return Me.usedStringField
            End Get
            Set
                Me.usedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Requested() As Decimal
            Get
                Return Me.requestedField
            End Get
            Set
                Me.requestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestedString() As String
            Get
                Return Me.requestedStringField
            End Get
            Set
                Me.requestedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Approved() As Decimal
            Get
                Return Me.approvedField
            End Get
            Set
                Me.approvedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovedString() As String
            Get
                Return Me.approvedStringField
            End Get
            Set
                Me.approvedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailable() As Decimal
            Get
                Return Me.totalAvailableField
            End Get
            Set
                Me.totalAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailableString() As String
            Get
                Return Me.totalAvailableStringField
            End Get
            Set
                Me.totalAvailableStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Balance() As Decimal
            Get
                Return Me.balanceField
            End Get
            Set
                Me.balanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BalanceString() As String
            Get
                Return Me.balanceStringField
            End Get
            Set
                Me.balanceStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsenceID() As Integer
            Get
                Return Me.causeOfAbsenceIDField
            End Get
            Set
                Me.causeOfAbsenceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeTrainingWSI
        
        Private trainingCourseCodeField As String
        
        Private descriptionField As String
        
        Private courseTypeField As String
        
        Private courseSubjectField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private fromDateStringField As String
        
        Private toDateField As System.Nullable(Of Date)
        
        Private toDateStringField As String
        
        Private durationField As Decimal
        
        Private unitOfMeasureIDField As System.Nullable(Of Integer)
        
        Private unitOfMeasureCodeField As String
        
        Private durationPerUOMField As Decimal
        
        Private durationBaseField As Decimal
        
        Private institutionTrainerField As String
        
        Private locationField As String
        
        Private budgetedCostField As Decimal
        
        Private actualCostField As Decimal
        
        Private subsidyAmountField As Decimal
        
        Private subsidyDetailsField As String
        
        Private evaluationScoreField As Decimal
        
        Private statusField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property TrainingCourseCode() As String
            Get
                Return Me.trainingCourseCodeField
            End Get
            Set
                Me.trainingCourseCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseType() As String
            Get
                Return Me.courseTypeField
            End Get
            Set
                Me.courseTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseSubject() As String
            Get
                Return Me.courseSubjectField
            End Get
            Set
                Me.courseSubjectField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateString() As String
            Get
                Return Me.fromDateStringField
            End Get
            Set
                Me.fromDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duration() As Decimal
            Get
                Return Me.durationField
            End Get
            Set
                Me.durationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnitOfMeasureID() As System.Nullable(Of Integer)
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DurationPerUOM() As Decimal
            Get
                Return Me.durationPerUOMField
            End Get
            Set
                Me.durationPerUOMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DurationBase() As Decimal
            Get
                Return Me.durationBaseField
            End Get
            Set
                Me.durationBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionTrainer() As String
            Get
                Return Me.institutionTrainerField
            End Get
            Set
                Me.institutionTrainerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BudgetedCost() As Decimal
            Get
                Return Me.budgetedCostField
            End Get
            Set
                Me.budgetedCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActualCost() As Decimal
            Get
                Return Me.actualCostField
            End Get
            Set
                Me.actualCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubsidyAmount() As Decimal
            Get
                Return Me.subsidyAmountField
            End Get
            Set
                Me.subsidyAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubsidyDetails() As String
            Get
                Return Me.subsidyDetailsField
            End Get
            Set
                Me.subsidyDetailsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EvaluationScore() As Decimal
            Get
                Return Me.evaluationScoreField
            End Get
            Set
                Me.evaluationScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAffiliationWSI
        
        Private organisationNameField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private fromDateStringField As String
        
        Private toDateField As System.Nullable(Of Date)
        
        Private toDateStringField As String
        
        Private positionField As String
        
        Private dutiesField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property OrganisationName() As String
            Get
                Return Me.organisationNameField
            End Get
            Set
                Me.organisationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateString() As String
            Get
                Return Me.fromDateStringField
            End Get
            Set
                Me.fromDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duties() As String
            Get
                Return Me.dutiesField
            End Get
            Set
                Me.dutiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeePastExperienceWSI
        
        Private _EmployeePastExperienceBOField As EmployeePastExperienceBO
        
        Private companyField As String
        
        Private positionField As String
        
        Private dutiesField As String
        
        Private fromDataField As System.Nullable(Of Date)
        
        Private fromDataStringField As String
        
        Private toDateField As System.Nullable(Of Date)
        
        Private toDateStringField As String
        
        Private lastSalaryField As Decimal
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property _EmployeePastExperienceBO() As EmployeePastExperienceBO
            Get
                Return Me._EmployeePastExperienceBOField
            End Get
            Set
                Me._EmployeePastExperienceBOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duties() As String
            Get
                Return Me.dutiesField
            End Get
            Set
                Me.dutiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromData() As System.Nullable(Of Date)
            Get
                Return Me.fromDataField
            End Get
            Set
                Me.fromDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDataString() As String
            Get
                Return Me.fromDataStringField
            End Get
            Set
                Me.fromDataStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastSalary() As Decimal
            Get
                Return Me.lastSalaryField
            End Get
            Set
                Me.lastSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAssignedArticleWSI
        
        Private employeeAssignedArticleIDField As Integer
        
        Private assignedArticleTypeField As String
        
        Private descriptionField As String
        
        Private amountField As Decimal
        
        Private validFromField As System.Nullable(Of Date)
        
        Private validFromStringField As String
        
        Private validToField As System.Nullable(Of Date)
        
        Private validToStringField As String
        
        Private serialNoField As String
        
        Private statusField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property EmployeeAssignedArticleID() As Integer
            Get
                Return Me.employeeAssignedArticleIDField
            End Get
            Set
                Me.employeeAssignedArticleIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssignedArticleType() As String
            Get
                Return Me.assignedArticleTypeField
            End Get
            Set
                Me.assignedArticleTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Decimal
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidFrom() As System.Nullable(Of Date)
            Get
                Return Me.validFromField
            End Get
            Set
                Me.validFromField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidFromString() As String
            Get
                Return Me.validFromStringField
            End Get
            Set
                Me.validFromStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidTo() As System.Nullable(Of Date)
            Get
                Return Me.validToField
            End Get
            Set
                Me.validToField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidToString() As String
            Get
                Return Me.validToStringField
            End Get
            Set
                Me.validToStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SerialNo() As String
            Get
                Return Me.serialNoField
            End Get
            Set
                Me.serialNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeBenefitWSI
        
        Private benefitTypeField As String
        
        Private benefitTypeCodeField As String
        
        Private benefitPeriodicityField As String
        
        Private descriptionField As String
        
        Private amountField As Decimal
        
        Private validFromField As System.Nullable(Of Date)
        
        Private validFromStringField As String
        
        Private validToField As System.Nullable(Of Date)
        
        Private validToStringField As String
        
        Private statusField As String
        
        Private notesField As String
        
        Private currencyField As String
        
        Private employeeAmountField As Decimal
        
        Private employeeAmountBaseField As Decimal
        
        Private employerAmountBaseField As Decimal
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property BenefitType() As String
            Get
                Return Me.benefitTypeField
            End Get
            Set
                Me.benefitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BenefitTypeCode() As String
            Get
                Return Me.benefitTypeCodeField
            End Get
            Set
                Me.benefitTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BenefitPeriodicity() As String
            Get
                Return Me.benefitPeriodicityField
            End Get
            Set
                Me.benefitPeriodicityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Decimal
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidFrom() As System.Nullable(Of Date)
            Get
                Return Me.validFromField
            End Get
            Set
                Me.validFromField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidFromString() As String
            Get
                Return Me.validFromStringField
            End Get
            Set
                Me.validFromStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ValidTo() As System.Nullable(Of Date)
            Get
                Return Me.validToField
            End Get
            Set
                Me.validToField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidToString() As String
            Get
                Return Me.validToStringField
            End Get
            Set
                Me.validToStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAmount() As Decimal
            Get
                Return Me.employeeAmountField
            End Get
            Set
                Me.employeeAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAmountBase() As Decimal
            Get
                Return Me.employeeAmountBaseField
            End Get
            Set
                Me.employeeAmountBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployerAmountBase() As Decimal
            Get
                Return Me.employerAmountBaseField
            End Get
            Set
                Me.employerAmountBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeReferenceWSI
        
        Private nameField As String
        
        Private companyField As String
        
        Private positionField As String
        
        Private telephoneField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telephone() As String
            Get
                Return Me.telephoneField
            End Get
            Set
                Me.telephoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeEducationWSI
        
        Private institutionNameField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private fromDateStringField As String
        
        Private toDateField As System.Nullable(Of Date)
        
        Private toDateStringField As String
        
        Private subjectField As String
        
        Private awardedQualificationField As String
        
        Private markGradeField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property InstitutionName() As String
            Get
                Return Me.institutionNameField
            End Get
            Set
                Me.institutionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateString() As String
            Get
                Return Me.fromDateStringField
            End Get
            Set
                Me.fromDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Subject() As String
            Get
                Return Me.subjectField
            End Get
            Set
                Me.subjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AwardedQualification() As String
            Get
                Return Me.awardedQualificationField
            End Get
            Set
                Me.awardedQualificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MarkGrade() As String
            Get
                Return Me.markGradeField
            End Get
            Set
                Me.markGradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeRelativeWSI
        
        Private addressLine1Field As String
        
        Private addressLine2Field As String
        
        Private addressLine3Field As String
        
        Private contactPostCodeField As String
        
        Private contactCountryField As String
        
        Private contactEmailField As String
        
        Private contactMobileField As String
        
        Private contactTelField As String
        
        Private relativeTypeField As String
        
        Private contactNameField As String
        
        Private useContactField As Boolean
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private telephoneField As String
        
        Private eMailField As String
        
        Private insertDateField As Date
        
        Private birthDateField As System.Nullable(Of Date)
        
        Private birthDateStringField As String
        
        Private statusField As String
        
        Private descriptionField As String
        
        Private dependentField As Boolean
        
        Private medicalCardNoField As String
        
        Private medicalSchemeStartField As System.Nullable(Of Date)
        
        Private medicalSchemeStartStringField As String
        
        Private medicalSchemeEndField As System.Nullable(Of Date)
        
        Private medicalSchemeEndStringField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property AddressLine1() As String
            Get
                Return Me.addressLine1Field
            End Get
            Set
                Me.addressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine2() As String
            Get
                Return Me.addressLine2Field
            End Get
            Set
                Me.addressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine3() As String
            Get
                Return Me.addressLine3Field
            End Get
            Set
                Me.addressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactPostCode() As String
            Get
                Return Me.contactPostCodeField
            End Get
            Set
                Me.contactPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactCountry() As String
            Get
                Return Me.contactCountryField
            End Get
            Set
                Me.contactCountryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactEmail() As String
            Get
                Return Me.contactEmailField
            End Get
            Set
                Me.contactEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactMobile() As String
            Get
                Return Me.contactMobileField
            End Get
            Set
                Me.contactMobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactTel() As String
            Get
                Return Me.contactTelField
            End Get
            Set
                Me.contactTelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RelativeType() As String
            Get
                Return Me.relativeTypeField
            End Get
            Set
                Me.relativeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactName() As String
            Get
                Return Me.contactNameField
            End Get
            Set
                Me.contactNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseContact() As Boolean
            Get
                Return Me.useContactField
            End Get
            Set
                Me.useContactField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telephone() As String
            Get
                Return Me.telephoneField
            End Get
            Set
                Me.telephoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InsertDate() As Date
            Get
                Return Me.insertDateField
            End Get
            Set
                Me.insertDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BirthDate() As System.Nullable(Of Date)
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDateString() As String
            Get
                Return Me.birthDateStringField
            End Get
            Set
                Me.birthDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Dependent() As Boolean
            Get
                Return Me.dependentField
            End Get
            Set
                Me.dependentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MedicalCardNo() As String
            Get
                Return Me.medicalCardNoField
            End Get
            Set
                Me.medicalCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MedicalSchemeStart() As System.Nullable(Of Date)
            Get
                Return Me.medicalSchemeStartField
            End Get
            Set
                Me.medicalSchemeStartField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MedicalSchemeStartString() As String
            Get
                Return Me.medicalSchemeStartStringField
            End Get
            Set
                Me.medicalSchemeStartStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MedicalSchemeEnd() As System.Nullable(Of Date)
            Get
                Return Me.medicalSchemeEndField
            End Get
            Set
                Me.medicalSchemeEndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MedicalSchemeEndString() As String
            Get
                Return Me.medicalSchemeEndStringField
            End Get
            Set
                Me.medicalSchemeEndStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeQualificationWSI
        
        Private qualificationCodeField As String
        
        Private descriptionField As String
        
        Private qualificationTypeField As String
        
        Private awardedByField As String
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property QualificationCode() As String
            Get
                Return Me.qualificationCodeField
            End Get
            Set
                Me.qualificationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QualificationType() As String
            Get
                Return Me.qualificationTypeField
            End Get
            Set
                Me.qualificationTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AwardedBy() As String
            Get
                Return Me.awardedByField
            End Get
            Set
                Me.awardedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAbsenceWSI
        
        Private employeeFullNameField As String
        
        Private tAEmployeeNumberField As String
        
        Private employeeCodeField As String
        
        Private causeOfAbsenceField As String
        
        Private causeOfAbsenceCodeField As String
        
        Private descriptionField As String
        
        Private descriptionIDField As String
        
        Private documentNoField As String
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private quantityField As Decimal
        
        Private unitOfMeasureField As String
        
        Private quantityBaseField As Decimal
        
        Private qtyPerUnitOfMeasureField As Decimal
        
        Private entryDateField As Date
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private cFBalanceField As Decimal
        
        Private entitledField As Decimal
        
        Private usedField As Decimal
        
        Private totalAvailableField As Decimal
        
        Private balanceField As Decimal
        
        Private isDeletedField As Boolean
        
        Private userFieldsField() As EmployeeUserField
        
        '''<remarks/>
        Public Property EmployeeFullName() As String
            Get
                Return Me.employeeFullNameField
            End Get
            Set
                Me.employeeFullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TAEmployeeNumber() As String
            Get
                Return Me.tAEmployeeNumberField
            End Get
            Set
                Me.tAEmployeeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsence() As String
            Get
                Return Me.causeOfAbsenceField
            End Get
            Set
                Me.causeOfAbsenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsenceCode() As String
            Get
                Return Me.causeOfAbsenceCodeField
            End Get
            Set
                Me.causeOfAbsenceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasure() As String
            Get
                Return Me.unitOfMeasureField
            End Get
            Set
                Me.unitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuantityBase() As Decimal
            Get
                Return Me.quantityBaseField
            End Get
            Set
                Me.quantityBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QtyPerUnitOfMeasure() As Decimal
            Get
                Return Me.qtyPerUnitOfMeasureField
            End Get
            Set
                Me.qtyPerUnitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryDate() As Date
            Get
                Return Me.entryDateField
            End Get
            Set
                Me.entryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalance() As Decimal
            Get
                Return Me.cFBalanceField
            End Get
            Set
                Me.cFBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entitled() As Decimal
            Get
                Return Me.entitledField
            End Get
            Set
                Me.entitledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Used() As Decimal
            Get
                Return Me.usedField
            End Get
            Set
                Me.usedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailable() As Decimal
            Get
                Return Me.totalAvailableField
            End Get
            Set
                Me.totalAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Balance() As Decimal
            Get
                Return Me.balanceField
            End Get
            Set
                Me.balanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsDeleted() As Boolean
            Get
                Return Me.isDeletedField
            End Get
            Set
                Me.isDeletedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFields() As EmployeeUserField()
            Get
                Return Me.userFieldsField
            End Get
            Set
                Me.userFieldsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeWSI
        
        Private departmentManagerCodeField As String
        
        Private departmentManagerNameField As String
        
        Private parentDepartmentCodeField As String
        
        Private payrollCompanyNoField As String
        
        Private tAEmployeeNumberField As String
        
        Private nationalInsuranceNoField As String
        
        Private parentDepartmentNameField As String
        
        Private workPermitExpiryDateField As System.Nullable(Of Date)
        
        Private workPermitReferenceField As String
        
        Private daysTakenField As Decimal
        
        Private departmentListField As String
        
        Private loginWindowsField As String
        
        Private employeeGradeCodeField As String
        
        Private employeeJobDescriptionCodeField As String
        
        Private idField As Integer
        
        Private departmentField As String
        
        Private departmentCodeField As String
        
        Private employeeStatisticalCodeField As String
        
        Private employeeCostCenterCodeField As String
        
        Private departmentLocationField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private employeeCodeField As String
        
        Private weeklyWorkingHoursField As System.Nullable(Of Decimal)
        
        Private dailyWorkingHoursField As System.Nullable(Of Decimal)
        
        Private initialsField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private jobTitleField As String
        
        Private genderField As String
        
        Private birthDateField As Date
        
        Private birthDateStringField As String
        
        Private statusField As String
        
        Private employmentDateField As Date
        
        Private employmentDateStringField As String
        
        Private dateOfClassificationField As System.Nullable(Of Date)
        
        Private dateOfClassificationStringField As String
        
        Private mainAddressField As AddressBO
        
        Private companyNameField As String
        
        Private postCodeField As String
        
        Private pOBoxField As String
        
        Private pOBoxPostCodeField As String
        
        Private cityField As String
        
        Private districtProvinceField As String
        
        Private countryISOCodeField As String
        
        Private countryField As String
        
        Private phoneNoField As String
        
        Private phoneNo2Field As String
        
        Private faxNoField As String
        
        Private mobilePhoneField As String
        
        Private carPhoneField As String
        
        Private eMailField As String
        
        Private homePageField As String
        
        Private addressesField() As AddressBO
        
        Private postCodeAlternativeField As String
        
        Private pOBoxAlternativeField As String
        
        Private pOBoxPostCodeAlternativeField As String
        
        Private cityAlternativeField As String
        
        Private districtProvinceAlternativeField As String
        
        Private countryISOCodeAlternativeField As String
        
        Private phoneNoAlternativeField As String
        
        Private phoneNo2AlternativeField As String
        
        Private faxNoAlternativeField As String
        
        Private mobilePhoneAlternativeField As String
        
        Private carPhoneAlternativeField As String
        
        Private eMailAlternativeField As String
        
        Private homePageAlternativeField As String
        
        Private onlineChatIDAlternativeField As String
        
        Private maritalStatusField As String
        
        Private religionField As String
        
        Private socialSecurityNoField As String
        
        Private unionMembershipNoField As String
        
        Private identityCardNoField As String
        
        Private identityCardDateofIssueField As System.Nullable(Of Date)
        
        Private identityCardPlaceofIssueField As String
        
        Private identityCardIssuedByField As String
        
        Private identityCardExpiryDateField As System.Nullable(Of Date)
        
        Private passportNoField As String
        
        Private passportDateofIssueField As System.Nullable(Of Date)
        
        Private passportDateofIssueStringField As String
        
        Private passportPlaceofIssueField As String
        
        Private passportIssuedByField As String
        
        Private passportExpiryDateField As System.Nullable(Of Date)
        
        Private passportExpiryDateStringField As String
        
        Private incomeTaxNoField As String
        
        Private employeeJobDescriptionField As String
        
        Private workTelephoneExtensionField As String
        
        Private workIMField As String
        
        Private workEMailField As String
        
        Private employeeManagerField As String
        
        Private employeeManagerCodeField As String
        
        Private employeeNameField As String
        
        Private employeeContractTypeField As String
        
        Private employeeContractTypeCodeField As String
        
        Private paymentFrequencyField As String
        
        Private currencyIDField As String
        
        Private nationalityCountryISOCodeField As String
        
        Private nationalityCountryISONameField As String
        
        Private fathersNameField As String
        
        Private mothersNameField As String
        
        Private employeeUnionField As String
        
        Private employeeUnionCodeField As String
        
        Private payrollNoField As String
        
        Private bankNameField As String
        
        Private bankBranchField As String
        
        Private bankAccountNoField As String
        
        Private iBANField As String
        
        Private sWIFTField As String
        
        Private employeeAccountCodeField As String
        
        Private terminationDateField As System.Nullable(Of Date)
        
        Private terminationDateStringField As String
        
        Private terminationCommentsField As String
        
        Private terminationAmountField As System.Nullable(Of Decimal)
        
        Private inactiveDateField As System.Nullable(Of Date)
        
        Private inactiveDateStringField As String
        
        Private employeeGradeField As String
        
        Private previousEmploymentMonthsField As System.Nullable(Of Integer)
        
        Private otherPreviousEmploymentMonthsField As System.Nullable(Of Integer)
        
        Private fTEquivalentField As System.Nullable(Of Decimal)
        
        Private positionField As String
        
        Private positionCodeField As String
        
        Private positionDateField As System.Nullable(Of Date)
        
        Private positionDateStringField As String
        
        Private applicantReferenceField As String
        
        Private currentSalaryAmountField As System.Nullable(Of Decimal)
        
        Private salaryTypeField As String
        
        Private salaryLastUpdatedField As System.Nullable(Of Date)
        
        Private salaryLastUpdatedStringField As String
        
        Private notesField As String
        
        Private allowToAccessSubordinatesField As Boolean
        
        Private contractExpiryDateField As System.Nullable(Of Date)
        
        Private cFBalanceField As Decimal
        
        Private entitledField As Decimal
        
        Private usedField As Decimal
        
        Private requestedField As Decimal
        
        Private approvedField As Decimal
        
        Private totalAvailableField As Decimal
        
        Private balanceField As Decimal
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private ageField As Integer
        
        Private yearsOfServiceField As Integer
        
        Private locationField As String
        
        Private locationCodeField As String
        
        Private locationIDField As System.Nullable(Of Integer)
        
        Private pictureIDField As String
        
        Private bradfordField As Decimal
        
        Private appraisalField As Decimal
        
        Private workPermitTypeField As String
        
        Private validRightToWorkField As Boolean
        
        Private workMobileNoField As String
        
        Private knownAsField As String
        
        Private addressedAsField As String
        
        Private ethnicityField As System.Nullable(Of Integer)
        
        Private sexualOrientationField As System.Nullable(Of Integer)
        
        Private passportCountryCodeField As String
        
        Private drivingLicenseNoField As String
        
        Private disabilityField As System.Nullable(Of Integer)
        
        Private bankAccountNameField As String
        
        Private taxCodeField As System.Nullable(Of Integer)
        
        Private taxCodeCodeField As String
        
        Private taxCodeDescriptionField As String
        
        Private ethnicityCodeField As String
        
        Private ethnicityDescriptionField As String
        
        Private sexualOrientationCodeField As String
        
        Private sexualOrientationDescriptionField As String
        
        Private disabilityCodeField As String
        
        Private disabilityDescriptionField As String
        
        Private employeeAbsencesField() As EmployeeAbsenceWSI
        
        Private absenceRequestsField() As AbsenceRequestWSI
        
        Private userFieldsField() As EmployeeUserField
        
        Private dimensionsField() As EmployeeDimension
        
        Private employeeQualificationsField() As EmployeeQualificationWSI
        
        Private employeeRelativesField() As EmployeeRelativeWSI
        
        Private employeeNextOfKinField As EmployeeRelativeWSI
        
        Private employeeEducationsField() As EmployeeEducationWSI
        
        Private employeeReferencesField() As EmployeeReferenceWSI
        
        Private employeeBenefitsField() As EmployeeBenefitWSI
        
        Private employeeAssignedArticlesField() As EmployeeAssignedArticleWSI
        
        Private employeePastExperienceField() As EmployeePastExperienceWSI
        
        Private employeeAffiliationsField() As EmployeeAffiliationWSI
        
        Private employeeTrainingsField() As EmployeeTrainingWSI
        
        Private positionAssignmentsField() As PositionAssignmentWSI
        
        Private employeeDocumentsField() As DocumentWSI
        
        Private employeePicturesField() As PictureWSI
        
        '''<remarks/>
        Public Property DepartmentManagerCode() As String
            Get
                Return Me.departmentManagerCodeField
            End Get
            Set
                Me.departmentManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentManagerName() As String
            Get
                Return Me.departmentManagerNameField
            End Get
            Set
                Me.departmentManagerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentDepartmentCode() As String
            Get
                Return Me.parentDepartmentCodeField
            End Get
            Set
                Me.parentDepartmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PayrollCompanyNo() As String
            Get
                Return Me.payrollCompanyNoField
            End Get
            Set
                Me.payrollCompanyNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TAEmployeeNumber() As String
            Get
                Return Me.tAEmployeeNumberField
            End Get
            Set
                Me.tAEmployeeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalInsuranceNo() As String
            Get
                Return Me.nationalInsuranceNoField
            End Get
            Set
                Me.nationalInsuranceNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParentDepartmentName() As String
            Get
                Return Me.parentDepartmentNameField
            End Get
            Set
                Me.parentDepartmentNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkPermitExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.workPermitExpiryDateField
            End Get
            Set
                Me.workPermitExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkPermitReference() As String
            Get
                Return Me.workPermitReferenceField
            End Get
            Set
                Me.workPermitReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaysTaken() As Decimal
            Get
                Return Me.daysTakenField
            End Get
            Set
                Me.daysTakenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentList() As String
            Get
                Return Me.departmentListField
            End Get
            Set
                Me.departmentListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoginWindows() As String
            Get
                Return Me.loginWindowsField
            End Get
            Set
                Me.loginWindowsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeGradeCode() As String
            Get
                Return Me.employeeGradeCodeField
            End Get
            Set
                Me.employeeGradeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescriptionCode() As String
            Get
                Return Me.employeeJobDescriptionCodeField
            End Get
            Set
                Me.employeeJobDescriptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeStatisticalCode() As String
            Get
                Return Me.employeeStatisticalCodeField
            End Get
            Set
                Me.employeeStatisticalCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCostCenterCode() As String
            Get
                Return Me.employeeCostCenterCodeField
            End Get
            Set
                Me.employeeCostCenterCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentLocation() As String
            Get
                Return Me.departmentLocationField
            End Get
            Set
                Me.departmentLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WeeklyWorkingHours() As System.Nullable(Of Decimal)
            Get
                Return Me.weeklyWorkingHoursField
            End Get
            Set
                Me.weeklyWorkingHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DailyWorkingHours() As System.Nullable(Of Decimal)
            Get
                Return Me.dailyWorkingHoursField
            End Get
            Set
                Me.dailyWorkingHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDate() As Date
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDateString() As String
            Get
                Return Me.birthDateStringField
            End Get
            Set
                Me.birthDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmploymentDate() As Date
            Get
                Return Me.employmentDateField
            End Get
            Set
                Me.employmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmploymentDateString() As String
            Get
                Return Me.employmentDateStringField
            End Get
            Set
                Me.employmentDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DateOfClassification() As System.Nullable(Of Date)
            Get
                Return Me.dateOfClassificationField
            End Get
            Set
                Me.dateOfClassificationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateOfClassificationString() As String
            Get
                Return Me.dateOfClassificationStringField
            End Get
            Set
                Me.dateOfClassificationStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddress() As AddressBO
            Get
                Return Me.mainAddressField
            End Get
            Set
                Me.mainAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCode() As String
            Get
                Return Me.postCodeField
            End Get
            Set
                Me.postCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBox() As String
            Get
                Return Me.pOBoxField
            End Get
            Set
                Me.pOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxPostCode() As String
            Get
                Return Me.pOBoxPostCodeField
            End Get
            Set
                Me.pOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvince() As String
            Get
                Return Me.districtProvinceField
            End Get
            Set
                Me.districtProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCode() As String
            Get
                Return Me.countryISOCodeField
            End Get
            Set
                Me.countryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo() As String
            Get
                Return Me.phoneNoField
            End Get
            Set
                Me.phoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo2() As String
            Get
                Return Me.phoneNo2Field
            End Get
            Set
                Me.phoneNo2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxNo() As String
            Get
                Return Me.faxNoField
            End Get
            Set
                Me.faxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhone() As String
            Get
                Return Me.carPhoneField
            End Get
            Set
                Me.carPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePage() As String
            Get
                Return Me.homePageField
            End Get
            Set
                Me.homePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Addresses() As AddressBO()
            Get
                Return Me.addressesField
            End Get
            Set
                Me.addressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCodeAlternative() As String
            Get
                Return Me.postCodeAlternativeField
            End Get
            Set
                Me.postCodeAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxAlternative() As String
            Get
                Return Me.pOBoxAlternativeField
            End Get
            Set
                Me.pOBoxAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxPostCodeAlternative() As String
            Get
                Return Me.pOBoxPostCodeAlternativeField
            End Get
            Set
                Me.pOBoxPostCodeAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CityAlternative() As String
            Get
                Return Me.cityAlternativeField
            End Get
            Set
                Me.cityAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvinceAlternative() As String
            Get
                Return Me.districtProvinceAlternativeField
            End Get
            Set
                Me.districtProvinceAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCodeAlternative() As String
            Get
                Return Me.countryISOCodeAlternativeField
            End Get
            Set
                Me.countryISOCodeAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNoAlternative() As String
            Get
                Return Me.phoneNoAlternativeField
            End Get
            Set
                Me.phoneNoAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo2Alternative() As String
            Get
                Return Me.phoneNo2AlternativeField
            End Get
            Set
                Me.phoneNo2AlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxNoAlternative() As String
            Get
                Return Me.faxNoAlternativeField
            End Get
            Set
                Me.faxNoAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhoneAlternative() As String
            Get
                Return Me.mobilePhoneAlternativeField
            End Get
            Set
                Me.mobilePhoneAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhoneAlternative() As String
            Get
                Return Me.carPhoneAlternativeField
            End Get
            Set
                Me.carPhoneAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMailAlternative() As String
            Get
                Return Me.eMailAlternativeField
            End Get
            Set
                Me.eMailAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePageAlternative() As String
            Get
                Return Me.homePageAlternativeField
            End Get
            Set
                Me.homePageAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatIDAlternative() As String
            Get
                Return Me.onlineChatIDAlternativeField
            End Get
            Set
                Me.onlineChatIDAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SocialSecurityNo() As String
            Get
                Return Me.socialSecurityNoField
            End Get
            Set
                Me.socialSecurityNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnionMembershipNo() As String
            Get
                Return Me.unionMembershipNoField
            End Get
            Set
                Me.unionMembershipNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IdentityCardDateofIssue() As System.Nullable(Of Date)
            Get
                Return Me.identityCardDateofIssueField
            End Get
            Set
                Me.identityCardDateofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardPlaceofIssue() As String
            Get
                Return Me.identityCardPlaceofIssueField
            End Get
            Set
                Me.identityCardPlaceofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardIssuedBy() As String
            Get
                Return Me.identityCardIssuedByField
            End Get
            Set
                Me.identityCardIssuedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IdentityCardExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.identityCardExpiryDateField
            End Get
            Set
                Me.identityCardExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportNo() As String
            Get
                Return Me.passportNoField
            End Get
            Set
                Me.passportNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PassportDateofIssue() As System.Nullable(Of Date)
            Get
                Return Me.passportDateofIssueField
            End Get
            Set
                Me.passportDateofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportDateofIssueString() As String
            Get
                Return Me.passportDateofIssueStringField
            End Get
            Set
                Me.passportDateofIssueStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportPlaceofIssue() As String
            Get
                Return Me.passportPlaceofIssueField
            End Get
            Set
                Me.passportPlaceofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportIssuedBy() As String
            Get
                Return Me.passportIssuedByField
            End Get
            Set
                Me.passportIssuedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PassportExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.passportExpiryDateField
            End Get
            Set
                Me.passportExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportExpiryDateString() As String
            Get
                Return Me.passportExpiryDateStringField
            End Get
            Set
                Me.passportExpiryDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IncomeTaxNo() As String
            Get
                Return Me.incomeTaxNoField
            End Get
            Set
                Me.incomeTaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescription() As String
            Get
                Return Me.employeeJobDescriptionField
            End Get
            Set
                Me.employeeJobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkTelephoneExtension() As String
            Get
                Return Me.workTelephoneExtensionField
            End Get
            Set
                Me.workTelephoneExtensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkIM() As String
            Get
                Return Me.workIMField
            End Get
            Set
                Me.workIMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkEMail() As String
            Get
                Return Me.workEMailField
            End Get
            Set
                Me.workEMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeManager() As String
            Get
                Return Me.employeeManagerField
            End Get
            Set
                Me.employeeManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeManagerCode() As String
            Get
                Return Me.employeeManagerCodeField
            End Get
            Set
                Me.employeeManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContractType() As String
            Get
                Return Me.employeeContractTypeField
            End Get
            Set
                Me.employeeContractTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContractTypeCode() As String
            Get
                Return Me.employeeContractTypeCodeField
            End Get
            Set
                Me.employeeContractTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentFrequency() As String
            Get
                Return Me.paymentFrequencyField
            End Get
            Set
                Me.paymentFrequencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrencyID() As String
            Get
                Return Me.currencyIDField
            End Get
            Set
                Me.currencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NationalityCountryISOCode() As String
            Get
                Return Me.nationalityCountryISOCodeField
            End Get
            Set
                Me.nationalityCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountryISOName() As String
            Get
                Return Me.nationalityCountryISONameField
            End Get
            Set
                Me.nationalityCountryISONameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FathersName() As String
            Get
                Return Me.fathersNameField
            End Get
            Set
                Me.fathersNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MothersName() As String
            Get
                Return Me.mothersNameField
            End Get
            Set
                Me.mothersNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeUnion() As String
            Get
                Return Me.employeeUnionField
            End Get
            Set
                Me.employeeUnionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeUnionCode() As String
            Get
                Return Me.employeeUnionCodeField
            End Get
            Set
                Me.employeeUnionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PayrollNo() As String
            Get
                Return Me.payrollNoField
            End Get
            Set
                Me.payrollNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankName() As String
            Get
                Return Me.bankNameField
            End Get
            Set
                Me.bankNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankBranch() As String
            Get
                Return Me.bankBranchField
            End Get
            Set
                Me.bankBranchField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountNo() As String
            Get
                Return Me.bankAccountNoField
            End Get
            Set
                Me.bankAccountNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IBAN() As String
            Get
                Return Me.iBANField
            End Get
            Set
                Me.iBANField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SWIFT() As String
            Get
                Return Me.sWIFTField
            End Get
            Set
                Me.sWIFTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAccountCode() As String
            Get
                Return Me.employeeAccountCodeField
            End Get
            Set
                Me.employeeAccountCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TerminationDate() As System.Nullable(Of Date)
            Get
                Return Me.terminationDateField
            End Get
            Set
                Me.terminationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TerminationDateString() As String
            Get
                Return Me.terminationDateStringField
            End Get
            Set
                Me.terminationDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TerminationComments() As String
            Get
                Return Me.terminationCommentsField
            End Get
            Set
                Me.terminationCommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TerminationAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.terminationAmountField
            End Get
            Set
                Me.terminationAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InactiveDate() As System.Nullable(Of Date)
            Get
                Return Me.inactiveDateField
            End Get
            Set
                Me.inactiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InactiveDateString() As String
            Get
                Return Me.inactiveDateStringField
            End Get
            Set
                Me.inactiveDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeGrade() As String
            Get
                Return Me.employeeGradeField
            End Get
            Set
                Me.employeeGradeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PreviousEmploymentMonths() As System.Nullable(Of Integer)
            Get
                Return Me.previousEmploymentMonthsField
            End Get
            Set
                Me.previousEmploymentMonthsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherPreviousEmploymentMonths() As System.Nullable(Of Integer)
            Get
                Return Me.otherPreviousEmploymentMonthsField
            End Get
            Set
                Me.otherPreviousEmploymentMonthsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FTEquivalent() As System.Nullable(Of Decimal)
            Get
                Return Me.fTEquivalentField
            End Get
            Set
                Me.fTEquivalentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionCode() As String
            Get
                Return Me.positionCodeField
            End Get
            Set
                Me.positionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PositionDate() As System.Nullable(Of Date)
            Get
                Return Me.positionDateField
            End Get
            Set
                Me.positionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionDateString() As String
            Get
                Return Me.positionDateStringField
            End Get
            Set
                Me.positionDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantReference() As String
            Get
                Return Me.applicantReferenceField
            End Get
            Set
                Me.applicantReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalaryAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryAmountField
            End Get
            Set
                Me.currentSalaryAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryType() As String
            Get
                Return Me.salaryTypeField
            End Get
            Set
                Me.salaryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryLastUpdated() As System.Nullable(Of Date)
            Get
                Return Me.salaryLastUpdatedField
            End Get
            Set
                Me.salaryLastUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SalaryLastUpdatedString() As String
            Get
                Return Me.salaryLastUpdatedStringField
            End Get
            Set
                Me.salaryLastUpdatedStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowToAccessSubordinates() As Boolean
            Get
                Return Me.allowToAccessSubordinatesField
            End Get
            Set
                Me.allowToAccessSubordinatesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ContractExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.contractExpiryDateField
            End Get
            Set
                Me.contractExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalance() As Decimal
            Get
                Return Me.cFBalanceField
            End Get
            Set
                Me.cFBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entitled() As Decimal
            Get
                Return Me.entitledField
            End Get
            Set
                Me.entitledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Used() As Decimal
            Get
                Return Me.usedField
            End Get
            Set
                Me.usedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Requested() As Decimal
            Get
                Return Me.requestedField
            End Get
            Set
                Me.requestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Approved() As Decimal
            Get
                Return Me.approvedField
            End Get
            Set
                Me.approvedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailable() As Decimal
            Get
                Return Me.totalAvailableField
            End Get
            Set
                Me.totalAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Balance() As Decimal
            Get
                Return Me.balanceField
            End Get
            Set
                Me.balanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Age() As Integer
            Get
                Return Me.ageField
            End Get
            Set
                Me.ageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property YearsOfService() As Integer
            Get
                Return Me.yearsOfServiceField
            End Get
            Set
                Me.yearsOfServiceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationCode() As String
            Get
                Return Me.locationCodeField
            End Get
            Set
                Me.locationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LocationID() As System.Nullable(Of Integer)
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureID() As String
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Bradford() As Decimal
            Get
                Return Me.bradfordField
            End Get
            Set
                Me.bradfordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Appraisal() As Decimal
            Get
                Return Me.appraisalField
            End Get
            Set
                Me.appraisalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkPermitType() As String
            Get
                Return Me.workPermitTypeField
            End Get
            Set
                Me.workPermitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidRightToWork() As Boolean
            Get
                Return Me.validRightToWorkField
            End Get
            Set
                Me.validRightToWorkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkMobileNo() As String
            Get
                Return Me.workMobileNoField
            End Get
            Set
                Me.workMobileNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property KnownAs() As String
            Get
                Return Me.knownAsField
            End Get
            Set
                Me.knownAsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressedAs() As String
            Get
                Return Me.addressedAsField
            End Get
            Set
                Me.addressedAsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Ethnicity() As System.Nullable(Of Integer)
            Get
                Return Me.ethnicityField
            End Get
            Set
                Me.ethnicityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SexualOrientation() As System.Nullable(Of Integer)
            Get
                Return Me.sexualOrientationField
            End Get
            Set
                Me.sexualOrientationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportCountryCode() As String
            Get
                Return Me.passportCountryCodeField
            End Get
            Set
                Me.passportCountryCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DrivingLicenseNo() As String
            Get
                Return Me.drivingLicenseNoField
            End Get
            Set
                Me.drivingLicenseNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Disability() As System.Nullable(Of Integer)
            Get
                Return Me.disabilityField
            End Get
            Set
                Me.disabilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountName() As String
            Get
                Return Me.bankAccountNameField
            End Get
            Set
                Me.bankAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TaxCode() As System.Nullable(Of Integer)
            Get
                Return Me.taxCodeField
            End Get
            Set
                Me.taxCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaxCodeCode() As String
            Get
                Return Me.taxCodeCodeField
            End Get
            Set
                Me.taxCodeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaxCodeDescription() As String
            Get
                Return Me.taxCodeDescriptionField
            End Get
            Set
                Me.taxCodeDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EthnicityCode() As String
            Get
                Return Me.ethnicityCodeField
            End Get
            Set
                Me.ethnicityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EthnicityDescription() As String
            Get
                Return Me.ethnicityDescriptionField
            End Get
            Set
                Me.ethnicityDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SexualOrientationCode() As String
            Get
                Return Me.sexualOrientationCodeField
            End Get
            Set
                Me.sexualOrientationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SexualOrientationDescription() As String
            Get
                Return Me.sexualOrientationDescriptionField
            End Get
            Set
                Me.sexualOrientationDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisabilityCode() As String
            Get
                Return Me.disabilityCodeField
            End Get
            Set
                Me.disabilityCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisabilityDescription() As String
            Get
                Return Me.disabilityDescriptionField
            End Get
            Set
                Me.disabilityDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAbsences() As EmployeeAbsenceWSI()
            Get
                Return Me.employeeAbsencesField
            End Get
            Set
                Me.employeeAbsencesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AbsenceRequests() As AbsenceRequestWSI()
            Get
                Return Me.absenceRequestsField
            End Get
            Set
                Me.absenceRequestsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFields() As EmployeeUserField()
            Get
                Return Me.userFieldsField
            End Get
            Set
                Me.userFieldsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Dimensions() As EmployeeDimension()
            Get
                Return Me.dimensionsField
            End Get
            Set
                Me.dimensionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeQualifications() As EmployeeQualificationWSI()
            Get
                Return Me.employeeQualificationsField
            End Get
            Set
                Me.employeeQualificationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeRelatives() As EmployeeRelativeWSI()
            Get
                Return Me.employeeRelativesField
            End Get
            Set
                Me.employeeRelativesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeNextOfKin() As EmployeeRelativeWSI
            Get
                Return Me.employeeNextOfKinField
            End Get
            Set
                Me.employeeNextOfKinField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeEducations() As EmployeeEducationWSI()
            Get
                Return Me.employeeEducationsField
            End Get
            Set
                Me.employeeEducationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeReferences() As EmployeeReferenceWSI()
            Get
                Return Me.employeeReferencesField
            End Get
            Set
                Me.employeeReferencesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeBenefits() As EmployeeBenefitWSI()
            Get
                Return Me.employeeBenefitsField
            End Get
            Set
                Me.employeeBenefitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAssignedArticles() As EmployeeAssignedArticleWSI()
            Get
                Return Me.employeeAssignedArticlesField
            End Get
            Set
                Me.employeeAssignedArticlesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeePastExperience() As EmployeePastExperienceWSI()
            Get
                Return Me.employeePastExperienceField
            End Get
            Set
                Me.employeePastExperienceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAffiliations() As EmployeeAffiliationWSI()
            Get
                Return Me.employeeAffiliationsField
            End Get
            Set
                Me.employeeAffiliationsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeTrainings() As EmployeeTrainingWSI()
            Get
                Return Me.employeeTrainingsField
            End Get
            Set
                Me.employeeTrainingsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionAssignments() As PositionAssignmentWSI()
            Get
                Return Me.positionAssignmentsField
            End Get
            Set
                Me.positionAssignmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeDocuments() As DocumentWSI()
            Get
                Return Me.employeeDocumentsField
            End Get
            Set
                Me.employeeDocumentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeePictures() As PictureWSI()
            Get
                Return Me.employeePicturesField
            End Get
            Set
                Me.employeePicturesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class AbsenceRequestWSI
        
        Private absenceRequestIDField As Integer
        
        Private causeOfAbsenceCodeField As String
        
        Private unitOfMeasureCodeField As String
        
        Private causeOfAbsenceField As String
        
        Private descriptionField As String
        
        Private descriptionIDField As String
        
        Private documentNoField As String
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private quantityField As Decimal
        
        Private unitOfMeasureField As String
        
        Private quantityBaseField As Decimal
        
        Private qtyPerUnitOfMeasureField As Decimal
        
        Private entryDateField As Date
        
        Private requestStatusField As String
        
        Private completionStatusField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private cFBalanceField As Decimal
        
        Private entitledField As Decimal
        
        Private requestedField As Decimal
        
        Private usedField As Decimal
        
        Private totalAvailableField As Decimal
        
        Private balanceField As Decimal
        
        Private needSubmitField As Boolean
        
        Private employeeCodeField As String
        
        Private userFieldsField() As EmployeeUserField
        
        '''<remarks/>
        Public Property AbsenceRequestID() As Integer
            Get
                Return Me.absenceRequestIDField
            End Get
            Set
                Me.absenceRequestIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsenceCode() As String
            Get
                Return Me.causeOfAbsenceCodeField
            End Get
            Set
                Me.causeOfAbsenceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsence() As String
            Get
                Return Me.causeOfAbsenceField
            End Get
            Set
                Me.causeOfAbsenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasure() As String
            Get
                Return Me.unitOfMeasureField
            End Get
            Set
                Me.unitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuantityBase() As Decimal
            Get
                Return Me.quantityBaseField
            End Get
            Set
                Me.quantityBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QtyPerUnitOfMeasure() As Decimal
            Get
                Return Me.qtyPerUnitOfMeasureField
            End Get
            Set
                Me.qtyPerUnitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryDate() As Date
            Get
                Return Me.entryDateField
            End Get
            Set
                Me.entryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestStatus() As String
            Get
                Return Me.requestStatusField
            End Get
            Set
                Me.requestStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompletionStatus() As String
            Get
                Return Me.completionStatusField
            End Get
            Set
                Me.completionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CFBalance() As Decimal
            Get
                Return Me.cFBalanceField
            End Get
            Set
                Me.cFBalanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Entitled() As Decimal
            Get
                Return Me.entitledField
            End Get
            Set
                Me.entitledField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Requested() As Decimal
            Get
                Return Me.requestedField
            End Get
            Set
                Me.requestedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Used() As Decimal
            Get
                Return Me.usedField
            End Get
            Set
                Me.usedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalAvailable() As Decimal
            Get
                Return Me.totalAvailableField
            End Get
            Set
                Me.totalAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Balance() As Decimal
            Get
                Return Me.balanceField
            End Get
            Set
                Me.balanceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NeedSubmit() As Boolean
            Get
                Return Me.needSubmitField
            End Get
            Set
                Me.needSubmitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserFields() As EmployeeUserField()
            Get
                Return Me.userFieldsField
            End Get
            Set
                Me.userFieldsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DocumentWSI
        
        Private startDateField As Date
        
        Private commentsField As String
        
        Private documentIDField As Integer
        
        Private ownerGUIDField As String
        
        Private ownerCodeField As String
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private documentFolderIDField As System.Nullable(Of Integer)
        
        Private documentFolderField As String
        
        Private documentTypeField As String
        
        Private documentField() As Byte
        
        Private documentPreviewLinkField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentID() As Integer
            Get
                Return Me.documentIDField
            End Get
            Set
                Me.documentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OwnerGUID() As String
            Get
                Return Me.ownerGUIDField
            End Get
            Set
                Me.ownerGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OwnerCode() As String
            Get
                Return Me.ownerCodeField
            End Get
            Set
                Me.ownerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DocumentFolderID() As System.Nullable(Of Integer)
            Get
                Return Me.documentFolderIDField
            End Get
            Set
                Me.documentFolderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentFolder() As String
            Get
                Return Me.documentFolderField
            End Get
            Set
                Me.documentFolderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Document() As Byte()
            Get
                Return Me.documentField
            End Get
            Set
                Me.documentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentPreviewLink() As String
            Get
                Return Me.documentPreviewLinkField
            End Get
            Set
                Me.documentPreviewLinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class PictureWSI
        
        Private pictureTypeField As String
        
        Private pictureField() As Byte
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property PictureType() As String
            Get
                Return Me.pictureTypeField
            End Get
            Set
                Me.pictureTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Picture() As Byte()
            Get
                Return Me.pictureField
            End Get
            Set
                Me.pictureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class CostCentreWSI
        
        Private codeField As String
        
        Private notesField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeICTItemWSI
        
        Private employeeICTItemIDField As Integer
        
        Private employeeCodeField As String
        
        Private nameField As String
        
        Private departmentField As String
        
        Private typeField As String
        
        Private categoryField As String
        
        Private descriptionField As String
        
        Private codeField As String
        
        Private versionField As String
        
        Private serialNoField As String
        
        Private installationDateField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private notesField As String
        
        Private businessEntityIdField As Integer
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property EmployeeICTItemID() As Integer
            Get
                Return Me.employeeICTItemIDField
            End Get
            Set
                Me.employeeICTItemIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Category() As String
            Get
                Return Me.categoryField
            End Get
            Set
                Me.categoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Version() As String
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SerialNo() As String
            Get
                Return Me.serialNoField
            End Get
            Set
                Me.serialNoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InstallationDate() As System.Nullable(Of Date)
            Get
                Return Me.installationDateField
            End Get
            Set
                Me.installationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessEntityId() As Integer
            Get
                Return Me.businessEntityIdField
            End Get
            Set
                Me.businessEntityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class DocumentFolderWSI
        
        Private documentFolderIDField As Integer
        
        Private parentDocumentFolderIDField As System.Nullable(Of Integer)
        
        Private gUIDField As String
        
        Private descriptionField As String
        
        Private notesField As String
        
        Private fullPathField As String
        
        Private expiresOnField As System.Nullable(Of Date)
        
        Private releaseDateField As System.Nullable(Of Date)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property DocumentFolderID() As Integer
            Get
                Return Me.documentFolderIDField
            End Get
            Set
                Me.documentFolderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ParentDocumentFolderID() As System.Nullable(Of Integer)
            Get
                Return Me.parentDocumentFolderIDField
            End Get
            Set
                Me.parentDocumentFolderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GUID() As String
            Get
                Return Me.gUIDField
            End Get
            Set
                Me.gUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullPath() As String
            Get
                Return Me.fullPathField
            End Get
            Set
                Me.fullPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExpiresOn() As System.Nullable(Of Date)
            Get
                Return Me.expiresOnField
            End Get
            Set
                Me.expiresOnField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReleaseDate() As System.Nullable(Of Date)
            Get
                Return Me.releaseDateField
            End Get
            Set
                Me.releaseDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalTrainingNeedPostWSI
        
        Private employeeAppraisalTrainingNeedIDField As Integer
        
        Private courseSubjectIDField As Integer
        
        Private detailsField As String
        
        Private dueDateField As Date
        
        '''<remarks/>
        Public Property EmployeeAppraisalTrainingNeedID() As Integer
            Get
                Return Me.employeeAppraisalTrainingNeedIDField
            End Get
            Set
                Me.employeeAppraisalTrainingNeedIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseSubjectID() As Integer
            Get
                Return Me.courseSubjectIDField
            End Get
            Set
                Me.courseSubjectIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Details() As String
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DueDate() As Date
            Get
                Return Me.dueDateField
            End Get
            Set
                Me.dueDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalTargetPostWSI
        
        Private employeeAppraisalTargetIDField As Integer
        
        Private achievementPercentField As Decimal
        
        Private statusField As String
        
        Private commentField As String
        
        '''<remarks/>
        Public Property EmployeeAppraisalTargetID() As Integer
            Get
                Return Me.employeeAppraisalTargetIDField
            End Get
            Set
                Me.employeeAppraisalTargetIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AchievementPercent() As Decimal
            Get
                Return Me.achievementPercentField
            End Get
            Set
                Me.achievementPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalWSI
        
        Private idField As Integer
        
        Private appraisalCodeField As String
        
        Private employeeField As String
        
        Private descriptionField As String
        
        Private descriptionIDField As String
        
        Private appraisalTemplateField As String
        
        Private appraisalDateField As Date
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private statusField As String
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalCode() As String
            Get
                Return Me.appraisalCodeField
            End Get
            Set
                Me.appraisalCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Employee() As String
            Get
                Return Me.employeeField
            End Get
            Set
                Me.employeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalTemplate() As String
            Get
                Return Me.appraisalTemplateField
            End Get
            Set
                Me.appraisalTemplateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalDate() As Date
            Get
                Return Me.appraisalDateField
            End Get
            Set
                Me.appraisalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalTrainingNeedWSI
        
        Private employeeIDField As Integer
        
        Private employeeAppraisalTrainingNeedIDField As Integer
        
        Private dueDateField As Date
        
        Private detailsField As String
        
        Private courseSubjectField As String
        
        Private courseSubjectIDField As Integer
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAppraisalTrainingNeedID() As Integer
            Get
                Return Me.employeeAppraisalTrainingNeedIDField
            End Get
            Set
                Me.employeeAppraisalTrainingNeedIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DueDate() As Date
            Get
                Return Me.dueDateField
            End Get
            Set
                Me.dueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Details() As String
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseSubject() As String
            Get
                Return Me.courseSubjectField
            End Get
            Set
                Me.courseSubjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseSubjectID() As Integer
            Get
                Return Me.courseSubjectIDField
            End Get
            Set
                Me.courseSubjectIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalTargetWSI
        
        Private unitOfMeasureIDField As System.Nullable(Of Integer)
        
        Private targetValueField As System.Nullable(Of Decimal)
        
        Private selfRatingCodeField As System.Nullable(Of Integer)
        
        Private ratingCodeField As System.Nullable(Of Integer)
        
        Private performanceFactorIDField As System.Nullable(Of Integer)
        
        Private employeeIDField As Integer
        
        Private employeeAppraisalIDField As System.Nullable(Of Integer)
        
        Private codeField As String
        
        Private categoryIDField As System.Nullable(Of Integer)
        
        Private approvalStatusField As String
        
        Private achievedValueField As System.Nullable(Of Decimal)
        
        Private employeeAppraisalTargetIDField As Integer
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private successCriteriaField As String
        
        Private dueDateField As Date
        
        Private achievementPercentField As Decimal
        
        Private commentField As String
        
        Private statusField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private toDateField As System.Nullable(Of Date)
        
        Private performanceGoalIDField As System.Nullable(Of Integer)
        
        Private weightField As System.Nullable(Of Integer)
        
        Private titleField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private noteField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnitOfMeasureID() As System.Nullable(Of Integer)
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TargetValue() As System.Nullable(Of Decimal)
            Get
                Return Me.targetValueField
            End Get
            Set
                Me.targetValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SelfRatingCode() As System.Nullable(Of Integer)
            Get
                Return Me.selfRatingCodeField
            End Get
            Set
                Me.selfRatingCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RatingCode() As System.Nullable(Of Integer)
            Get
                Return Me.ratingCodeField
            End Get
            Set
                Me.ratingCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PerformanceFactorID() As System.Nullable(Of Integer)
            Get
                Return Me.performanceFactorIDField
            End Get
            Set
                Me.performanceFactorIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeID() As Integer
            Get
                Return Me.employeeIDField
            End Get
            Set
                Me.employeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmployeeAppraisalID() As System.Nullable(Of Integer)
            Get
                Return Me.employeeAppraisalIDField
            End Get
            Set
                Me.employeeAppraisalIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CategoryID() As System.Nullable(Of Integer)
            Get
                Return Me.categoryIDField
            End Get
            Set
                Me.categoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovalStatus() As String
            Get
                Return Me.approvalStatusField
            End Get
            Set
                Me.approvalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AchievedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.achievedValueField
            End Get
            Set
                Me.achievedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAppraisalTargetID() As Integer
            Get
                Return Me.employeeAppraisalTargetIDField
            End Get
            Set
                Me.employeeAppraisalTargetIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SuccessCriteria() As String
            Get
                Return Me.successCriteriaField
            End Get
            Set
                Me.successCriteriaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DueDate() As Date
            Get
                Return Me.dueDateField
            End Get
            Set
                Me.dueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AchievementPercent() As Decimal
            Get
                Return Me.achievementPercentField
            End Get
            Set
                Me.achievementPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PerformanceGoalID() As System.Nullable(Of Integer)
            Get
                Return Me.performanceGoalIDField
            End Get
            Set
                Me.performanceGoalIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Weight() As System.Nullable(Of Integer)
            Get
                Return Me.weightField
            End Get
            Set
                Me.weightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Note() As String
            Get
                Return Me.noteField
            End Get
            Set
                Me.noteField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalQuestionPostWSI
        
        Private employeeAppraisalQuestionIDField As Integer
        
        Private appraiserResponseField As String
        
        Private selfResponseField As String
        
        '''<remarks/>
        Public Property EmployeeAppraisalQuestionID() As Integer
            Get
                Return Me.employeeAppraisalQuestionIDField
            End Get
            Set
                Me.employeeAppraisalQuestionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraiserResponse() As String
            Get
                Return Me.appraiserResponseField
            End Get
            Set
                Me.appraiserResponseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelfResponse() As String
            Get
                Return Me.selfResponseField
            End Get
            Set
                Me.selfResponseField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalCompetencyPostWSI
        
        Private employeeAppraisalCompetencyIDField As Integer
        
        Private markField As Integer
        
        Private selfMarkField As Integer
        
        Private commentField As String
        
        '''<remarks/>
        Public Property EmployeeAppraisalCompetencyID() As Integer
            Get
                Return Me.employeeAppraisalCompetencyIDField
            End Get
            Set
                Me.employeeAppraisalCompetencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mark() As Integer
            Get
                Return Me.markField
            End Get
            Set
                Me.markField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelfMark() As Integer
            Get
                Return Me.selfMarkField
            End Get
            Set
                Me.selfMarkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalQuestionWSI
        
        Private employeeAppraisalQuestionIDField As Integer
        
        Private includeOnSelfAppraisalField As Boolean
        
        Private displayOrderField As Short
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private selfResponseField As String
        
        Private appraiserResponseField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private mandatoryField As Boolean
        
        '''<remarks/>
        Public Property EmployeeAppraisalQuestionID() As Integer
            Get
                Return Me.employeeAppraisalQuestionIDField
            End Get
            Set
                Me.employeeAppraisalQuestionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IncludeOnSelfAppraisal() As Boolean
            Get
                Return Me.includeOnSelfAppraisalField
            End Get
            Set
                Me.includeOnSelfAppraisalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayOrder() As Short
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelfResponse() As String
            Get
                Return Me.selfResponseField
            End Get
            Set
                Me.selfResponseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraiserResponse() As String
            Get
                Return Me.appraiserResponseField
            End Get
            Set
                Me.appraiserResponseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mandatory() As Boolean
            Get
                Return Me.mandatoryField
            End Get
            Set
                Me.mandatoryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalCompetencyWSI
        
        Private employeeAppraisalCompetencyIDField As Integer
        
        Private weightField As Integer
        
        Private displayOrderField As System.Nullable(Of Short)
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private markField As Integer
        
        Private selfMarkField As Integer
        
        Private commentField As String
        
        Private selfCommentField As String
        
        Private competencyGroupField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private includeOnSelfAppraisalField As Boolean
        
        Private mandatoryField As Boolean
        
        '''<remarks/>
        Public Property EmployeeAppraisalCompetencyID() As Integer
            Get
                Return Me.employeeAppraisalCompetencyIDField
            End Get
            Set
                Me.employeeAppraisalCompetencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Weight() As Integer
            Get
                Return Me.weightField
            End Get
            Set
                Me.weightField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DisplayOrder() As System.Nullable(Of Short)
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mark() As Integer
            Get
                Return Me.markField
            End Get
            Set
                Me.markField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelfMark() As Integer
            Get
                Return Me.selfMarkField
            End Get
            Set
                Me.selfMarkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelfComment() As String
            Get
                Return Me.selfCommentField
            End Get
            Set
                Me.selfCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompetencyGroup() As String
            Get
                Return Me.competencyGroupField
            End Get
            Set
                Me.competencyGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IncludeOnSelfAppraisal() As Boolean
            Get
                Return Me.includeOnSelfAppraisalField
            End Get
            Set
                Me.includeOnSelfAppraisalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mandatory() As Boolean
            Get
                Return Me.mandatoryField
            End Get
            Set
                Me.mandatoryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeAppraisalFullWSI
        
        Private isForwardedField As Boolean
        
        Private competencyCommentsRequiredField As Boolean
        
        Private allowToEditField As Boolean
        
        Private appraiserEmployeeIDField As System.Nullable(Of Integer)
        
        Private showFutureGoalsField As Boolean
        
        Private showGoalsField As Boolean
        
        Private showTrainingNeedsField As Boolean
        
        Private showQuestionsField As Boolean
        
        Private showCompetenciesField As Boolean
        
        Private trainingNeedsHeadingField As String
        
        Private futureGoalsHeadingField As String
        
        Private goalsHeadingField As String
        
        Private questionsHeadingField As String
        
        Private allowEmptyRatingField As Boolean
        
        Private appraisalCodeField As String
        
        Private employeeField As String
        
        Private employeeDepartmentField As String
        
        Private employeeGradeField As String
        
        Private employeeBirthDateField As Date
        
        Private employeeManagerField As String
        
        Private employeeJobDescriptionField As String
        
        Private employeeEmploymentDateField As Date
        
        Private competencyAverageField As Decimal
        
        Private targetAverageField As Decimal
        
        Private competencyWeightAverageField As Decimal
        
        Private overallRatingField As Decimal
        
        Private descriptionField As String
        
        Private descriptionIDField As String
        
        Private appraisalTemplateField As String
        
        Private selfAppraisalCompletedField As Boolean
        
        Private appraisalDateField As Date
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private statusField As String
        
        Private notesField As String
        
        Private employeeCommentsField As String
        
        Private dateApprovedField As Date
        
        Private approvedByField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private competenciesField() As EmployeeAppraisalCompetencyWSI
        
        Private questionsField() As EmployeeAppraisalQuestionWSI
        
        Private postCompetenciesField() As EmployeeAppraisalCompetencyPostWSI
        
        Private postQuestionsField() As EmployeeAppraisalQuestionPostWSI
        
        Private targetsField() As EmployeeAppraisalTargetWSI
        
        Private prevTargetsField() As EmployeeAppraisalTargetWSI
        
        Private trainingNeedsField() As EmployeeAppraisalTrainingNeedWSI
        
        Private marksField() As AppraisalMarkingCodeWSI
        
        Private ratingMarksField() As AppraisalMarkingCodeWSI
        
        Private performanceGoalsField() As PerformanceGoalHelpBO
        
        Private performanceFactorsField() As PerformanceFactorHelpBO
        
        Private unitOfMeasuresField() As UnitOfMeasureBO
        
        '''<remarks/>
        Public Property IsForwarded() As Boolean
            Get
                Return Me.isForwardedField
            End Get
            Set
                Me.isForwardedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompetencyCommentsRequired() As Boolean
            Get
                Return Me.competencyCommentsRequiredField
            End Get
            Set
                Me.competencyCommentsRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowToEdit() As Boolean
            Get
                Return Me.allowToEditField
            End Get
            Set
                Me.allowToEditField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AppraiserEmployeeID() As System.Nullable(Of Integer)
            Get
                Return Me.appraiserEmployeeIDField
            End Get
            Set
                Me.appraiserEmployeeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowFutureGoals() As Boolean
            Get
                Return Me.showFutureGoalsField
            End Get
            Set
                Me.showFutureGoalsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowGoals() As Boolean
            Get
                Return Me.showGoalsField
            End Get
            Set
                Me.showGoalsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowTrainingNeeds() As Boolean
            Get
                Return Me.showTrainingNeedsField
            End Get
            Set
                Me.showTrainingNeedsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowQuestions() As Boolean
            Get
                Return Me.showQuestionsField
            End Get
            Set
                Me.showQuestionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowCompetencies() As Boolean
            Get
                Return Me.showCompetenciesField
            End Get
            Set
                Me.showCompetenciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrainingNeedsHeading() As String
            Get
                Return Me.trainingNeedsHeadingField
            End Get
            Set
                Me.trainingNeedsHeadingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FutureGoalsHeading() As String
            Get
                Return Me.futureGoalsHeadingField
            End Get
            Set
                Me.futureGoalsHeadingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GoalsHeading() As String
            Get
                Return Me.goalsHeadingField
            End Get
            Set
                Me.goalsHeadingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QuestionsHeading() As String
            Get
                Return Me.questionsHeadingField
            End Get
            Set
                Me.questionsHeadingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowEmptyRating() As Boolean
            Get
                Return Me.allowEmptyRatingField
            End Get
            Set
                Me.allowEmptyRatingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalCode() As String
            Get
                Return Me.appraisalCodeField
            End Get
            Set
                Me.appraisalCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Employee() As String
            Get
                Return Me.employeeField
            End Get
            Set
                Me.employeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeDepartment() As String
            Get
                Return Me.employeeDepartmentField
            End Get
            Set
                Me.employeeDepartmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeGrade() As String
            Get
                Return Me.employeeGradeField
            End Get
            Set
                Me.employeeGradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeBirthDate() As Date
            Get
                Return Me.employeeBirthDateField
            End Get
            Set
                Me.employeeBirthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeManager() As String
            Get
                Return Me.employeeManagerField
            End Get
            Set
                Me.employeeManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeJobDescription() As String
            Get
                Return Me.employeeJobDescriptionField
            End Get
            Set
                Me.employeeJobDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeEmploymentDate() As Date
            Get
                Return Me.employeeEmploymentDateField
            End Get
            Set
                Me.employeeEmploymentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompetencyAverage() As Decimal
            Get
                Return Me.competencyAverageField
            End Get
            Set
                Me.competencyAverageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TargetAverage() As Decimal
            Get
                Return Me.targetAverageField
            End Get
            Set
                Me.targetAverageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompetencyWeightAverage() As Decimal
            Get
                Return Me.competencyWeightAverageField
            End Get
            Set
                Me.competencyWeightAverageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OverallRating() As Decimal
            Get
                Return Me.overallRatingField
            End Get
            Set
                Me.overallRatingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalTemplate() As String
            Get
                Return Me.appraisalTemplateField
            End Get
            Set
                Me.appraisalTemplateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SelfAppraisalCompleted() As Boolean
            Get
                Return Me.selfAppraisalCompletedField
            End Get
            Set
                Me.selfAppraisalCompletedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraisalDate() As Date
            Get
                Return Me.appraisalDateField
            End Get
            Set
                Me.appraisalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeComments() As String
            Get
                Return Me.employeeCommentsField
            End Get
            Set
                Me.employeeCommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateApproved() As Date
            Get
                Return Me.dateApprovedField
            End Get
            Set
                Me.dateApprovedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovedBy() As String
            Get
                Return Me.approvedByField
            End Get
            Set
                Me.approvedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Competencies() As EmployeeAppraisalCompetencyWSI()
            Get
                Return Me.competenciesField
            End Get
            Set
                Me.competenciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Questions() As EmployeeAppraisalQuestionWSI()
            Get
                Return Me.questionsField
            End Get
            Set
                Me.questionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCompetencies() As EmployeeAppraisalCompetencyPostWSI()
            Get
                Return Me.postCompetenciesField
            End Get
            Set
                Me.postCompetenciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostQuestions() As EmployeeAppraisalQuestionPostWSI()
            Get
                Return Me.postQuestionsField
            End Get
            Set
                Me.postQuestionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Targets() As EmployeeAppraisalTargetWSI()
            Get
                Return Me.targetsField
            End Get
            Set
                Me.targetsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrevTargets() As EmployeeAppraisalTargetWSI()
            Get
                Return Me.prevTargetsField
            End Get
            Set
                Me.prevTargetsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrainingNeeds() As EmployeeAppraisalTrainingNeedWSI()
            Get
                Return Me.trainingNeedsField
            End Get
            Set
                Me.trainingNeedsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Marks() As AppraisalMarkingCodeWSI()
            Get
                Return Me.marksField
            End Get
            Set
                Me.marksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RatingMarks() As AppraisalMarkingCodeWSI()
            Get
                Return Me.ratingMarksField
            End Get
            Set
                Me.ratingMarksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PerformanceGoals() As PerformanceGoalHelpBO()
            Get
                Return Me.performanceGoalsField
            End Get
            Set
                Me.performanceGoalsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PerformanceFactors() As PerformanceFactorHelpBO()
            Get
                Return Me.performanceFactorsField
            End Get
            Set
                Me.performanceFactorsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasures() As UnitOfMeasureBO()
            Get
                Return Me.unitOfMeasuresField
            End Get
            Set
                Me.unitOfMeasuresField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantAppraisalQuestionPostWSI
        
        Private applicantAppraisalQuestionIDField As Integer
        
        Private appraiserResponseField As String
        
        '''<remarks/>
        Public Property ApplicantAppraisalQuestionID() As Integer
            Get
                Return Me.applicantAppraisalQuestionIDField
            End Get
            Set
                Me.applicantAppraisalQuestionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraiserResponse() As String
            Get
                Return Me.appraiserResponseField
            End Get
            Set
                Me.appraiserResponseField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantAppraisalCompetencyPostWSI
        
        Private applicantAppraisalCompetencyIDField As Integer
        
        Private markField As Integer
        
        Private commentField As String
        
        '''<remarks/>
        Public Property ApplicantAppraisalCompetencyID() As Integer
            Get
                Return Me.applicantAppraisalCompetencyIDField
            End Get
            Set
                Me.applicantAppraisalCompetencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mark() As Integer
            Get
                Return Me.markField
            End Get
            Set
                Me.markField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantAppraisalQuestionWSI
        
        Private applicantAppraisalQuestionIDField As Integer
        
        Private displayOrderField As Short
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private appraiserResponseField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property ApplicantAppraisalQuestionID() As Integer
            Get
                Return Me.applicantAppraisalQuestionIDField
            End Get
            Set
                Me.applicantAppraisalQuestionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayOrder() As Short
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppraiserResponse() As String
            Get
                Return Me.appraiserResponseField
            End Get
            Set
                Me.appraiserResponseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantAppraisalCompetencyWSI
        
        Private applicantAppraisalCompetencyIDField As Integer
        
        Private weightField As Integer
        
        Private displayOrderField As System.Nullable(Of Short)
        
        Private descriptionIDField As String
        
        Private descriptionField As String
        
        Private markField As Integer
        
        Private commentField As String
        
        Private competencyGroupField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property ApplicantAppraisalCompetencyID() As Integer
            Get
                Return Me.applicantAppraisalCompetencyIDField
            End Get
            Set
                Me.applicantAppraisalCompetencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Weight() As Integer
            Get
                Return Me.weightField
            End Get
            Set
                Me.weightField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property DisplayOrder() As System.Nullable(Of Short)
            Get
                Return Me.displayOrderField
            End Get
            Set
                Me.displayOrderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mark() As Integer
            Get
                Return Me.markField
            End Get
            Set
                Me.markField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompetencyGroup() As String
            Get
                Return Me.competencyGroupField
            End Get
            Set
                Me.competencyGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantAppraisalContainer
        
        Private competenciesField() As ApplicantAppraisalCompetencyWSI
        
        Private questionsField() As ApplicantAppraisalQuestionWSI
        
        Private marksField() As AppraisalMarkingCodeWSI
        
        '''<remarks/>
        Public Property Competencies() As ApplicantAppraisalCompetencyWSI()
            Get
                Return Me.competenciesField
            End Get
            Set
                Me.competenciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Questions() As ApplicantAppraisalQuestionWSI()
            Get
                Return Me.questionsField
            End Get
            Set
                Me.questionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Marks() As AppraisalMarkingCodeWSI()
            Get
                Return Me.marksField
            End Get
            Set
                Me.marksField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class EmployeeContactDetailsWSI
        
        Private pictureIDField As String
        
        Private idField As Integer
        
        Private departmentField As String
        
        Private departmentCodeField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private employeeCodeField As String
        
        Private initialsField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private jobTitleField As String
        
        Private genderField As String
        
        Private birthDateField As Date
        
        Private birthDateShortField As String
        
        Private statusField As String
        
        Private privacySettingField As String
        
        Private employmentDateField As Date
        
        Private mainAddressField As AddressBO
        
        Private companyNameField As String
        
        Private postCodeField As String
        
        Private pOBoxField As String
        
        Private pOBoxPostCodeField As String
        
        Private cityField As String
        
        Private districtProvinceField As String
        
        Private countryISOCodeField As String
        
        Private countryField As String
        
        Private phoneNoField As String
        
        Private phoneNo2Field As String
        
        Private faxNoField As String
        
        Private mobilePhoneField As String
        
        Private carPhoneField As String
        
        Private eMailField As String
        
        Private homePageField As String
        
        Private addressesField() As AddressBO
        
        Private postCodeAlternativeField As String
        
        Private pOBoxAlternativeField As String
        
        Private pOBoxPostCodeAlternativeField As String
        
        Private cityAlternativeField As String
        
        Private districtProvinceAlternativeField As String
        
        Private countryISOCodeAlternativeField As String
        
        Private phoneNoAlternativeField As String
        
        Private phoneNo2AlternativeField As String
        
        Private faxNoAlternativeField As String
        
        Private mobilePhoneAlternativeField As String
        
        Private carPhoneAlternativeField As String
        
        Private eMailAlternativeField As String
        
        Private homePageAlternativeField As String
        
        Private onlineChatIDAlternativeField As String
        
        Private workTelephoneExtensionField As String
        
        Private workIMField As String
        
        Private workEMailField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private employeePicturesField() As PictureWSI
        
        '''<remarks/>
        Public Property PictureID() As String
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDate() As Date
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDateShort() As String
            Get
                Return Me.birthDateShortField
            End Get
            Set
                Me.birthDateShortField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrivacySetting() As String
            Get
                Return Me.privacySettingField
            End Get
            Set
                Me.privacySettingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmploymentDate() As Date
            Get
                Return Me.employmentDateField
            End Get
            Set
                Me.employmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddress() As AddressBO
            Get
                Return Me.mainAddressField
            End Get
            Set
                Me.mainAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCode() As String
            Get
                Return Me.postCodeField
            End Get
            Set
                Me.postCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBox() As String
            Get
                Return Me.pOBoxField
            End Get
            Set
                Me.pOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxPostCode() As String
            Get
                Return Me.pOBoxPostCodeField
            End Get
            Set
                Me.pOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvince() As String
            Get
                Return Me.districtProvinceField
            End Get
            Set
                Me.districtProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCode() As String
            Get
                Return Me.countryISOCodeField
            End Get
            Set
                Me.countryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo() As String
            Get
                Return Me.phoneNoField
            End Get
            Set
                Me.phoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo2() As String
            Get
                Return Me.phoneNo2Field
            End Get
            Set
                Me.phoneNo2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxNo() As String
            Get
                Return Me.faxNoField
            End Get
            Set
                Me.faxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhone() As String
            Get
                Return Me.carPhoneField
            End Get
            Set
                Me.carPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePage() As String
            Get
                Return Me.homePageField
            End Get
            Set
                Me.homePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Addresses() As AddressBO()
            Get
                Return Me.addressesField
            End Get
            Set
                Me.addressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostCodeAlternative() As String
            Get
                Return Me.postCodeAlternativeField
            End Get
            Set
                Me.postCodeAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxAlternative() As String
            Get
                Return Me.pOBoxAlternativeField
            End Get
            Set
                Me.pOBoxAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POBoxPostCodeAlternative() As String
            Get
                Return Me.pOBoxPostCodeAlternativeField
            End Get
            Set
                Me.pOBoxPostCodeAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CityAlternative() As String
            Get
                Return Me.cityAlternativeField
            End Get
            Set
                Me.cityAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistrictProvinceAlternative() As String
            Get
                Return Me.districtProvinceAlternativeField
            End Get
            Set
                Me.districtProvinceAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryISOCodeAlternative() As String
            Get
                Return Me.countryISOCodeAlternativeField
            End Get
            Set
                Me.countryISOCodeAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNoAlternative() As String
            Get
                Return Me.phoneNoAlternativeField
            End Get
            Set
                Me.phoneNoAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneNo2Alternative() As String
            Get
                Return Me.phoneNo2AlternativeField
            End Get
            Set
                Me.phoneNo2AlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FaxNoAlternative() As String
            Get
                Return Me.faxNoAlternativeField
            End Get
            Set
                Me.faxNoAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhoneAlternative() As String
            Get
                Return Me.mobilePhoneAlternativeField
            End Get
            Set
                Me.mobilePhoneAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhoneAlternative() As String
            Get
                Return Me.carPhoneAlternativeField
            End Get
            Set
                Me.carPhoneAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMailAlternative() As String
            Get
                Return Me.eMailAlternativeField
            End Get
            Set
                Me.eMailAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePageAlternative() As String
            Get
                Return Me.homePageAlternativeField
            End Get
            Set
                Me.homePageAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatIDAlternative() As String
            Get
                Return Me.onlineChatIDAlternativeField
            End Get
            Set
                Me.onlineChatIDAlternativeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkTelephoneExtension() As String
            Get
                Return Me.workTelephoneExtensionField
            End Get
            Set
                Me.workTelephoneExtensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkIM() As String
            Get
                Return Me.workIMField
            End Get
            Set
                Me.workIMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkEMail() As String
            Get
                Return Me.workEMailField
            End Get
            Set
                Me.workEMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeePictures() As PictureWSI()
            Get
                Return Me.employeePicturesField
            End Get
            Set
                Me.employeePicturesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ProjectTaskWSI
        
        Private projectField As String
        
        Private projectCodeField As String
        
        Private departmentField As String
        
        Private projectManagerEmployeeField As String
        
        Private projectCategoryField As String
        
        Private taskSerialNumberField As Integer
        
        Private projectTaskIDField As Integer
        
        Private descriptionField As String
        
        Private wBSCodeField As String
        
        Private taskCategoryField As String
        
        Private taskPriorityField As String
        
        Private assignedToEmployeeField As String
        
        Private plannedStartDateField As System.Nullable(Of Date)
        
        Private plannedFinishDateField As System.Nullable(Of Date)
        
        Private actualStartDateField As System.Nullable(Of Date)
        
        Private actualFinishDateField As System.Nullable(Of Date)
        
        Private plannedUnitsField As System.Nullable(Of Decimal)
        
        Private unitOfMeasureField As String
        
        Private plannedUnitsPerUOMField As System.Nullable(Of Decimal)
        
        Private statusField As String
        
        Private isChargeableField As System.Nullable(Of Boolean)
        
        Private notesField As String
        
        Private plannedUnitsBaseField As System.Nullable(Of Decimal)
        
        Private plannedValueField As System.Nullable(Of Decimal)
        
        Private currencyField As String
        
        Private currencyRateField As System.Nullable(Of Decimal)
        
        Private plannedValueBaseField As System.Nullable(Of Decimal)
        
        Private earnedValueField As System.Nullable(Of Decimal)
        
        Private percentCompleteField As System.Nullable(Of Decimal)
        
        Private actualUnitsField As System.Nullable(Of Decimal)
        
        Private actualValueField As System.Nullable(Of Decimal)
        
        Private reEstimatedUnitsField As System.Nullable(Of Decimal)
        
        Private reEstimatedValueField As System.Nullable(Of Decimal)
        
        Private efficiencyPercentField As System.Nullable(Of Decimal)
        
        Private employeeExpenseCostField As System.Nullable(Of Decimal)
        
        Private otherCostField As System.Nullable(Of Decimal)
        
        Private deliverablesField As String
        
        Private allowAddTimeField As Boolean
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Project() As String
            Get
                Return Me.projectField
            End Get
            Set
                Me.projectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectCode() As String
            Get
                Return Me.projectCodeField
            End Get
            Set
                Me.projectCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectManagerEmployee() As String
            Get
                Return Me.projectManagerEmployeeField
            End Get
            Set
                Me.projectManagerEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectCategory() As String
            Get
                Return Me.projectCategoryField
            End Get
            Set
                Me.projectCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskSerialNumber() As Integer
            Get
                Return Me.taskSerialNumberField
            End Get
            Set
                Me.taskSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectTaskID() As Integer
            Get
                Return Me.projectTaskIDField
            End Get
            Set
                Me.projectTaskIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WBSCode() As String
            Get
                Return Me.wBSCodeField
            End Get
            Set
                Me.wBSCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskCategory() As String
            Get
                Return Me.taskCategoryField
            End Get
            Set
                Me.taskCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskPriority() As String
            Get
                Return Me.taskPriorityField
            End Get
            Set
                Me.taskPriorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssignedToEmployee() As String
            Get
                Return Me.assignedToEmployeeField
            End Get
            Set
                Me.assignedToEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedStartDate() As System.Nullable(Of Date)
            Get
                Return Me.plannedStartDateField
            End Get
            Set
                Me.plannedStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedFinishDate() As System.Nullable(Of Date)
            Get
                Return Me.plannedFinishDateField
            End Get
            Set
                Me.plannedFinishDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualStartDate() As System.Nullable(Of Date)
            Get
                Return Me.actualStartDateField
            End Get
            Set
                Me.actualStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualFinishDate() As System.Nullable(Of Date)
            Get
                Return Me.actualFinishDateField
            End Get
            Set
                Me.actualFinishDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedUnitsField
            End Get
            Set
                Me.plannedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasure() As String
            Get
                Return Me.unitOfMeasureField
            End Get
            Set
                Me.unitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedUnitsPerUOM() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedUnitsPerUOMField
            End Get
            Set
                Me.plannedUnitsPerUOMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IsChargeable() As System.Nullable(Of Boolean)
            Get
                Return Me.isChargeableField
            End Get
            Set
                Me.isChargeableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedUnitsBase() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedUnitsBaseField
            End Get
            Set
                Me.plannedUnitsBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedValueField
            End Get
            Set
                Me.plannedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrencyRate() As System.Nullable(Of Decimal)
            Get
                Return Me.currencyRateField
            End Get
            Set
                Me.currencyRateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedValueBase() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedValueBaseField
            End Get
            Set
                Me.plannedValueBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EarnedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.earnedValueField
            End Get
            Set
                Me.earnedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PercentComplete() As System.Nullable(Of Decimal)
            Get
                Return Me.percentCompleteField
            End Get
            Set
                Me.percentCompleteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.actualUnitsField
            End Get
            Set
                Me.actualUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualValue() As System.Nullable(Of Decimal)
            Get
                Return Me.actualValueField
            End Get
            Set
                Me.actualValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReEstimatedUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.reEstimatedUnitsField
            End Get
            Set
                Me.reEstimatedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReEstimatedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.reEstimatedValueField
            End Get
            Set
                Me.reEstimatedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EfficiencyPercent() As System.Nullable(Of Decimal)
            Get
                Return Me.efficiencyPercentField
            End Get
            Set
                Me.efficiencyPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmployeeExpenseCost() As System.Nullable(Of Decimal)
            Get
                Return Me.employeeExpenseCostField
            End Get
            Set
                Me.employeeExpenseCostField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherCost() As System.Nullable(Of Decimal)
            Get
                Return Me.otherCostField
            End Get
            Set
                Me.otherCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Deliverables() As String
            Get
                Return Me.deliverablesField
            End Get
            Set
                Me.deliverablesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowAddTime() As Boolean
            Get
                Return Me.allowAddTimeField
            End Get
            Set
                Me.allowAddTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TAEmployeeWSI
        
        Private employeeCodeField As String
        
        Private employeeFullNameField As String
        
        Private namePrefixField As String
        
        Private fatherNameField As String
        
        Private genderField As String
        
        Private identityCardNoField As String
        
        Private employmentDateField As Date
        
        Private departmentCodeField As String
        
        Private organizationalUnitField As String
        
        Private positionCodeField As String
        
        Private positionDescriptionField As String
        
        Private employeeContactTypesCodeField As String
        
        Private employeeContactTypesField As String
        
        Private locationCodeField As String
        
        Private locationField As String
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeFullName() As String
            Get
                Return Me.employeeFullNameField
            End Get
            Set
                Me.employeeFullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FatherName() As String
            Get
                Return Me.fatherNameField
            End Get
            Set
                Me.fatherNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmploymentDate() As Date
            Get
                Return Me.employmentDateField
            End Get
            Set
                Me.employmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrganizationalUnit() As String
            Get
                Return Me.organizationalUnitField
            End Get
            Set
                Me.organizationalUnitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionCode() As String
            Get
                Return Me.positionCodeField
            End Get
            Set
                Me.positionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PositionDescription() As String
            Get
                Return Me.positionDescriptionField
            End Get
            Set
                Me.positionDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContactTypesCode() As String
            Get
                Return Me.employeeContactTypesCodeField
            End Get
            Set
                Me.employeeContactTypesCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeContactTypes() As String
            Get
                Return Me.employeeContactTypesField
            End Get
            Set
                Me.employeeContactTypesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationCode() As String
            Get
                Return Me.locationCodeField
            End Get
            Set
                Me.locationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TAAbsenceRequestWSI
        
        Private employeeCodeField As String
        
        Private documentNoField As String
        
        Private causeOfAbsenceField As String
        
        Private causeOfAbsenceCodeField As String
        
        Private quantityField As Decimal
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private requestStatusField As String
        
        Private completionStatusField As String
        
        Private unitOfMeasureField As String
        
        Private unitOfMeasureCodeField As String
        
        Private submissionDateField As Date
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsence() As String
            Get
                Return Me.causeOfAbsenceField
            End Get
            Set
                Me.causeOfAbsenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CauseOfAbsenceCode() As String
            Get
                Return Me.causeOfAbsenceCodeField
            End Get
            Set
                Me.causeOfAbsenceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestStatus() As String
            Get
                Return Me.requestStatusField
            End Get
            Set
                Me.requestStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompletionStatus() As String
            Get
                Return Me.completionStatusField
            End Get
            Set
                Me.completionStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasure() As String
            Get
                Return Me.unitOfMeasureField
            End Get
            Set
                Me.unitOfMeasureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubmissionDate() As Date
            Get
                Return Me.submissionDateField
            End Get
            Set
                Me.submissionDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TrainingCourseWSI
        
        Private idField As Integer
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private courseTypeField As String
        
        Private courseSubjectField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private fromDateStringField As String
        
        Private toDateField As System.Nullable(Of Date)
        
        Private toDateStringField As String
        
        Private durationField As Decimal
        
        Private unitOfMeasureIDField As System.Nullable(Of Integer)
        
        Private unitOfMeasureCodeField As String
        
        Private durationPerUOMField As Decimal
        
        Private durationBaseField As Decimal
        
        Private institutionTrainerField As String
        
        Private locationField As String
        
        Private notesField As String
        
        Private budgetedCostField As Decimal
        
        Private actualCostField As Decimal
        
        Private subsidyAmountField As Decimal
        
        Private subsidyDetailsField As String
        
        Private trainingCourseParticipantsField As String
        
        Private trainingInstitutionField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseType() As String
            Get
                Return Me.courseTypeField
            End Get
            Set
                Me.courseTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CourseSubject() As String
            Get
                Return Me.courseSubjectField
            End Get
            Set
                Me.courseSubjectField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDateString() As String
            Get
                Return Me.fromDateStringField
            End Get
            Set
                Me.fromDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDateString() As String
            Get
                Return Me.toDateStringField
            End Get
            Set
                Me.toDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duration() As Decimal
            Get
                Return Me.durationField
            End Get
            Set
                Me.durationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnitOfMeasureID() As System.Nullable(Of Integer)
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DurationPerUOM() As Decimal
            Get
                Return Me.durationPerUOMField
            End Get
            Set
                Me.durationPerUOMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DurationBase() As Decimal
            Get
                Return Me.durationBaseField
            End Get
            Set
                Me.durationBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstitutionTrainer() As String
            Get
                Return Me.institutionTrainerField
            End Get
            Set
                Me.institutionTrainerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BudgetedCost() As Decimal
            Get
                Return Me.budgetedCostField
            End Get
            Set
                Me.budgetedCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ActualCost() As Decimal
            Get
                Return Me.actualCostField
            End Get
            Set
                Me.actualCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubsidyAmount() As Decimal
            Get
                Return Me.subsidyAmountField
            End Get
            Set
                Me.subsidyAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubsidyDetails() As String
            Get
                Return Me.subsidyDetailsField
            End Get
            Set
                Me.subsidyDetailsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrainingCourseParticipants() As String
            Get
                Return Me.trainingCourseParticipantsField
            End Get
            Set
                Me.trainingCourseParticipantsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TrainingInstitution() As String
            Get
                Return Me.trainingInstitutionField
            End Get
            Set
                Me.trainingInstitutionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ProjectEmployeeAssignmentWSI
        
        Private projectField As String
        
        Private employeeCodeField As String
        
        Private employeeNameField As String
        
        Private roleField As String
        
        Private taskPermissionField As String
        
        Private receiveNotificationsField As Boolean
        
        '''<remarks/>
        Public Property Project() As String
            Get
                Return Me.projectField
            End Get
            Set
                Me.projectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Role() As String
            Get
                Return Me.roleField
            End Get
            Set
                Me.roleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskPermission() As String
            Get
                Return Me.taskPermissionField
            End Get
            Set
                Me.taskPermissionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReceiveNotifications() As Boolean
            Get
                Return Me.receiveNotificationsField
            End Get
            Set
                Me.receiveNotificationsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ProjectWSI
        
        Private projectIDField As Integer
        
        Private codeField As String
        
        Private listEmployeeAssignmentsField() As ProjectEmployeeAssignmentWSI
        
        Private listProjectTasksField() As String
        
        Private descriptionField As String
        
        Private notesField As String
        
        Private departmentCodeField As String
        
        Private departmentField As String
        
        Private projectManagerEmployeeField As String
        
        Private plannedStartDateField As System.Nullable(Of Date)
        
        Private actualStartDateField As System.Nullable(Of Date)
        
        Private plannedFinishDateField As System.Nullable(Of Date)
        
        Private actualFinishDateField As System.Nullable(Of Date)
        
        Private plannedUnitsField As System.Nullable(Of Decimal)
        
        Private actualUnitsField As System.Nullable(Of Decimal)
        
        Private plannedValueField As System.Nullable(Of Decimal)
        
        Private actualValueField As System.Nullable(Of Decimal)
        
        Private deliverablesField As String
        
        Private percentCompleteField As System.Nullable(Of Decimal)
        
        Private earnedValueField As System.Nullable(Of Decimal)
        
        Private reEstimatedUnitsField As System.Nullable(Of Decimal)
        
        Private reEstimatedValueField As System.Nullable(Of Decimal)
        
        Private efficiencyPercentField As System.Nullable(Of Decimal)
        
        Private employeeExpenseCostField As System.Nullable(Of Decimal)
        
        Private otherCostField As System.Nullable(Of Decimal)
        
        Private plannedSumTaskUnitsField As System.Nullable(Of Decimal)
        
        Private plannedSumTaskValueField As System.Nullable(Of Decimal)
        
        Private statusField As String
        
        Private isTemplateField As Boolean
        
        Private isAvailableToAllField As Boolean
        
        Private categoryField As String
        
        Private customerField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private canBeChangedField As Boolean
        
        Private totalRowsField As Integer
        
        Private projectManagerCodeField As String
        
        Private customerCodeField As String
        
        '''<remarks/>
        Public Property ProjectID() As Integer
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListEmployeeAssignments() As ProjectEmployeeAssignmentWSI()
            Get
                Return Me.listEmployeeAssignmentsField
            End Get
            Set
                Me.listEmployeeAssignmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ListProjectTasks() As String()
            Get
                Return Me.listProjectTasksField
            End Get
            Set
                Me.listProjectTasksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectManagerEmployee() As String
            Get
                Return Me.projectManagerEmployeeField
            End Get
            Set
                Me.projectManagerEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedStartDate() As System.Nullable(Of Date)
            Get
                Return Me.plannedStartDateField
            End Get
            Set
                Me.plannedStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualStartDate() As System.Nullable(Of Date)
            Get
                Return Me.actualStartDateField
            End Get
            Set
                Me.actualStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedFinishDate() As System.Nullable(Of Date)
            Get
                Return Me.plannedFinishDateField
            End Get
            Set
                Me.plannedFinishDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualFinishDate() As System.Nullable(Of Date)
            Get
                Return Me.actualFinishDateField
            End Get
            Set
                Me.actualFinishDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedUnitsField
            End Get
            Set
                Me.plannedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.actualUnitsField
            End Get
            Set
                Me.actualUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedValueField
            End Get
            Set
                Me.plannedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ActualValue() As System.Nullable(Of Decimal)
            Get
                Return Me.actualValueField
            End Get
            Set
                Me.actualValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Deliverables() As String
            Get
                Return Me.deliverablesField
            End Get
            Set
                Me.deliverablesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PercentComplete() As System.Nullable(Of Decimal)
            Get
                Return Me.percentCompleteField
            End Get
            Set
                Me.percentCompleteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EarnedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.earnedValueField
            End Get
            Set
                Me.earnedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReEstimatedUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.reEstimatedUnitsField
            End Get
            Set
                Me.reEstimatedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReEstimatedValue() As System.Nullable(Of Decimal)
            Get
                Return Me.reEstimatedValueField
            End Get
            Set
                Me.reEstimatedValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EfficiencyPercent() As System.Nullable(Of Decimal)
            Get
                Return Me.efficiencyPercentField
            End Get
            Set
                Me.efficiencyPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EmployeeExpenseCost() As System.Nullable(Of Decimal)
            Get
                Return Me.employeeExpenseCostField
            End Get
            Set
                Me.employeeExpenseCostField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherCost() As System.Nullable(Of Decimal)
            Get
                Return Me.otherCostField
            End Get
            Set
                Me.otherCostField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedSumTaskUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedSumTaskUnitsField
            End Get
            Set
                Me.plannedSumTaskUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PlannedSumTaskValue() As System.Nullable(Of Decimal)
            Get
                Return Me.plannedSumTaskValueField
            End Get
            Set
                Me.plannedSumTaskValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsTemplate() As Boolean
            Get
                Return Me.isTemplateField
            End Get
            Set
                Me.isTemplateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsAvailableToAll() As Boolean
            Get
                Return Me.isAvailableToAllField
            End Get
            Set
                Me.isAvailableToAllField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Category() As String
            Get
                Return Me.categoryField
            End Get
            Set
                Me.categoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Customer() As String
            Get
                Return Me.customerField
            End Get
            Set
                Me.customerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanBeChanged() As Boolean
            Get
                Return Me.canBeChangedField
            End Get
            Set
                Me.canBeChangedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalRows() As Integer
            Get
                Return Me.totalRowsField
            End Get
            Set
                Me.totalRowsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectManagerCode() As String
            Get
                Return Me.projectManagerCodeField
            End Get
            Set
                Me.projectManagerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerCode() As String
            Get
                Return Me.customerCodeField
            End Get
            Set
                Me.customerCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class VacancyWSI
        
        Private surveyField As SurveyWSI
        
        Private vacancyIDField As Integer
        
        Private positionField As String
        
        Private jobTypeField As String
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private vacancyTypeField As String
        
        Private effectiveDateField As System.Nullable(Of Date)
        
        Private effectiveDateStringField As String
        
        Private closingDateField As System.Nullable(Of Date)
        
        Private closingDateStringField As String
        
        Private statusField As String
        
        Private numberRequiredField As System.Nullable(Of Integer)
        
        Private numberAppliedField As Integer
        
        Private numberAcceptedField As Integer
        
        Private notesField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private yearsExperienceField As System.Nullable(Of Integer)
        
        Private budgetedSalaryAmountField As System.Nullable(Of Decimal)
        
        Private educationLevelField As String
        
        Private vacancyCategoryField As String
        
        Private fulfilmentDateField As System.Nullable(Of Date)
        
        Private vacancyAgentField As String
        
        Private stageField As String
        
        Private recruitmentFeeField As System.Nullable(Of Decimal)
        
        Private feesSalaryPercentField As System.Nullable(Of Decimal)
        
        Private referenceField As String
        
        Private jobLocationField As String
        
        Private createdByEmployeeField As String
        
        Private assignedToField As String
        
        Private vacancyCategoryIDField As System.Nullable(Of Integer)
        
        '''<remarks/>
        Public Property Survey() As SurveyWSI
            Get
                Return Me.surveyField
            End Get
            Set
                Me.surveyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VacancyID() As Integer
            Get
                Return Me.vacancyIDField
            End Get
            Set
                Me.vacancyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobType() As String
            Get
                Return Me.jobTypeField
            End Get
            Set
                Me.jobTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VacancyType() As String
            Get
                Return Me.vacancyTypeField
            End Get
            Set
                Me.vacancyTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EffectiveDate() As System.Nullable(Of Date)
            Get
                Return Me.effectiveDateField
            End Get
            Set
                Me.effectiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveDateString() As String
            Get
                Return Me.effectiveDateStringField
            End Get
            Set
                Me.effectiveDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ClosingDate() As System.Nullable(Of Date)
            Get
                Return Me.closingDateField
            End Get
            Set
                Me.closingDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClosingDateString() As String
            Get
                Return Me.closingDateStringField
            End Get
            Set
                Me.closingDateStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NumberRequired() As System.Nullable(Of Integer)
            Get
                Return Me.numberRequiredField
            End Get
            Set
                Me.numberRequiredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumberApplied() As Integer
            Get
                Return Me.numberAppliedField
            End Get
            Set
                Me.numberAppliedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumberAccepted() As Integer
            Get
                Return Me.numberAcceptedField
            End Get
            Set
                Me.numberAcceptedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property YearsExperience() As System.Nullable(Of Integer)
            Get
                Return Me.yearsExperienceField
            End Get
            Set
                Me.yearsExperienceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BudgetedSalaryAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.budgetedSalaryAmountField
            End Get
            Set
                Me.budgetedSalaryAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EducationLevel() As String
            Get
                Return Me.educationLevelField
            End Get
            Set
                Me.educationLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VacancyCategory() As String
            Get
                Return Me.vacancyCategoryField
            End Get
            Set
                Me.vacancyCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FulfilmentDate() As System.Nullable(Of Date)
            Get
                Return Me.fulfilmentDateField
            End Get
            Set
                Me.fulfilmentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VacancyAgent() As String
            Get
                Return Me.vacancyAgentField
            End Get
            Set
                Me.vacancyAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Stage() As String
            Get
                Return Me.stageField
            End Get
            Set
                Me.stageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RecruitmentFee() As System.Nullable(Of Decimal)
            Get
                Return Me.recruitmentFeeField
            End Get
            Set
                Me.recruitmentFeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FeesSalaryPercent() As System.Nullable(Of Decimal)
            Get
                Return Me.feesSalaryPercentField
            End Get
            Set
                Me.feesSalaryPercentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reference() As String
            Get
                Return Me.referenceField
            End Get
            Set
                Me.referenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobLocation() As String
            Get
                Return Me.jobLocationField
            End Get
            Set
                Me.jobLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedByEmployee() As String
            Get
                Return Me.createdByEmployeeField
            End Get
            Set
                Me.createdByEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AssignedTo() As String
            Get
                Return Me.assignedToField
            End Get
            Set
                Me.assignedToField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VacancyCategoryID() As System.Nullable(Of Integer)
            Get
                Return Me.vacancyCategoryIDField
            End Get
            Set
                Me.vacancyCategoryIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class JobApplicationWSI
        
        Private descriptionIdField As String
        
        Private applicationReferenceField As String
        
        Private applicantNameField As String
        
        Private applicantTypeField As String
        
        Private applicantCodeField As String
        
        Private applicantCodeStringField As String
        
        Private applicationDateField As Date
        
        Private vacancyField As String
        
        Private interviewedByEmployeeField As String
        
        Private interviewScoreField As System.Nullable(Of Decimal)
        
        Private examScoreField As System.Nullable(Of Decimal)
        
        Private experienceScoreField As System.Nullable(Of Decimal)
        
        Private availabilityCommentField As String
        
        Private qualificationScoreField As System.Nullable(Of Decimal)
        
        Private otherScoreField As System.Nullable(Of Decimal)
        
        Private salaryExpectationField As System.Nullable(Of Decimal)
        
        Private currentSalaryField As System.Nullable(Of Decimal)
        
        Private applicationStatusField As String
        
        Private workStatusField As String
        
        Private availabilityInWeeksField As System.Nullable(Of Integer)
        
        Private nextInterviewDateTimeField As System.Nullable(Of Date)
        
        Private notesField As String
        
        Private applicantGUIDField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property DescriptionId() As String
            Get
                Return Me.descriptionIdField
            End Get
            Set
                Me.descriptionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationReference() As String
            Get
                Return Me.applicationReferenceField
            End Get
            Set
                Me.applicationReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantName() As String
            Get
                Return Me.applicantNameField
            End Get
            Set
                Me.applicantNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantType() As String
            Get
                Return Me.applicantTypeField
            End Get
            Set
                Me.applicantTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantCode() As String
            Get
                Return Me.applicantCodeField
            End Get
            Set
                Me.applicantCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantCodeString() As String
            Get
                Return Me.applicantCodeStringField
            End Get
            Set
                Me.applicantCodeStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationDate() As Date
            Get
                Return Me.applicationDateField
            End Get
            Set
                Me.applicationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Vacancy() As String
            Get
                Return Me.vacancyField
            End Get
            Set
                Me.vacancyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterviewedByEmployee() As String
            Get
                Return Me.interviewedByEmployeeField
            End Get
            Set
                Me.interviewedByEmployeeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property InterviewScore() As System.Nullable(Of Decimal)
            Get
                Return Me.interviewScoreField
            End Get
            Set
                Me.interviewScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExamScore() As System.Nullable(Of Decimal)
            Get
                Return Me.examScoreField
            End Get
            Set
                Me.examScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExperienceScore() As System.Nullable(Of Decimal)
            Get
                Return Me.experienceScoreField
            End Get
            Set
                Me.experienceScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AvailabilityComment() As String
            Get
                Return Me.availabilityCommentField
            End Get
            Set
                Me.availabilityCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property QualificationScore() As System.Nullable(Of Decimal)
            Get
                Return Me.qualificationScoreField
            End Get
            Set
                Me.qualificationScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherScore() As System.Nullable(Of Decimal)
            Get
                Return Me.otherScoreField
            End Get
            Set
                Me.otherScoreField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryExpectation() As System.Nullable(Of Decimal)
            Get
                Return Me.salaryExpectationField
            End Get
            Set
                Me.salaryExpectationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryField
            End Get
            Set
                Me.currentSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicationStatus() As String
            Get
                Return Me.applicationStatusField
            End Get
            Set
                Me.applicationStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkStatus() As String
            Get
                Return Me.workStatusField
            End Get
            Set
                Me.workStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AvailabilityInWeeks() As System.Nullable(Of Integer)
            Get
                Return Me.availabilityInWeeksField
            End Get
            Set
                Me.availabilityInWeeksField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NextInterviewDateTime() As System.Nullable(Of Date)
            Get
                Return Me.nextInterviewDateTimeField
            End Get
            Set
                Me.nextInterviewDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantGUID() As String
            Get
                Return Me.applicantGUIDField
            End Get
            Set
                Me.applicantGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ApplicantWSI
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private applicantCodeField As String
        
        Private initialsField As String
        
        Private genderField As String
        
        Private birthDateField As Date
        
        Private statusField As String
        
        Private pictureIDField As String
        
        Private registrationDateField As Date
        
        Private mainAddressFirstNameField As String
        
        Private mainAddressLastNameField As String
        
        Private mainAddressMiddleNameField As String
        
        Private mainAddressAddressLine1Field As String
        
        Private mainAddressAddressLine2Field As String
        
        Private mainAddressAddressLine3Field As String
        
        Private mainAddressCompanyNameField As String
        
        Private mainAddressPostCodeField As String
        
        Private mainAddressPOBoxField As String
        
        Private mainAddressPOBoxPostCodeField As String
        
        Private mainAddressCityField As String
        
        Private mainAddressDistrictProvinceField As String
        
        Private mainAddressCountryISOCodeField As String
        
        Private mainAddressPhoneNoField As String
        
        Private mainAddressPhoneNo2Field As String
        
        Private mainAddressFaxNoField As String
        
        Private mainAddressMobilePhoneField As String
        
        Private mainAddressCarPhoneField As String
        
        Private mainAddresseMailField As String
        
        Private mainAddressHomePageField As String
        
        Private mainAddressOnlineChatIDField As String
        
        Private maritalStatusField As String
        
        Private religionField As String
        
        Private languageField As String
        
        Private socialSecurityNoField As String
        
        Private passportPlaceofIssueField As String
        
        Private identityCardNoField As String
        
        Private passportNoField As String
        
        Private passportIssuedByField As String
        
        Private passportDateofIssueField As System.Nullable(Of Date)
        
        Private passportExpiryDateField As System.Nullable(Of Date)
        
        Private incomeTaxNoField As String
        
        Private nationalityCountryISOCodeField As String
        
        Private notesField As String
        
        Private industryField As String
        
        Private educationLevelField As String
        
        Private yearsExperienceField As System.Nullable(Of Decimal)
        
        Private occupationField As String
        
        Private salaryExpectationField As System.Nullable(Of Decimal)
        
        Private currentSalaryField As System.Nullable(Of Decimal)
        
        Private experienceOtherRolesField As String
        
        Private referredByField As String
        
        Private currentJobTitleField As String
        
        Private preferredCityField As String
        
        Private passwordField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private createdDateField As Date
        
        Private updatedDateField As Date
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApplicantCode() As String
            Get
                Return Me.applicantCodeField
            End Get
            Set
                Me.applicantCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BirthDate() As Date
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureID() As String
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RegistrationDate() As Date
            Get
                Return Me.registrationDateField
            End Get
            Set
                Me.registrationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressFirstName() As String
            Get
                Return Me.mainAddressFirstNameField
            End Get
            Set
                Me.mainAddressFirstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressLastName() As String
            Get
                Return Me.mainAddressLastNameField
            End Get
            Set
                Me.mainAddressLastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressMiddleName() As String
            Get
                Return Me.mainAddressMiddleNameField
            End Get
            Set
                Me.mainAddressMiddleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine1() As String
            Get
                Return Me.mainAddressAddressLine1Field
            End Get
            Set
                Me.mainAddressAddressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine2() As String
            Get
                Return Me.mainAddressAddressLine2Field
            End Get
            Set
                Me.mainAddressAddressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine3() As String
            Get
                Return Me.mainAddressAddressLine3Field
            End Get
            Set
                Me.mainAddressAddressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCompanyName() As String
            Get
                Return Me.mainAddressCompanyNameField
            End Get
            Set
                Me.mainAddressCompanyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPostCode() As String
            Get
                Return Me.mainAddressPostCodeField
            End Get
            Set
                Me.mainAddressPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPOBox() As String
            Get
                Return Me.mainAddressPOBoxField
            End Get
            Set
                Me.mainAddressPOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPOBoxPostCode() As String
            Get
                Return Me.mainAddressPOBoxPostCodeField
            End Get
            Set
                Me.mainAddressPOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCity() As String
            Get
                Return Me.mainAddressCityField
            End Get
            Set
                Me.mainAddressCityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressDistrictProvince() As String
            Get
                Return Me.mainAddressDistrictProvinceField
            End Get
            Set
                Me.mainAddressDistrictProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCountryISOCode() As String
            Get
                Return Me.mainAddressCountryISOCodeField
            End Get
            Set
                Me.mainAddressCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPhoneNo() As String
            Get
                Return Me.mainAddressPhoneNoField
            End Get
            Set
                Me.mainAddressPhoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPhoneNo2() As String
            Get
                Return Me.mainAddressPhoneNo2Field
            End Get
            Set
                Me.mainAddressPhoneNo2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressFaxNo() As String
            Get
                Return Me.mainAddressFaxNoField
            End Get
            Set
                Me.mainAddressFaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressMobilePhone() As String
            Get
                Return Me.mainAddressMobilePhoneField
            End Get
            Set
                Me.mainAddressMobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCarPhone() As String
            Get
                Return Me.mainAddressCarPhoneField
            End Get
            Set
                Me.mainAddressCarPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddresseMail() As String
            Get
                Return Me.mainAddresseMailField
            End Get
            Set
                Me.mainAddresseMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressHomePage() As String
            Get
                Return Me.mainAddressHomePageField
            End Get
            Set
                Me.mainAddressHomePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressOnlineChatID() As String
            Get
                Return Me.mainAddressOnlineChatIDField
            End Get
            Set
                Me.mainAddressOnlineChatIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SocialSecurityNo() As String
            Get
                Return Me.socialSecurityNoField
            End Get
            Set
                Me.socialSecurityNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportPlaceofIssue() As String
            Get
                Return Me.passportPlaceofIssueField
            End Get
            Set
                Me.passportPlaceofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportNo() As String
            Get
                Return Me.passportNoField
            End Get
            Set
                Me.passportNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportIssuedBy() As String
            Get
                Return Me.passportIssuedByField
            End Get
            Set
                Me.passportIssuedByField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PassportDateofIssue() As System.Nullable(Of Date)
            Get
                Return Me.passportDateofIssueField
            End Get
            Set
                Me.passportDateofIssueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PassportExpiryDate() As System.Nullable(Of Date)
            Get
                Return Me.passportExpiryDateField
            End Get
            Set
                Me.passportExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IncomeTaxNo() As String
            Get
                Return Me.incomeTaxNoField
            End Get
            Set
                Me.incomeTaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountryISOCode() As String
            Get
                Return Me.nationalityCountryISOCodeField
            End Get
            Set
                Me.nationalityCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Industry() As String
            Get
                Return Me.industryField
            End Get
            Set
                Me.industryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EducationLevel() As String
            Get
                Return Me.educationLevelField
            End Get
            Set
                Me.educationLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property YearsExperience() As System.Nullable(Of Decimal)
            Get
                Return Me.yearsExperienceField
            End Get
            Set
                Me.yearsExperienceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Occupation() As String
            Get
                Return Me.occupationField
            End Get
            Set
                Me.occupationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property SalaryExpectation() As System.Nullable(Of Decimal)
            Get
                Return Me.salaryExpectationField
            End Get
            Set
                Me.salaryExpectationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrentSalary() As System.Nullable(Of Decimal)
            Get
                Return Me.currentSalaryField
            End Get
            Set
                Me.currentSalaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExperienceOtherRoles() As String
            Get
                Return Me.experienceOtherRolesField
            End Get
            Set
                Me.experienceOtherRolesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferredBy() As String
            Get
                Return Me.referredByField
            End Get
            Set
                Me.referredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentJobTitle() As String
            Get
                Return Me.currentJobTitleField
            End Get
            Set
                Me.currentJobTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreferredCity() As String
            Get
                Return Me.preferredCityField
            End Get
            Set
                Me.preferredCityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDate() As Date
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedDate() As Date
            Get
                Return Me.updatedDateField
            End Get
            Set
                Me.updatedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class InsertContactObject
        
        Private typeField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private contactCodeField As String
        
        Private initialsField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private genderField As String
        
        Private birthDateField As System.Nullable(Of Date)
        
        Private anniversaryDateField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private maritalStatusField As String
        
        Private religionField As String
        
        Private socialSecurityNoField As String
        
        Private identityCardNoField As String
        
        Private passportNoField As String
        
        Private languageCodeField As String
        
        Private nationalityCountryISOCodeField As String
        
        Private mobilePhoneField As String
        
        Private workPhoneField As String
        
        Private carPhoneField As String
        
        Private eMailField As String
        
        Private homePageField As String
        
        Private onlineChatIDField As String
        
        Private notesField As String
        
        Private occupationCodeField As String
        
        Private currentCompanyField As String
        
        Private positionField As String
        
        Private industryCodeField As String
        
        Private interestedInCodeField As String
        
        Private defaultPhoneTypeField As String
        
        Private privacyStatusField As String
        
        Private mainAddressAddressLine1Field As String
        
        Private mainAddressAddressLine2Field As String
        
        Private mainAddressCompanyNameField As String
        
        Private mainAddressPostCodeField As String
        
        Private mainAddressPOBoxField As String
        
        Private mainAddressPOBoxPostCodeField As String
        
        Private mainAddressCityField As String
        
        Private mainAddressDistrictProvinceField As String
        
        Private mainAddressCountryISOCodeField As String
        
        Private mainAddressPhoneNoField As String
        
        Private mainAddressFaxNoField As String
        
        Private mainAddressMobilePhoneField As String
        
        Private mainAddresseMailField As String
        
        Private mainAddressHomePageField As String
        
        Private mainAddressOnlineChatIDField As String
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactCode() As String
            Get
                Return Me.contactCodeField
            End Get
            Set
                Me.contactCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BirthDate() As System.Nullable(Of Date)
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AnniversaryDate() As System.Nullable(Of Date)
            Get
                Return Me.anniversaryDateField
            End Get
            Set
                Me.anniversaryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SocialSecurityNo() As String
            Get
                Return Me.socialSecurityNoField
            End Get
            Set
                Me.socialSecurityNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportNo() As String
            Get
                Return Me.passportNoField
            End Get
            Set
                Me.passportNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LanguageCode() As String
            Get
                Return Me.languageCodeField
            End Get
            Set
                Me.languageCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountryISOCode() As String
            Get
                Return Me.nationalityCountryISOCodeField
            End Get
            Set
                Me.nationalityCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkPhone() As String
            Get
                Return Me.workPhoneField
            End Get
            Set
                Me.workPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhone() As String
            Get
                Return Me.carPhoneField
            End Get
            Set
                Me.carPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePage() As String
            Get
                Return Me.homePageField
            End Get
            Set
                Me.homePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatID() As String
            Get
                Return Me.onlineChatIDField
            End Get
            Set
                Me.onlineChatIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OccupationCode() As String
            Get
                Return Me.occupationCodeField
            End Get
            Set
                Me.occupationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentCompany() As String
            Get
                Return Me.currentCompanyField
            End Get
            Set
                Me.currentCompanyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IndustryCode() As String
            Get
                Return Me.industryCodeField
            End Get
            Set
                Me.industryCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterestedInCode() As String
            Get
                Return Me.interestedInCodeField
            End Get
            Set
                Me.interestedInCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultPhoneType() As String
            Get
                Return Me.defaultPhoneTypeField
            End Get
            Set
                Me.defaultPhoneTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrivacyStatus() As String
            Get
                Return Me.privacyStatusField
            End Get
            Set
                Me.privacyStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine1() As String
            Get
                Return Me.mainAddressAddressLine1Field
            End Get
            Set
                Me.mainAddressAddressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine2() As String
            Get
                Return Me.mainAddressAddressLine2Field
            End Get
            Set
                Me.mainAddressAddressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCompanyName() As String
            Get
                Return Me.mainAddressCompanyNameField
            End Get
            Set
                Me.mainAddressCompanyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPostCode() As String
            Get
                Return Me.mainAddressPostCodeField
            End Get
            Set
                Me.mainAddressPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPOBox() As String
            Get
                Return Me.mainAddressPOBoxField
            End Get
            Set
                Me.mainAddressPOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPOBoxPostCode() As String
            Get
                Return Me.mainAddressPOBoxPostCodeField
            End Get
            Set
                Me.mainAddressPOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCity() As String
            Get
                Return Me.mainAddressCityField
            End Get
            Set
                Me.mainAddressCityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressDistrictProvince() As String
            Get
                Return Me.mainAddressDistrictProvinceField
            End Get
            Set
                Me.mainAddressDistrictProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCountryISOCode() As String
            Get
                Return Me.mainAddressCountryISOCodeField
            End Get
            Set
                Me.mainAddressCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPhoneNo() As String
            Get
                Return Me.mainAddressPhoneNoField
            End Get
            Set
                Me.mainAddressPhoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressFaxNo() As String
            Get
                Return Me.mainAddressFaxNoField
            End Get
            Set
                Me.mainAddressFaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressMobilePhone() As String
            Get
                Return Me.mainAddressMobilePhoneField
            End Get
            Set
                Me.mainAddressMobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddresseMail() As String
            Get
                Return Me.mainAddresseMailField
            End Get
            Set
                Me.mainAddresseMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressHomePage() As String
            Get
                Return Me.mainAddressHomePageField
            End Get
            Set
                Me.mainAddressHomePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressOnlineChatID() As String
            Get
                Return Me.mainAddressOnlineChatIDField
            End Get
            Set
                Me.mainAddressOnlineChatIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ContactWSI
        
        Private idField As Integer
        
        Private pictureIDField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private typeField As String
        
        Private contactCodeField As String
        
        Private initialsField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private mobilePhoneField As String
        
        Private homePhoneField As String
        
        Private workFaxNoField As String
        
        Private carPhoneField As String
        
        Private eMailField As String
        
        Private homePageField As String
        
        Private onlineChatIDField As String
        
        Private genderField As String
        
        Private statusField As String
        
        Private birthDateField As System.Nullable(Of Date)
        
        Private anniversaryDateField As System.Nullable(Of Date)
        
        Private maritalStatusField As String
        
        Private religionField As String
        
        Private socialSecurityNoField As String
        
        Private identityCardNoField As String
        
        Private passportNoField As String
        
        Private languageField As String
        
        Private nationalityCountryField As String
        
        Private notesField As String
        
        Private occupationField As String
        
        Private industryField As String
        
        Private currentCompanyField As String
        
        Private interestedInField As String
        
        Private positionField As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private mainAddressAddressLine1Field As String
        
        Private mainAddressAddressLine2Field As String
        
        Private mainAddressCompanyNameField As String
        
        Private mainAddressPostCodeField As String
        
        Private mainAddressPOBoxField As String
        
        Private mainAddressPOBoxPostCodeField As String
        
        Private mainAddressCityField As String
        
        Private mainAddressDistrictProvinceField As String
        
        Private mainAddressCountryISOCodeField As String
        
        Private mainAddressPhoneNoField As String
        
        Private mainAddressFaxNoField As String
        
        Private mainAddressMobilePhoneField As String
        
        Private mainAddresseMailField As String
        
        Private mainAddressHomePageField As String
        
        Private mainAddressOnlineChatIDField As String
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PictureID() As String
            Get
                Return Me.pictureIDField
            End Get
            Set
                Me.pictureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContactCode() As String
            Get
                Return Me.contactCodeField
            End Get
            Set
                Me.contactCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Initials() As String
            Get
                Return Me.initialsField
            End Get
            Set
                Me.initialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobilePhone() As String
            Get
                Return Me.mobilePhoneField
            End Get
            Set
                Me.mobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePhone() As String
            Get
                Return Me.homePhoneField
            End Get
            Set
                Me.homePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkFaxNo() As String
            Get
                Return Me.workFaxNoField
            End Get
            Set
                Me.workFaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarPhone() As String
            Get
                Return Me.carPhoneField
            End Get
            Set
                Me.carPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eMail() As String
            Get
                Return Me.eMailField
            End Get
            Set
                Me.eMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HomePage() As String
            Get
                Return Me.homePageField
            End Get
            Set
                Me.homePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OnlineChatID() As String
            Get
                Return Me.onlineChatIDField
            End Get
            Set
                Me.onlineChatIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BirthDate() As System.Nullable(Of Date)
            Get
                Return Me.birthDateField
            End Get
            Set
                Me.birthDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AnniversaryDate() As System.Nullable(Of Date)
            Get
                Return Me.anniversaryDateField
            End Get
            Set
                Me.anniversaryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaritalStatus() As String
            Get
                Return Me.maritalStatusField
            End Get
            Set
                Me.maritalStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Religion() As String
            Get
                Return Me.religionField
            End Get
            Set
                Me.religionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SocialSecurityNo() As String
            Get
                Return Me.socialSecurityNoField
            End Get
            Set
                Me.socialSecurityNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdentityCardNo() As String
            Get
                Return Me.identityCardNoField
            End Get
            Set
                Me.identityCardNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PassportNo() As String
            Get
                Return Me.passportNoField
            End Get
            Set
                Me.passportNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NationalityCountry() As String
            Get
                Return Me.nationalityCountryField
            End Get
            Set
                Me.nationalityCountryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Occupation() As String
            Get
                Return Me.occupationField
            End Get
            Set
                Me.occupationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Industry() As String
            Get
                Return Me.industryField
            End Get
            Set
                Me.industryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentCompany() As String
            Get
                Return Me.currentCompanyField
            End Get
            Set
                Me.currentCompanyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterestedIn() As String
            Get
                Return Me.interestedInField
            End Get
            Set
                Me.interestedInField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Position() As String
            Get
                Return Me.positionField
            End Get
            Set
                Me.positionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine1() As String
            Get
                Return Me.mainAddressAddressLine1Field
            End Get
            Set
                Me.mainAddressAddressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressAddressLine2() As String
            Get
                Return Me.mainAddressAddressLine2Field
            End Get
            Set
                Me.mainAddressAddressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCompanyName() As String
            Get
                Return Me.mainAddressCompanyNameField
            End Get
            Set
                Me.mainAddressCompanyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPostCode() As String
            Get
                Return Me.mainAddressPostCodeField
            End Get
            Set
                Me.mainAddressPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPOBox() As String
            Get
                Return Me.mainAddressPOBoxField
            End Get
            Set
                Me.mainAddressPOBoxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPOBoxPostCode() As String
            Get
                Return Me.mainAddressPOBoxPostCodeField
            End Get
            Set
                Me.mainAddressPOBoxPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCity() As String
            Get
                Return Me.mainAddressCityField
            End Get
            Set
                Me.mainAddressCityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressDistrictProvince() As String
            Get
                Return Me.mainAddressDistrictProvinceField
            End Get
            Set
                Me.mainAddressDistrictProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressCountryISOCode() As String
            Get
                Return Me.mainAddressCountryISOCodeField
            End Get
            Set
                Me.mainAddressCountryISOCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressPhoneNo() As String
            Get
                Return Me.mainAddressPhoneNoField
            End Get
            Set
                Me.mainAddressPhoneNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressFaxNo() As String
            Get
                Return Me.mainAddressFaxNoField
            End Get
            Set
                Me.mainAddressFaxNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressMobilePhone() As String
            Get
                Return Me.mainAddressMobilePhoneField
            End Get
            Set
                Me.mainAddressMobilePhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddresseMail() As String
            Get
                Return Me.mainAddresseMailField
            End Get
            Set
                Me.mainAddresseMailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressHomePage() As String
            Get
                Return Me.mainAddressHomePageField
            End Get
            Set
                Me.mainAddressHomePageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MainAddressOnlineChatID() As String
            Get
                Return Me.mainAddressOnlineChatIDField
            End Get
            Set
                Me.mainAddressOnlineChatIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TimesheetLineWSI
        
        Private startTimeField As System.Nullable(Of Date)
        
        Private endTimeField As System.Nullable(Of Date)
        
        Private descriptionIDField As String
        
        Private unitOfMeasureIDField As Integer
        
        Private projectIDField As Integer
        
        Private taskSerialNoField As Integer
        
        Private projectTaskIDField As Integer
        
        Private chargeRateField As System.Nullable(Of Decimal)
        
        Private costAmountField As System.Nullable(Of Decimal)
        
        Private descriptionField As String
        
        Private costRateField As System.Nullable(Of Decimal)
        
        Private customerNameField As String
        
        Private documentNoField As String
        
        Private employeeNameField As String
        
        Private isBilledField As System.Nullable(Of Boolean)
        
        Private isChargeableField As System.Nullable(Of Boolean)
        
        Private notesField As String
        
        Private periodField As System.Nullable(Of Integer)
        
        Private projectField As String
        
        Private projectTaskField As String
        
        Private projectTaskCategoryField As String
        
        Private timesheetLineIDField As Integer
        
        Private timesheetHeaderIDField As Integer
        
        Private workDateField As Date
        
        Private workedUnitsField As Decimal
        
        Private workedUnitsBaseField As System.Nullable(Of Decimal)
        
        Private workedUnitsPerUOMField As System.Nullable(Of Decimal)
        
        Private yearField As System.Nullable(Of Integer)
        
        Private projectCodeField As String
        
        Private employeeCodeField As String
        
        Private wBSCodeField As String
        
        Private unitOfMeasureCodeField As String
        
        Private customerCodeField As String
        
        Private costRateCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property StartTime() As System.Nullable(Of Date)
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EndTime() As System.Nullable(Of Date)
            Get
                Return Me.endTimeField
            End Get
            Set
                Me.endTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureID() As Integer
            Get
                Return Me.unitOfMeasureIDField
            End Get
            Set
                Me.unitOfMeasureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectID() As Integer
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskSerialNo() As Integer
            Get
                Return Me.taskSerialNoField
            End Get
            Set
                Me.taskSerialNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectTaskID() As Integer
            Get
                Return Me.projectTaskIDField
            End Get
            Set
                Me.projectTaskIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ChargeRate() As System.Nullable(Of Decimal)
            Get
                Return Me.chargeRateField
            End Get
            Set
                Me.chargeRateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CostAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.costAmountField
            End Get
            Set
                Me.costAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CostRate() As System.Nullable(Of Decimal)
            Get
                Return Me.costRateField
            End Get
            Set
                Me.costRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerName() As String
            Get
                Return Me.customerNameField
            End Get
            Set
                Me.customerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IsBilled() As System.Nullable(Of Boolean)
            Get
                Return Me.isBilledField
            End Get
            Set
                Me.isBilledField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property IsChargeable() As System.Nullable(Of Boolean)
            Get
                Return Me.isChargeableField
            End Get
            Set
                Me.isChargeableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Period() As System.Nullable(Of Integer)
            Get
                Return Me.periodField
            End Get
            Set
                Me.periodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Project() As String
            Get
                Return Me.projectField
            End Get
            Set
                Me.projectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectTask() As String
            Get
                Return Me.projectTaskField
            End Get
            Set
                Me.projectTaskField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectTaskCategory() As String
            Get
                Return Me.projectTaskCategoryField
            End Get
            Set
                Me.projectTaskCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetLineID() As Integer
            Get
                Return Me.timesheetLineIDField
            End Get
            Set
                Me.timesheetLineIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetHeaderID() As Integer
            Get
                Return Me.timesheetHeaderIDField
            End Get
            Set
                Me.timesheetHeaderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkDate() As Date
            Get
                Return Me.workDateField
            End Get
            Set
                Me.workDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkedUnits() As Decimal
            Get
                Return Me.workedUnitsField
            End Get
            Set
                Me.workedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkedUnitsBase() As System.Nullable(Of Decimal)
            Get
                Return Me.workedUnitsBaseField
            End Get
            Set
                Me.workedUnitsBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property WorkedUnitsPerUOM() As System.Nullable(Of Decimal)
            Get
                Return Me.workedUnitsPerUOMField
            End Get
            Set
                Me.workedUnitsPerUOMField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Year() As System.Nullable(Of Integer)
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectCode() As String
            Get
                Return Me.projectCodeField
            End Get
            Set
                Me.projectCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WBSCode() As String
            Get
                Return Me.wBSCodeField
            End Get
            Set
                Me.wBSCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerCode() As String
            Get
                Return Me.customerCodeField
            End Get
            Set
                Me.customerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CostRateCode() As String
            Get
                Return Me.costRateCodeField
            End Get
            Set
                Me.costRateCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SubmitResult
        
        Private resultField As String
        
        Private detailsField As String
        
        '''<remarks/>
        Public Property Result() As String
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Details() As String
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TimesheetHeaderWSI
        
        Private chargeableUnitsField As System.Nullable(Of Decimal)
        
        Private descriptionField As String
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private nonChargeableUnitsField As System.Nullable(Of Decimal)
        
        Private periodField As System.Nullable(Of Integer)
        
        Private statusField As String
        
        Private timesheetPeriodField As String
        
        Private toDateField As System.Nullable(Of Date)
        
        Private unitsEnteredField As System.Nullable(Of Decimal)
        
        Private yearField As System.Nullable(Of Integer)
        
        Private timesheetHeaderIDField As Integer
        
        Private employeeCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ChargeableUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.chargeableUnitsField
            End Get
            Set
                Me.chargeableUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NonChargeableUnits() As System.Nullable(Of Decimal)
            Get
                Return Me.nonChargeableUnitsField
            End Get
            Set
                Me.nonChargeableUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Period() As System.Nullable(Of Integer)
            Get
                Return Me.periodField
            End Get
            Set
                Me.periodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetPeriod() As String
            Get
                Return Me.timesheetPeriodField
            End Get
            Set
                Me.timesheetPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property UnitsEntered() As System.Nullable(Of Decimal)
            Get
                Return Me.unitsEnteredField
            End Get
            Set
                Me.unitsEnteredField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Year() As System.Nullable(Of Integer)
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetHeaderID() As Integer
            Get
                Return Me.timesheetHeaderIDField
            End Get
            Set
                Me.timesheetHeaderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class TimesheetPeriodWSI
        
        Private yearField As Integer
        
        Private toDateField As System.Nullable(Of Date)
        
        Private timesheetPeriodIDField As Integer
        
        Private standardUnitsField As System.Nullable(Of Integer)
        
        Private periodField As Integer
        
        Private minimumUnitsPerDayField As System.Nullable(Of Short)
        
        Private maximumUnitsPerDayField As System.Nullable(Of Short)
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private descriptionField As String
        
        Private fromToDatesStringField As String
        
        Private closedField As System.Nullable(Of Boolean)
        
        '''<remarks/>
        Public Property Year() As Integer
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetPeriodID() As Integer
            Get
                Return Me.timesheetPeriodIDField
            End Get
            Set
                Me.timesheetPeriodIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property StandardUnits() As System.Nullable(Of Integer)
            Get
                Return Me.standardUnitsField
            End Get
            Set
                Me.standardUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Period() As Integer
            Get
                Return Me.periodField
            End Get
            Set
                Me.periodField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MinimumUnitsPerDay() As System.Nullable(Of Short)
            Get
                Return Me.minimumUnitsPerDayField
            End Get
            Set
                Me.minimumUnitsPerDayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property MaximumUnitsPerDay() As System.Nullable(Of Short)
            Get
                Return Me.maximumUnitsPerDayField
            End Get
            Set
                Me.maximumUnitsPerDayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromToDatesString() As String
            Get
                Return Me.fromToDatesStringField
            End Get
            Set
                Me.fromToDatesStringField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Closed() As System.Nullable(Of Boolean)
            Get
                Return Me.closedField
            End Get
            Set
                Me.closedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class InsertExpenseStatementLineObject
        
        Private expenseReferenceField As String
        
        Private expenseItemCodeField As String
        
        Private projectCodeField As String
        
        Private expenseLineIDField As System.Nullable(Of Integer)
        
        Private taskSerialNumberField As System.Nullable(Of Integer)
        
        Private expenseDateField As Date
        
        Private descriptionField As String
        
        Private currencyField As String
        
        Private currencyRateField As System.Nullable(Of Decimal)
        
        Private amountField As Decimal
        
        Private amountBaseField As System.Nullable(Of Decimal)
        
        Private vatTaxAmountField As System.Nullable(Of Decimal)
        
        Private vatTaxAmountBaseField As System.Nullable(Of Decimal)
        
        Private amountGrossField As System.Nullable(Of Decimal)
        
        Private amountGrossBaseField As System.Nullable(Of Decimal)
        
        Private reimburseField As System.Nullable(Of Boolean)
        
        Private paymentMethodCodeField As String
        
        Private notesField As String
        
        '''<remarks/>
        Public Property ExpenseReference() As String
            Get
                Return Me.expenseReferenceField
            End Get
            Set
                Me.expenseReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseItemCode() As String
            Get
                Return Me.expenseItemCodeField
            End Get
            Set
                Me.expenseItemCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectCode() As String
            Get
                Return Me.projectCodeField
            End Get
            Set
                Me.projectCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExpenseLineID() As System.Nullable(Of Integer)
            Get
                Return Me.expenseLineIDField
            End Get
            Set
                Me.expenseLineIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TaskSerialNumber() As System.Nullable(Of Integer)
            Get
                Return Me.taskSerialNumberField
            End Get
            Set
                Me.taskSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseDate() As Date
            Get
                Return Me.expenseDateField
            End Get
            Set
                Me.expenseDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrencyRate() As System.Nullable(Of Decimal)
            Get
                Return Me.currencyRateField
            End Get
            Set
                Me.currencyRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Decimal
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AmountBase() As System.Nullable(Of Decimal)
            Get
                Return Me.amountBaseField
            End Get
            Set
                Me.amountBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VatTaxAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.vatTaxAmountField
            End Get
            Set
                Me.vatTaxAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VatTaxAmountBase() As System.Nullable(Of Decimal)
            Get
                Return Me.vatTaxAmountBaseField
            End Get
            Set
                Me.vatTaxAmountBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AmountGross() As System.Nullable(Of Decimal)
            Get
                Return Me.amountGrossField
            End Get
            Set
                Me.amountGrossField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AmountGrossBase() As System.Nullable(Of Decimal)
            Get
                Return Me.amountGrossBaseField
            End Get
            Set
                Me.amountGrossBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Reimburse() As System.Nullable(Of Boolean)
            Get
                Return Me.reimburseField
            End Get
            Set
                Me.reimburseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentMethodCode() As String
            Get
                Return Me.paymentMethodCodeField
            End Get
            Set
                Me.paymentMethodCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class InsertExpenseStatementObject
        
        Private descriptionField As String
        
        Private postingDateField As Date
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private expenseLinesField() As InsertExpenseStatementLineObject
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostingDate() As Date
            Get
                Return Me.postingDateField
            End Get
            Set
                Me.postingDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseLines() As InsertExpenseStatementLineObject()
            Get
                Return Me.expenseLinesField
            End Get
            Set
                Me.expenseLinesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ExpenseLineWSI
        
        Private expenseLineIDField As Integer
        
        Private employeeCodeField As String
        
        Private employeeFullNameField As String
        
        Private expenseDateField As Date
        
        Private descriptionField As String
        
        Private descriptionIDField As String
        
        Private currencyCodeField As String
        
        Private amountField As Decimal
        
        Private currencyRateField As System.Nullable(Of Decimal)
        
        Private amountBaseField As System.Nullable(Of Decimal)
        
        Private vatTaxAmountField As System.Nullable(Of Decimal)
        
        Private vatTaxAmountBaseField As System.Nullable(Of Decimal)
        
        Private reimburseField As Boolean
        
        Private amountGrossField As System.Nullable(Of Decimal)
        
        Private amountGrossBaseField As System.Nullable(Of Decimal)
        
        Private projectCodeField As String
        
        Private projectDescriptionField As String
        
        Private projectTaskSerialNoField As System.Nullable(Of Integer)
        
        Private wBSCodeField As String
        
        Private projectTaskDescriptionField As String
        
        Private paymentMethodField As String
        
        Private accountNumberField As String
        
        Private notesField As String
        
        Private dimensionCode1Field As String
        
        Private dimensionDescription1Field As String
        
        Private dimensionCode2Field As String
        
        Private dimensionDescription2Field As String
        
        Private dimensionCode3Field As String
        
        Private dimensionDescription3Field As String
        
        Private dimensionCode4Field As String
        
        Private dimensionDescription4Field As String
        
        Private dimensionCode5Field As String
        
        Private dimensionDescription5Field As String
        
        Private dimensionCode6Field As String
        
        Private dimensionDescription6Field As String
        
        Private dimensionCode7Field As String
        
        Private dimensionDescription7Field As String
        
        Private dimensionCode8Field As String
        
        Private dimensionDescription8Field As String
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private employeeAccountNoField As String
        
        Private expenseItemCodeField As String
        
        Private departmentCodeField As String
        
        Private referenceField As String
        
        Private batchReferenceField As String
        
        Private rowNumField As Integer
        
        Private totalRowsField As Integer
        
        Private isChargeableField As Boolean
        
        '''<remarks/>
        Public Property ExpenseLineID() As Integer
            Get
                Return Me.expenseLineIDField
            End Get
            Set
                Me.expenseLineIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeFullName() As String
            Get
                Return Me.employeeFullNameField
            End Get
            Set
                Me.employeeFullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseDate() As Date
            Get
                Return Me.expenseDateField
            End Get
            Set
                Me.expenseDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrencyCode() As String
            Get
                Return Me.currencyCodeField
            End Get
            Set
                Me.currencyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Decimal
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CurrencyRate() As System.Nullable(Of Decimal)
            Get
                Return Me.currencyRateField
            End Get
            Set
                Me.currencyRateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AmountBase() As System.Nullable(Of Decimal)
            Get
                Return Me.amountBaseField
            End Get
            Set
                Me.amountBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VatTaxAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.vatTaxAmountField
            End Get
            Set
                Me.vatTaxAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property VatTaxAmountBase() As System.Nullable(Of Decimal)
            Get
                Return Me.vatTaxAmountBaseField
            End Get
            Set
                Me.vatTaxAmountBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reimburse() As Boolean
            Get
                Return Me.reimburseField
            End Get
            Set
                Me.reimburseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AmountGross() As System.Nullable(Of Decimal)
            Get
                Return Me.amountGrossField
            End Get
            Set
                Me.amountGrossField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AmountGrossBase() As System.Nullable(Of Decimal)
            Get
                Return Me.amountGrossBaseField
            End Get
            Set
                Me.amountGrossBaseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectCode() As String
            Get
                Return Me.projectCodeField
            End Get
            Set
                Me.projectCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectDescription() As String
            Get
                Return Me.projectDescriptionField
            End Get
            Set
                Me.projectDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ProjectTaskSerialNo() As System.Nullable(Of Integer)
            Get
                Return Me.projectTaskSerialNoField
            End Get
            Set
                Me.projectTaskSerialNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WBSCode() As String
            Get
                Return Me.wBSCodeField
            End Get
            Set
                Me.wBSCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectTaskDescription() As String
            Get
                Return Me.projectTaskDescriptionField
            End Get
            Set
                Me.projectTaskDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentMethod() As String
            Get
                Return Me.paymentMethodField
            End Get
            Set
                Me.paymentMethodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountNumber() As String
            Get
                Return Me.accountNumberField
            End Get
            Set
                Me.accountNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode1() As String
            Get
                Return Me.dimensionCode1Field
            End Get
            Set
                Me.dimensionCode1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription1() As String
            Get
                Return Me.dimensionDescription1Field
            End Get
            Set
                Me.dimensionDescription1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode2() As String
            Get
                Return Me.dimensionCode2Field
            End Get
            Set
                Me.dimensionCode2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription2() As String
            Get
                Return Me.dimensionDescription2Field
            End Get
            Set
                Me.dimensionDescription2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode3() As String
            Get
                Return Me.dimensionCode3Field
            End Get
            Set
                Me.dimensionCode3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription3() As String
            Get
                Return Me.dimensionDescription3Field
            End Get
            Set
                Me.dimensionDescription3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode4() As String
            Get
                Return Me.dimensionCode4Field
            End Get
            Set
                Me.dimensionCode4Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription4() As String
            Get
                Return Me.dimensionDescription4Field
            End Get
            Set
                Me.dimensionDescription4Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode5() As String
            Get
                Return Me.dimensionCode5Field
            End Get
            Set
                Me.dimensionCode5Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription5() As String
            Get
                Return Me.dimensionDescription5Field
            End Get
            Set
                Me.dimensionDescription5Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode6() As String
            Get
                Return Me.dimensionCode6Field
            End Get
            Set
                Me.dimensionCode6Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription6() As String
            Get
                Return Me.dimensionDescription6Field
            End Get
            Set
                Me.dimensionDescription6Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode7() As String
            Get
                Return Me.dimensionCode7Field
            End Get
            Set
                Me.dimensionCode7Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription7() As String
            Get
                Return Me.dimensionDescription7Field
            End Get
            Set
                Me.dimensionDescription7Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionCode8() As String
            Get
                Return Me.dimensionCode8Field
            End Get
            Set
                Me.dimensionCode8Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionDescription8() As String
            Get
                Return Me.dimensionDescription8Field
            End Get
            Set
                Me.dimensionDescription8Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeAccountNo() As String
            Get
                Return Me.employeeAccountNoField
            End Get
            Set
                Me.employeeAccountNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseItemCode() As String
            Get
                Return Me.expenseItemCodeField
            End Get
            Set
                Me.expenseItemCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepartmentCode() As String
            Get
                Return Me.departmentCodeField
            End Get
            Set
                Me.departmentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reference() As String
            Get
                Return Me.referenceField
            End Get
            Set
                Me.referenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BatchReference() As String
            Get
                Return Me.batchReferenceField
            End Get
            Set
                Me.batchReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RowNum() As Integer
            Get
                Return Me.rowNumField
            End Get
            Set
                Me.rowNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalRows() As Integer
            Get
                Return Me.totalRowsField
            End Get
            Set
                Me.totalRowsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsChargeable() As Boolean
            Get
                Return Me.isChargeableField
            End Get
            Set
                Me.isChargeableField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ExpenseHeaderWSI
        
        Private expenseReferenceField As String
        
        Private expenseHeaderIDField As Integer
        
        Private descriptionField As String
        
        Private postingDateField As System.Nullable(Of Date)
        
        Private fromDateField As System.Nullable(Of Date)
        
        Private toDateField As System.Nullable(Of Date)
        
        Private statusField As String
        
        Private reimbursableAmountField As System.Nullable(Of Decimal)
        
        Private otherAmountField As System.Nullable(Of Decimal)
        
        Private totalAmountField As System.Nullable(Of Decimal)
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        Private descriptionIDField As String
        
        '''<remarks/>
        Public Property ExpenseReference() As String
            Get
                Return Me.expenseReferenceField
            End Get
            Set
                Me.expenseReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseHeaderID() As Integer
            Get
                Return Me.expenseHeaderIDField
            End Get
            Set
                Me.expenseHeaderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PostingDate() As System.Nullable(Of Date)
            Get
                Return Me.postingDateField
            End Get
            Set
                Me.postingDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property FromDate() As System.Nullable(Of Date)
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ToDate() As System.Nullable(Of Date)
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ReimbursableAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.reimbursableAmountField
            End Get
            Set
                Me.reimbursableAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property OtherAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.otherAmountField
            End Get
            Set
                Me.otherAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property TotalAmount() As System.Nullable(Of Decimal)
            Get
                Return Me.totalAmountField
            End Get
            Set
                Me.totalAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class ExpenseItemWSI
        
        Private codeField As String
        
        Private descriptionField As String
        
        Private typeField As String
        
        Private rateValueField As System.Nullable(Of Decimal)
        
        Private accountField As String
        
        Private vatTaxProductGroupField As String
        
        Private vatBusinessCategoryField As String
        
        Private vatTaxRateSetupRateField As Decimal
        
        Private isVatInclusiveField As Boolean
        
        Private dateCreatedField As Date
        
        Private createdByField As String
        
        Private dateUpdatedField As Date
        
        Private updatedByField As String
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RateValue() As System.Nullable(Of Decimal)
            Get
                Return Me.rateValueField
            End Get
            Set
                Me.rateValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Account() As String
            Get
                Return Me.accountField
            End Get
            Set
                Me.accountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VatTaxProductGroup() As String
            Get
                Return Me.vatTaxProductGroupField
            End Get
            Set
                Me.vatTaxProductGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VatBusinessCategory() As String
            Get
                Return Me.vatBusinessCategoryField
            End Get
            Set
                Me.vatBusinessCategoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VatTaxRateSetupRate() As Decimal
            Get
                Return Me.vatTaxRateSetupRateField
            End Get
            Set
                Me.vatTaxRateSetupRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsVatInclusive() As Boolean
            Get
                Return Me.isVatInclusiveField
            End Get
            Set
                Me.isVatInclusiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateUpdated() As Date
            Get
                Return Me.dateUpdatedField
            End Get
            Set
                Me.dateUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatedBy() As String
            Get
                Return Me.updatedByField
            End Get
            Set
                Me.updatedByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class AddTimeHelpObject
        
        Private workedDateField As Date
        
        Private startTimeField As System.Nullable(Of Date)
        
        Private endTimeField As System.Nullable(Of Date)
        
        Private unitOfMeasureCodeField As String
        
        Private workedUnitsField As Decimal
        
        Private descriptionField As String
        
        Private projectCodeField As String
        
        Private taskSerialNumberField As Integer
        
        Private percentCompleteField As Decimal
        
        Private notesField As String
        
        '''<remarks/>
        Public Property WorkedDate() As Date
            Get
                Return Me.workedDateField
            End Get
            Set
                Me.workedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property StartTime() As System.Nullable(Of Date)
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EndTime() As System.Nullable(Of Date)
            Get
                Return Me.endTimeField
            End Get
            Set
                Me.endTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkedUnits() As Decimal
            Get
                Return Me.workedUnitsField
            End Get
            Set
                Me.workedUnitsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectCode() As String
            Get
                Return Me.projectCodeField
            End Get
            Set
                Me.projectCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskSerialNumber() As Integer
            Get
                Return Me.taskSerialNumberField
            End Get
            Set
                Me.taskSerialNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PercentComplete() As Decimal
            Get
                Return Me.percentCompleteField
            End Get
            Set
                Me.percentCompleteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SubmitOvertimeRequestWSI
        
        Private descriptionField As String
        
        Private transactionDateField As Date
        
        Private quantityField As Decimal
        
        Private unitOfMeasureCodeField As String
        
        Private documentField As DocumentWSI
        
        Private descriptionIDField As String
        
        Private employeeCodeField As String
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionDate() As Date
            Get
                Return Me.transactionDateField
            End Get
            Set
                Me.transactionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Document() As DocumentWSI
            Get
                Return Me.documentField
            End Get
            Set
                Me.documentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Exelsys/")>  _
    Partial Public Class SubmitAbsenceRequestWSI
        
        Private causeOfAbsenceCodeField As String
        
        Private descriptionField As String
        
        Private fromDateField As Date
        
        Private toDateField As Date
        
        Private entryDateField As System.Nullable(Of Date)
        
        Private quantityField As Decimal
        
        Private unitOfMeasureCodeField As String
        
        Private documentField As DocumentWSI
        
        Private descriptionIDField As String
        
        Private employeeCodeField As String
        
        Private needsApprovalField As Boolean
        
        Private documentNoField As String
        
        Private absenceReasonCodeField As String
        
        '''<remarks/>
        Public Property CauseOfAbsenceCode() As String
            Get
                Return Me.causeOfAbsenceCodeField
            End Get
            Set
                Me.causeOfAbsenceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromDate() As Date
            Get
                Return Me.fromDateField
            End Get
            Set
                Me.fromDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ToDate() As Date
            Get
                Return Me.toDateField
            End Get
            Set
                Me.toDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EntryDate() As System.Nullable(Of Date)
            Get
                Return Me.entryDateField
            End Get
            Set
                Me.entryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Quantity() As Decimal
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitOfMeasureCode() As String
            Get
                Return Me.unitOfMeasureCodeField
            End Get
            Set
                Me.unitOfMeasureCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Document() As DocumentWSI
            Get
                Return Me.documentField
            End Get
            Set
                Me.documentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescriptionID() As String
            Get
                Return Me.descriptionIDField
            End Get
            Set
                Me.descriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeCode() As String
            Get
                Return Me.employeeCodeField
            End Get
            Set
                Me.employeeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NeedsApproval() As Boolean
            Get
                Return Me.needsApprovalField
            End Get
            Set
                Me.needsApprovalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentNo() As String
            Get
                Return Me.documentNoField
            End Get
            Set
                Me.documentNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AbsenceReasonCode() As String
            Get
                Return Me.absenceReasonCodeField
            End Get
            Set
                Me.absenceReasonCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostEmployeeAbsenceCompletedEventHandler(ByVal sender As Object, ByVal e As PostEmployeeAbsenceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostEmployeeAbsenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertEmployeeAbsenceCompletedEventHandler(ByVal sender As Object, ByVal e As InsertEmployeeAbsenceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertEmployeeAbsenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SubmitAbsenceRequestCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitAbsenceRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitAbsenceRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub RecallAbsenceRequestCompletedEventHandler(ByVal sender As Object, ByVal e As RecallAbsenceRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecallAbsenceRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SubmitOvertimeRequestCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitOvertimeRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitOvertimeRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetWorkingTimeForAbsenceRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetWorkingTimeForAbsenceRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWorkingTimeForAbsenceRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Nullable(Of Decimal)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Decimal))
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddTimeToTimesheetCompletedEventHandler(ByVal sender As Object, ByVal e As AddTimeToTimesheetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddTimeToTimesheetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetValidExpenseItemsCompletedEventHandler(ByVal sender As Object, ByVal e As GetValidExpenseItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetValidExpenseItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExpenseItemWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExpenseItemWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyExpenseStatementsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyExpenseStatementsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyExpenseStatementsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExpenseHeaderWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExpenseHeaderWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyExpenseStatementCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyExpenseStatementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyExpenseStatementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExpenseHeaderWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExpenseHeaderWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyExpenseStatementsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyExpenseStatementsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyExpenseStatementsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExpenseHeaderWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExpenseHeaderWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyExpenseStatementLinesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyExpenseStatementLinesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyExpenseStatementLinesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExpenseLineWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExpenseLineWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertExpenseStatementCompletedEventHandler(ByVal sender As Object, ByVal e As InsertExpenseStatementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertExpenseStatementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertExpenseStatementLineCompletedEventHandler(ByVal sender As Object, ByVal e As InsertExpenseStatementLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertExpenseStatementLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SubmitExpenseStatementCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitExpenseStatementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitExpenseStatementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAvailableTimesheetPeriodsForEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As GetAvailableTimesheetPeriodsForEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAvailableTimesheetPeriodsForEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimesheetPeriodWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimesheetPeriodWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CopyTimesheetHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As CopyTimesheetHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CopyTimesheetHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTimesheetHeaderPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetHeaderPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetHeaderPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTimesheetHeadersCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetHeadersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetHeadersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimesheetHeaderWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimesheetHeaderWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SubmitTimesheetHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitTimesheetHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitTimesheetHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SubmitResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SubmitResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTimesheetLineListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetLineListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetLineListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimesheetLineWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimesheetLineWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTimesheetLinesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetLinesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetLinesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimesheetLineWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimesheetLineWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteTimesheetLineCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteTimesheetLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteTimesheetLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteExpenseLineCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteExpenseLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteExpenseLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SaveTimesheetLineCompletedEventHandler(ByVal sender As Object, ByVal e As SaveTimesheetLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveTimesheetLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyAbsenceRequestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyAbsenceRequestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyAbsenceRequestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AbsenceRequestWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AbsenceRequestWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyAbsenceRequestsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyAbsenceRequestsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyAbsenceRequestsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AbsenceRequestWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AbsenceRequestWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAbsenceRequestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAbsenceRequestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAbsenceRequestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AbsenceRequestWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AbsenceRequestWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetContactCompletedEventHandler(ByVal sender As Object, ByVal e As GetContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertContactCompletedEventHandler(ByVal sender As Object, ByVal e As InsertContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateContactCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyContactsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyContactsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyContactsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyContactsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyContactsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyContactsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContactWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContactWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyContactsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyContactsPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyContactsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetApplicantsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicantsPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicantsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetApplicantsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicantsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicantsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApplicantWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApplicantWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetJobApplicationsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobApplicationsPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobApplicationsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetJobApplicationsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobApplicationsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobApplicationsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As JobApplicationWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),JobApplicationWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetVacanciesPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetVacanciesPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVacanciesPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetVacanciesPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetVacanciesPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVacanciesPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As VacancyWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),VacancyWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetProjectsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetProjectsPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProjectsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetProjectsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetProjectsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProjectsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProjectWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProjectWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CheckLicenseCompletedEventHandler(ByVal sender As Object, ByVal e As CheckLicenseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckLicenseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CourseRequestToEnrolCompletedEventHandler(ByVal sender As Object, ByVal e As CourseRequestToEnrolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CourseRequestToEnrolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetCourseEnrolmentListCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetCourseEnrolmentListCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCourseEnrolmentListCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetCourseEnrolmentListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCourseEnrolmentListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCourseEnrolmentListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrainingCourseWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrainingCourseWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTARecordsWithFiltersCompletedEventHandler(ByVal sender As Object, ByVal e As GetTARecordsWithFiltersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTARecordsWithFiltersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimeAttendanceRecordWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimeAttendanceRecordWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTAAbsenceRequestsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTAAbsenceRequestsPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTAAbsenceRequestsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTAAbsenceRequestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTAAbsenceRequestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTAAbsenceRequestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TAAbsenceRequestWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TAAbsenceRequestWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTAEmployeePagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTAEmployeePagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTAEmployeePagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTAEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTAEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTAEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TAEmployeeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TAEmployeeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetProjectTasksCompletedEventHandler(ByVal sender As Object, ByVal e As GetProjectTasksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProjectTasksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProjectTaskWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProjectTaskWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadEmployeePhotoCompletedEventHandler(ByVal sender As Object, ByVal e As UploadEmployeePhotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadEmployeePhotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadEmployeeDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As UploadEmployeeDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadEmployeeDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadApplicantDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As UploadApplicantDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadApplicantDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadAndReplaceEmployeeDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As UploadAndReplaceEmployeeDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadAndReplaceEmployeeDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As UploadDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetDocumentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeContactDetailsCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeContactDetailsCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeContactDetailsCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeContactDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeContactDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeContactDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeContactDetailsWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeContactDetailsWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetDocumentLinksCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentLinksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentLinksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetApplicantAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicantAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicantAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApplicantAppraisalContainer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApplicantAppraisalContainer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostApplicantAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As PostApplicantAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostApplicantAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As PostAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetSelfAppraisalsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSelfAppraisalsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSelfAppraisalsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAppraisalWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAppraisalWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyPendingAppraisalsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyPendingAppraisalsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyPendingAppraisalsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAppraisalWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAppraisalWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeAppraisalDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeAppraisalDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeAppraisalDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAppraisalFullWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAppraisalFullWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostSalaryEntryCompletedEventHandler(ByVal sender As Object, ByVal e As PostSalaryEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostSalaryEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostEmployeeAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As PostEmployeeAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostEmployeeAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyDocumentFoldersCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyDocumentFoldersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyDocumentFoldersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentFolderWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentFolderWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetDocumentsInFolderCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentsInFolderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentsInFolderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeICTItemsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeICTItemsPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeICTItemsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeICTItemsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeICTItemsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeICTItemsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeICTItemWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeICTItemWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUpdateCostCentreCompletedEventHandler(ByVal sender As Object, ByVal e As GetUpdateCostCentreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUpdateCostCentreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CostCentreWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CostCentreWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPayrollEmployeesPagesCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetPayrollEmployeesPagesCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPayrollEmployeesPagesCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPayrollEmployeesPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetPayrollEmployeesPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPayrollEmployeesPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeExtraFieldsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeExtraFieldsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeExtraFieldsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CalculateEntitledAbsenceWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CalculateEntitledAbsenceWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeesPagesCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesPagesCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesPagesCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeesPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeesPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeRelativesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeRelativesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeRelativesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeRelativeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeRelativeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeQualificationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeQualificationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeQualificationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeQualificationWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeQualificationWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeBenefitsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeBenefitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeBenefitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeBenefitWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeBenefitWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeAssignedArticlesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeAssignedArticlesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeAssignedArticlesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAssignedArticleWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAssignedArticleWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeePositionAssignmentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeePositionAssignmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeePositionAssignmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PositionAssignmentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PositionAssignmentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeTrainingRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeTrainingRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeTrainingRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeTrainingWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeTrainingWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeSalaryHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeSalaryHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeSalaryHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeSalaryHistoryWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeSalaryHistoryWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeReferencesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeReferencesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeReferencesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeReferenceWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeReferenceWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeBasicInfoPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeBasicInfoPagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeBasicInfoPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeBasicInfoPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeBasicInfoPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeBasicInfoPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeBasicBO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeBasicBO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateEmployeeCommunicationInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateEmployeeCommunicationInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateEmployeeCommunicationInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyEmployeesPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyEmployeesPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyEmployeesPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyEmployeeInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyEmployeeInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyEmployeeInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeAbsenseBalancesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeAbsenseBalancesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeAbsenseBalancesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CalculateEntitledAbsenceBO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CalculateEntitledAbsenceBO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeSingleAbsenceBalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeSingleAbsenceBalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeSingleAbsenceBalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CalculateEntitledAbsenceBO
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CalculateEntitledAbsenceBO)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeAbsenceBalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeAbsenceBalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeAbsenceBalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Decimal)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeAbsenceTransactionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeAbsenceTransactionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeAbsenceTransactionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAbsenceWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAbsenceWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUnitsOfMeasureCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitsOfMeasureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitsOfMeasureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UnitOfMeasureWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UnitOfMeasureWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub IsOnlineCompletedEventHandler(ByVal sender As Object, ByVal e As IsOnlineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsOnlineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetApplicantUserFieldDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicantUserFieldDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicantUserFieldDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserFieldDefinitionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserFieldDefinitionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetJobApplicationUserFieldDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobApplicationUserFieldDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobApplicationUserFieldDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserFieldDefinitionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserFieldDefinitionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetOpenVacanciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetOpenVacanciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOpenVacanciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As VacancyWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),VacancyWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetDateFormatCompletedEventHandler(ByVal sender As Object, ByVal e As GetDateFormatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDateFormatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DateFormatWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DateFormatWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdditionalInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdditionalInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdditionalInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetBusinessEntityParameterCompletedEventHandler(ByVal sender As Object, ByVal e As GetBusinessEntityParameterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBusinessEntityParameterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserSecurityProfileCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserSecurityProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserSecurityProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserSecurityProfileWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserSecurityProfileWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTranslatedStringsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranslatedStringsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranslatedStringsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TranslatedString()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TranslatedString())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTranslatedStringCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranslatedStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranslatedStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TranslatedString
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TranslatedString)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTranslatedDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranslatedDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranslatedDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TranslatedString
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TranslatedString)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ApplicantForgotPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ApplicantForgotPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ApplicantForgotPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SuperAdminLoginCompletedEventHandler(ByVal sender As Object, ByVal e As SuperAdminLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SuperAdminLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LoginUserWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LoginUserWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetApplicationReportUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicationReportUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicationReportUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetVacationPlanCompletedEventHandler(ByVal sender As Object, ByVal e As GetVacationPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVacationPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAbsenceRequestWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAbsenceRequestWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetReportUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ApplicantLoginCompletedEventHandler(ByVal sender As Object, ByVal e As ApplicantLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ApplicantLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApplicantContainer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApplicantContainer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ApplicantExistsCompletedEventHandler(ByVal sender As Object, ByVal e As ApplicantExistsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ApplicantExistsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostJobApplicationCompletedEventHandler(ByVal sender As Object, ByVal e As PostJobApplicationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostJobApplicationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostJobApplicationDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As PostJobApplicationDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostJobApplicationDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddParserLogCompletedEventHandler(ByVal sender As Object, ByVal e As AddParserLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddParserLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetCountriesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CountryBO()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CountryBO())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetNationalityListCompletedEventHandler(ByVal sender As Object, ByVal e As GetNationalityListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNationalityListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CodeDescriptionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CodeDescriptionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetCountryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CodeDescriptionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CodeDescriptionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeUnionsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeUnionsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeUnionsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CodeDescriptionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CodeDescriptionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ListDomainValueCompletedEventHandler(ByVal sender As Object, ByVal e As ListDomainValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListDomainValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ListDomainValueWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ListDomainValueWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ListCodeDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As ListCodeDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListCodeDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CodeDescriptionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CodeDescriptionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As InsertEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertCodeDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCodeDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCodeDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertDepartmentCompletedEventHandler(ByVal sender As Object, ByVal e As InsertDepartmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertDepartmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertEmployeeJobDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertEmployeeJobDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertEmployeeJobDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertLocationCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CheckConnectionCompletedEventHandler(ByVal sender As Object, ByVal e As CheckConnectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckConnectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPositionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPositionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPositionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PositionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PositionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTrainingCoursesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrainingCoursesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrainingCoursesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TrainingCourseWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TrainingCourseWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPositionAssignmentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPositionAssignmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPositionAssignmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PositionAssignmentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PositionAssignmentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetDepartmentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDepartmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDepartmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DepartmentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DepartmentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetJobDescriptionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobDescriptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobDescriptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeJobDescriptionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeJobDescriptionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetQualificationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetQualificationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQualificationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As QualificationWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),QualificationWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetExpensesCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpensesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpensesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExpenseLineWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExpenseLineWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertProjectTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertProjectTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertProjectTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyProjectsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyProjectsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyProjectsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProjectWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProjectWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyProjectTasksPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyProjectTasksPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyProjectTasksPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProjectTaskWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProjectTaskWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyTasksCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyTasksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyTasksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ProjectTaskWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ProjectTaskWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyJobApplicationsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyJobApplicationsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyJobApplicationsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As JobApplicationWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),JobApplicationWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyJobApplicationsListPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyJobApplicationsListPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyJobApplicationsListPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As JobApplicationWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),JobApplicationWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetJobApplicationCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobApplicationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobApplicationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As JobApplicationFullWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),JobApplicationFullWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetApplicantCompletedEventHandler(ByVal sender As Object, ByVal e As GetApplicantCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApplicantCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApplicantWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApplicantWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyApprovalTransactionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyApprovalTransactionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyApprovalTransactionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApprovalTransactionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApprovalTransactionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyApprovalTransactionsPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyApprovalTransactionsPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyApprovalTransactionsPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ApprovalTransactionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ApprovalTransactionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostApprovalTransactionActionCompletedEventHandler(ByVal sender As Object, ByVal e As PostApprovalTransactionActionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostApprovalTransactionActionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLanguageListCompletedEventHandler(ByVal sender As Object, ByVal e As GetLanguageListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLanguageListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LanguageWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LanguageWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetWorkingTimeCompletedEventHandler(ByVal sender As Object, ByVal e As GetWorkingTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWorkingTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkingTimeWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkingTimeWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetValidCausesOfAbsenceCompletedEventHandler(ByVal sender As Object, ByVal e As GetValidCausesOfAbsenceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetValidCausesOfAbsenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CauseOfAbsenceWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CauseOfAbsenceWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CheckLoginCompletedEventHandler(ByVal sender As Object, ByVal e As CheckLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LoginUserWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LoginUserWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UserLoginCompletedEventHandler(ByVal sender As Object, ByVal e As UserLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UserLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LoginUserWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LoginUserWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub RequestNewPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As RequestNewPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RequestNewPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ItemStringKeyValue
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ItemStringKeyValue)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeAttendanceStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeAttendanceStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeAttendanceStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AttendanceStatusWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AttendanceStatusWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateEmployeeAttendanceStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateEmployeeAttendanceStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateEmployeeAttendanceStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddTimeAttendanceRecordCompletedEventHandler(ByVal sender As Object, ByVal e As AddTimeAttendanceRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddTimeAttendanceRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddAttendanceStatusCompletedEventHandler(ByVal sender As Object, ByVal e As AddAttendanceStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddAttendanceStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub RegisterWorkingTimeCompletedEventHandler(ByVal sender As Object, ByVal e As RegisterWorkingTimeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegisterWorkingTimeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub SetPrivacySettingsCompletedEventHandler(ByVal sender As Object, ByVal e As SetPrivacySettingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPrivacySettingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ChangePasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ChangePasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangePasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetShiftListCompletedEventHandler(ByVal sender As Object, ByVal e As GetShiftListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetShiftListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ShiftWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ShiftWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeProjectTimeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProjectTimeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProjectTimeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeProjectTimeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeProjectTimeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyPayslipsLinksCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyPayslipsLinksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyPayslipsLinksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertAdHocAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As InsertAdHocAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertAdHocAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAdhocAppraisalWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAdhocAppraisalWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteEmployeeAdhocAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteEmployeeAdhocAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteEmployeeAdhocAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdHocAppraisalsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdHocAppraisalsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdHocAppraisalsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAdhocAppraisalWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAdhocAppraisalWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdHocAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdHocAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdHocAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeAdhocAppraisalWSI
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeAdhocAppraisalWSI)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdHocAppraisalTemplatesCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdHocAppraisalTemplatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdHocAppraisalTemplatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AppraisalTemplateWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AppraisalTemplateWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostAdHocAppraisalCompletedEventHandler(ByVal sender As Object, ByVal e As PostAdHocAppraisalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostAdHocAppraisalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLocationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLocationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLocationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LocationWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LocationWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetBuildingsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBuildingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBuildingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BuildingWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BuildingWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetBuildingFloorsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBuildingFloorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBuildingFloorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BuildingFloorWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BuildingFloorWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetWorkspacesCompletedEventHandler(ByVal sender As Object, ByVal e As GetWorkspacesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWorkspacesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WorkspaceWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WorkspaceWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub PostWorkspaceReservationCompletedEventHandler(ByVal sender As Object, ByVal e As PostWorkspaceReservationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostWorkspaceReservationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMyOvertimeRequestsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMyOvertimeRequestsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMyOvertimeRequestsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OvertimeRequestWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OvertimeRequestWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetNewsCompletedEventHandler(ByVal sender As Object, ByVal e As GetNewsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNewsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NewsItemWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NewsItemWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeContractTypesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeContractTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeContractTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EmployeeContractTypeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EmployeeContractTypeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEque2EmployeesPagedCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetEque2EmployeesPagedCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEque2EmployeesPagedCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEque2EmployeesPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetEque2EmployeesPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEque2EmployeesPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Eque2EmployeeWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Eque2EmployeeWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEmployeeDimensionDefinitionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeDimensionDefinitionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeDimensionDefinitionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DimensionDefinitionWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DimensionDefinitionWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertUpdateDimensionValueCompletedEventHandler(ByVal sender As Object, ByVal e As InsertUpdateDimensionValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertUpdateDimensionValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteDimensionValueCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDimensionValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDimensionValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTimeAttendanceRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeAttendanceRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimeAttendanceRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimeAttendanceRecordWSI()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimeAttendanceRecordWSI())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub InsertUpdateEmployeeDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertUpdateEmployeeDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertUpdateEmployeeDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteEmployeeDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteEmployeeDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteEmployeeDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
