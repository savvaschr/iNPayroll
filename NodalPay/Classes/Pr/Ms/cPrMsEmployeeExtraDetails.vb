' This Class has been autogenerated by SC INSOFT LIMITED
' Do NOT adjust as it will be overwritten
' Generation Date : 31/07/2024 16:48:52
'
'
Public Class cPrMsEmployeeExtraDetails
    '
    Inherits cPrMsEmployeeExtraDetailsDBTier
    '
    Private mEmp_Code As String
    Private mEmp_StartDateToPrevServ As Date
    Private mPosCat_Code As String
    Private mPosRnk_Code As String
    Private mEmp_RetirementDate63 As Date
    Private mEmp_RetirementDate65 As Date
    Private mEmp_ComDate400Months As Date
    Private mEmp_ExtraRatePerHour As Double
    Private mEmp_DOfNextRateIncrease As Date
    Private mEmp_IsTop As String
    Private mEmp_ProvidentFund As String
    Private mEmp_PensionFund As String
    Private mEmp_DOfStartPrFund As Date
    Private mEmp_10PercentDecrease As String
    Private mRnk_Code As String
    Public Property Emp_Code() As String
        Get
            Return mEmp_Code
        End Get
        Set(ByVal Value As String)
            mEmp_Code = Value
        End Set
    End Property
    Public Property Emp_StartDateToPrevServ() As Date
        Get
            Return mEmp_StartDateToPrevServ
        End Get
        Set(ByVal Value As Date)
            mEmp_StartDateToPrevServ = Value
        End Set
    End Property
    Public Property PosCat_Code() As String
        Get
            Return mPosCat_Code
        End Get
        Set(ByVal Value As String)
            mPosCat_Code = Value
        End Set
    End Property
    Public Property PosRnk_Code() As String
        Get
            Return mPosRnk_Code
        End Get
        Set(ByVal Value As String)
            mPosRnk_Code = Value
        End Set
    End Property
    Public Property Emp_RetirementDate63() As Date
        Get
            Return mEmp_RetirementDate63
        End Get
        Set(ByVal Value As Date)
            mEmp_RetirementDate63 = Value
        End Set
    End Property
    Public Property Emp_RetirementDate65() As Date
        Get
            Return mEmp_RetirementDate65
        End Get
        Set(ByVal Value As Date)
            mEmp_RetirementDate65 = Value
        End Set
    End Property
    Public Property Emp_ComDate400Months() As Date
        Get
            Return mEmp_ComDate400Months
        End Get
        Set(ByVal Value As Date)
            mEmp_ComDate400Months = Value
        End Set
    End Property
    Public Property Emp_ExtraRatePerHour() As Double
        Get
            Return mEmp_ExtraRatePerHour
        End Get
        Set(ByVal Value As Double)
            mEmp_ExtraRatePerHour = Value
        End Set
    End Property
    Public Property Emp_DOfNextRateIncrease() As Date
        Get
            Return mEmp_DOfNextRateIncrease
        End Get
        Set(ByVal Value As Date)
            mEmp_DOfNextRateIncrease = Value
        End Set
    End Property
    Public Property Emp_IsTop() As String
        Get
            Return mEmp_IsTop
        End Get
        Set(ByVal Value As String)
            mEmp_IsTop = Value
        End Set
    End Property
    Public Property Emp_ProvidentFund() As String
        Get
            Return mEmp_ProvidentFund
        End Get
        Set(ByVal Value As String)
            mEmp_ProvidentFund = Value
        End Set
    End Property
    Public Property Emp_PensionFund() As String
        Get
            Return mEmp_PensionFund
        End Get
        Set(ByVal Value As String)
            mEmp_PensionFund = Value
        End Set
    End Property
    Public Property Emp_DOfStartPrFund() As Date
        Get
            Return mEmp_DOfStartPrFund
        End Get
        Set(ByVal Value As Date)
            mEmp_DOfStartPrFund = Value
        End Set
    End Property
    Public Property Emp_10PercentDecrease() As String
        Get
            Return mEmp_10PercentDecrease
        End Get
        Set(ByVal Value As String)
            mEmp_10PercentDecrease = Value
        End Set
    End Property
    Public Property Rnk_Code() As String
        Get
            Return mRnk_Code
        End Get
        Set(ByVal Value As String)
            mRnk_Code = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tEmp_Code As String)
        If tEmp_Code <> "" Then
            Init(tEmp_Code)
        End If
    End Sub
    Private Sub Init(ByVal tEmp_Code As String)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tEmp_Code)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mEmp_Code = DbNullToString(dr.Item(0))
        mEmp_StartDateToPrevServ = DbNullToDate(dr.Item(1))
        mPosCat_Code = DbNullToString(dr.Item(2))
        mPosRnk_Code = DbNullToString(dr.Item(3))
        mEmp_RetirementDate63 = DbNullToDate(dr.Item(4))
        mEmp_RetirementDate65 = DbNullToDate(dr.Item(5))
        mEmp_ComDate400Months = DbNullToDate(dr.Item(6))
        mEmp_ExtraRatePerHour = DbNullToDouble(dr.Item(7))
        mEmp_DOfNextRateIncrease = DbNullToDate(dr.Item(8))
        mEmp_IsTop = DbNullToString(dr.Item(9))
        mEmp_ProvidentFund = DbNullToString(dr.Item(10))
        mEmp_PensionFund = DbNullToString(dr.Item(11))
        mEmp_DOfStartPrFund = DbNullToDate(dr.Item(12))
        mEmp_10PercentDecrease = DbNullToString(dr.Item(13))
        mRnk_Code = DbNullToString(dr.Item(14))
    End Sub
    Public Shadows Function Delete(ByVal tEmp_Code As String) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tEmp_Code)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tEmp_Code)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
