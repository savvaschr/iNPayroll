' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 20/05/2008 10:39:17
'
'
Public Class cPrTxEmployeeSalary
    '
    Inherits cPrTxEmployeeSalaryDbTier
    '
    Private mId As Integer
    Private mEmp_Code As String
    Private mDate1 As Date
    Private mSalaryValue As Double
    Private mBasic As Double
    Private mEffPayDate As Date
    Private mEffArrearsDate As Date
    Private mCola As Double
    Private mUsr_Id As Integer
    Private mIsCola As String
    Private mEmpSal_Dif As Double
    Private mEmpSal_Rate As Double
    Private mEmpSal_RateSalary As Double
    Public Property Id() As Integer
        Get
            Return mId
        End Get
        Set(ByVal Value As Integer)
            mId = Value
        End Set
    End Property
    Public Property Emp_Code() As String
        Get
            Return mEmp_Code
        End Get
        Set(ByVal Value As String)
            mEmp_Code = Value
        End Set
    End Property
    Public Property Date1() As Date
        Get
            Return mDate1
        End Get
        Set(ByVal Value As Date)
            mDate1 = Value
        End Set
    End Property
    Public Property SalaryValue() As Double
        Get
            Return mSalaryValue
        End Get
        Set(ByVal Value As Double)
            mSalaryValue = Value
        End Set
    End Property
    Public Property Basic() As Double
        Get
            Return mBasic
        End Get
        Set(ByVal Value As Double)
            mBasic = Value
        End Set
    End Property
    Public Property EffPayDate() As Date
        Get
            Return mEffPayDate
        End Get
        Set(ByVal Value As Date)
            mEffPayDate = Value
        End Set
    End Property
    Public Property EffArrearsDate() As Date
        Get
            Return mEffArrearsDate
        End Get
        Set(ByVal Value As Date)
            mEffArrearsDate = Value
        End Set
    End Property
    Public Property Cola() As Double
        Get
            Return mCola
        End Get
        Set(ByVal Value As Double)
            mCola = Value
        End Set
    End Property
    Public Property Usr_Id() As Integer
        Get
            Return mUsr_Id
        End Get
        Set(ByVal Value As Integer)
            mUsr_Id = Value
        End Set
    End Property
    Public Property IsCola() As String
        Get
            Return mIsCola
        End Get
        Set(ByVal Value As String)
            mIsCola = Value
        End Set
    End Property
    Public Property EmpSal_Dif() As Double
        Get
            Return mEmpSal_Dif
        End Get
        Set(ByVal Value As Double)
            mEmpSal_Dif = Value
        End Set
    End Property
    Public Property myRate() As Double
        Get
            Return mEmpSal_Rate
        End Get
        Set(ByVal Value As Double)
            mEmpSal_Rate = Value
        End Set
    End Property
    Public Property myRateSalary() As Double
        Get
            Return mEmpSal_RateSalary
        End Get
        Set(ByVal Value As Double)
            mEmpSal_RateSalary = Value
        End Set
    End Property
    Public Sub New()

    End Sub
    Public Sub New(tEmpCode As String, tSalaryValue As Double, teffectiveDate As Date)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByValueDate(tEmpCode, tSalaryValue, teffectiveDate)

            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try

    End Sub
    Public Sub New(tEmpCode As String, teffectiveDate As Date)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByValueDateNotSalary(tEmpCode, teffectiveDate)

            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try

    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tId As Integer)
        If tId <> 0 Then
            Init(tId)
        End If
    End Sub
    Private Sub Init(ByVal tId As Integer)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tId)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mId = DbNullToInt(dr.item(0))
        mEmp_Code = DbNullToString(dr.item(1))
        mDate1 = DbNullToDate(dr.item(2))
        mSalaryValue = DbNullToDouble(dr.item(3))
        mBasic = DbNullToDouble(dr.item(4))
        mEffPayDate = DbNullToDate(dr.item(5))
        mEffArrearsDate = DbNullToDate(dr.item(6))
        mCola = DbNullToDouble(dr.item(7))
        mUsr_Id = DbNullToInt(dr.item(8))
        mIsCola = DbNullToString(dr.item(9))
        mEmpSal_Dif = DbNullToDouble(dr.Item(10))
        mEmpSal_Rate = DbNullToDouble(dr.Item(11))
        mEmpSal_RateSalary = DbNullToDouble(dr.Item(12))
    End Sub
    Public Shadows Function Delete(ByVal tId As Integer) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tId)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tId)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                Return MyBase.Delete(tId)
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
End Class
