' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:45
'
'
Public Class cAaSsPlaceHolder
'
Inherits cAaSsPlaceHolderDbTier
'
Private mdim_Key As Integer
Private mdim_Value As String
Public Property dim_Key() As Integer
    Get
       Return mdim_Key
    End Get
    Set(ByVal Value As Integer)
       mdim_Key = Value
    End Set
End Property
Public Property dim_Value() As String
    Get
       Return mdim_Value
    End Get
    Set(ByVal Value As String)
       mdim_Value = Value
    End Set
End Property
Public Sub New()
End Sub
Public Sub New(ByVal Dr as DataRow)
    If Not Dr Is Nothing Then
         LoadDataRow(Dr)
    End If
End Sub
Public Sub New(ByVal tdim_Key As Integer)
     IF tdim_Key <> 0 Then
        Init(tdim_Key)
      End If
End Sub
Private Sub Init(ByVal tdim_Key As Integer)
   Try
        Dim ds as DataSet
        ds = MyBase.GetByPK(tdim_Key)
        If CheckDataSet(ds) Then
           LoadDataRow(ds.Tables(0).Rows(0))
        End If
        Catch ex As System.Exception
   End Try
End Sub
Private Sub LoadDataRow(ByVal dr As DataRow)
     mdim_Key = DbNullToInt(dr.item(0))
     mdim_Value = DbNullToString(dr.item(1))
End Sub
Public Shadows Function Delete(ByVal tdim_Key As Integer) As Boolean
Try
  Dim Counter As Integer
  Dim TableCount As Integer
  Dim RecordCount As Integer
  Dim TransStr As String = ""
  Dim ds As DataSet
  ds = MyBase.CheckDeleteRecords(tdim_Key)
  If CheckDataSet(ds) Then
     For Counter = 0 To ds.Tables.Count - 1
        TableCount = TableCount + 1
        RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
        TransStr = TransStr  &  vbCrLf & "Table " & TableCount & "  Records " & RecordCount
     Next Counter
     If RecordCount = 0 Then
         Return MyBase.Delete(tdim_Key)
     Else
        MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
     End If
  Else
     MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
     Return False
  End If
Catch ex As System.Exception
End Try
End Function
'
Public Shadows Function Save() As Boolean
    Try
        Return MyBase.Save(Me)
    Catch ex As System.Exception
        Return False
    End Try
End Function
End Class
