' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:48
'
'
Public Class cPrAnEmployeeAnalysis5
    '
    Inherits cPrAnEmployeeAnalysis5DbTier
    '
    Private mEmpAn5_Code As String
    Private mEmpAn5_DescriptionL As String
    Private mEmpAn5_DescriptionS As String
    Private mEmpAn5_IsActive As String
    Private mEmpAn5_GLAnal1 As String
    Private mEmpAn5_GLAnal2 As String
    Private mEmpAn5_CreationDate As Date
    Private mEmpAn5_AmendDate As Date
    Public Property EmpAn5_Code() As String
        Get
            Return mEmpAn5_Code
        End Get
        Set(ByVal Value As String)
            mEmpAn5_Code = Value
        End Set
    End Property
    Public Property EmpAn5_DescriptionL() As String
        Get
            Return mEmpAn5_DescriptionL
        End Get
        Set(ByVal Value As String)
            mEmpAn5_DescriptionL = Value
        End Set
    End Property
    Public Property EmpAn5_DescriptionS() As String
        Get
            Return mEmpAn5_DescriptionS
        End Get
        Set(ByVal Value As String)
            mEmpAn5_DescriptionS = Value
        End Set
    End Property
    Public Property EmpAn5_IsActive() As String
        Get
            Return mEmpAn5_IsActive
        End Get
        Set(ByVal Value As String)
            mEmpAn5_IsActive = Value
        End Set
    End Property
    Public Property GLAnal1() As String
        Get
            Return mEmpAn5_GLAnal1
        End Get
        Set(ByVal Value As String)
            mEmpAn5_GLAnal1 = Value
        End Set
    End Property
    Public Property GLAnal2() As String
        Get
            Return mEmpAn5_GLAnal2
        End Get
        Set(ByVal Value As String)
            mEmpAn5_GLAnal2 = Value
        End Set
    End Property
    Public Property EmpAn5_CreationDate() As Date
        Get
            Return mEmpAn5_CreationDate
        End Get
        Set(ByVal Value As Date)
            mEmpAn5_CreationDate = Value
        End Set
    End Property
    Public Property EmpAn5_AmendDate() As Date
        Get
            Return mEmpAn5_AmendDate
        End Get
        Set(ByVal Value As Date)
            mEmpAn5_AmendDate = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tEmpAn5_Code As String)
        If tEmpAn5_Code <> "" Then
            Init(tEmpAn5_Code)
        End If
    End Sub
    Private Sub Init(ByVal tEmpAn5_Code As String)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tEmpAn5_Code)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mEmpAn5_Code = DbNullToString(dr.Item(0))
        mEmpAn5_DescriptionL = DbNullToString(dr.Item(1))
        mEmpAn5_DescriptionS = DbNullToString(dr.Item(2))
        mEmpAn5_IsActive = DbNullToString(dr.Item(3))
        mEmpAn5_GLAnal1 = DbNullToString(dr.Item(4))
        mEmpAn5_GLAnal2 = DbNullToString(dr.Item(5))
        mEmpAn5_CreationDate = DbNullToDate(dr.Item(6))
        mEmpAn5_AmendDate = DbNullToDate(dr.Item(7))
    End Sub
    Public Shadows Function Delete(ByVal tEmpAn5_Code As String) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tEmpAn5_Code)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tEmpAn5_Code)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
    Public Overrides Function ToString() As String
        Return Me.EmpAn5_Code & " - " & Me.EmpAn5_DescriptionL
    End Function
End Class
