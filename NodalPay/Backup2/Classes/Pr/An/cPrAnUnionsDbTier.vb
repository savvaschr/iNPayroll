' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:49
'
'
Public Class cPrAnUnionsDbTier
'
Inherits cDataTier
'
Protected Function GetByPK(ByVal tCode As String) as DataSet
Dim Str as String
Str = " SELECT" & _
        " Uni_Code," & _
        " Uni_DescriptionL," & _
        " Uni_DescriptionS," & _
        " Uni_IsActive," & _
        " Uni_SubscriptionType," & _
        " Uni_GLAnal1," & _
        " Uni_GLAnal2," & _
        " Uni_SubscriptionValue," & _
        " Uni_CreationDate," & _
        " Uni_Deduction1," & _
        " Uni_Deduction2," & _
        " Uni_AmendDate," & _
        " Uni_WelfareRate," & _
        " Uni_WeeklyMF," & _
        " Uni_MonthlyMF," & _
        " Uni_WeeklySubLimit," & _
        " Uni_MonthlySubLimit" & _
    "  FROM PrAnUnions" & _
    "  WHERE Uni_Code = '" & tCode & "'"
Return MyBase.GetData(Str)
End Function
Protected Function Save(ByVal _cPrAnUnions AS cPrAnUnions) As Boolean
Dim SpParams As New ArrayList
Dim SpNames As New ArrayList
Dim Flag As Boolean = False
With _cPrAnUnions
   SpParams.Add(.Code)                                              '(0)
   SpNames.Add("Uni_Code")                                          '(0)
   SpParams.Add(.DescriptionL)                                      '(1)
   SpNames.Add("Uni_DescriptionL")                                  '(1)
   SpParams.Add(.DescriptionS)                                      '(2)
   SpNames.Add("Uni_DescriptionS")                                  '(2)
   SpParams.Add(.IsActive)                                          '(3)
   SpNames.Add("Uni_IsActive")                                      '(3)
   SpParams.Add(.Uni_SubscriptionType)                              '(4)
   SpNames.Add("Uni_SubscriptionType")                              '(4)
   SpParams.Add(.GLAnal1)                                           '(5)
   SpNames.Add("Uni_GLAnal1")                                       '(5)
   SpParams.Add(.GLAnal2)                                           '(6)
   SpNames.Add("Uni_GLAnal2")                                       '(6)
   SpParams.Add(.Uni_SubscriptionValue)                             '(7)
   SpNames.Add("Uni_SubscriptionValue")                             '(7)
   SpParams.Add(.CreationDate)                                      '(8)
   SpNames.Add("Uni_CreationDate")                                  '(8)
   SpParams.Add(.Uni_Deduction1)                                    '(9)
   SpNames.Add("Uni_Deduction1")                                    '(9)
   SpParams.Add(.Uni_Deduction2)                                    '(10)
   SpNames.Add("Uni_Deduction2")                                    '(10)
   SpParams.Add(.AmendDate)                                         '(11)
   SpNames.Add("Uni_AmendDate")                                     '(11)
   SpParams.Add(.WelfareRate)                                       '(12)
   SpNames.Add("Uni_WelfareRate")                                   '(12)
   SpParams.Add(.WeeklyMF)                                          '(13)
   SpNames.Add("Uni_WeeklyMF")                                      '(13)
   SpParams.Add(.MonthlyMF)                                         '(14)
   SpNames.Add("Uni_MonthlyMF")                                     '(14)
   SpParams.Add(.WeeklySubLimit)                                    '(15)
   SpNames.Add("Uni_WeeklySubLimit")                                '(15)
   SpParams.Add(.MonthlySubLimit)                                   '(16)
   SpNames.Add("Uni_MonthlySubLimit")                               '(16)
End With
If Me.StoredProcedure("AG_PrAnUnions_Save_Update",SpParams,SpNames) Then
  Return True
Else
  Return False
End if
End Function
Protected Function Delete(ByVal tCode As String) as Boolean
Dim Str as String
Dim Flag As Boolean = True
Dim Exx As New System.Exception
   Try
         BeginTransaction()
         Str = " DELETE FROM PrAnUnions" & _
            " WHERE Uni_Code = '" & tCode & "'"
         If MyBase.ExecuteNonQuery(Str) = -1 Then
                 Throw Exx
         End If
         CommitTransaction()
   Catch ex as Exception
            Rollback()
            Utils.ShowException(ex)
            Flag = False
   End Try
Return Flag
End Function
Protected Function CheckDeleteRecords(ByVal tCode As String) as DataSet
Dim Str as String
Str = " " & _
"SELECT COUNT(Uni_Code) " & _
" FROM PrMsEmployees" & _
" WHERE Uni_Code = '" & tCode & "'" & _ 
" " & _
" "
Return GetData(Str)
End Function
End Class
