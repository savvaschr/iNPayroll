' This Class has been autogenerated by Nodalsoft
' Do NOT adjust as it will be overwritten
' Generation Date : 13/02/2008 09:42:46
'
'
Public Class cAdMsCurrency
    '
    Inherits cAdMsCurrencyDbTier
    '
    Private mAlphaCode As String
    Private mNumericCode As String
    Private mDescription As String
    Private mSymbol As String
    Private mIsActive As String
    Public Property AlphaCode() As String
        Get
            Return mAlphaCode
        End Get
        Set(ByVal Value As String)
            mAlphaCode = Value
        End Set
    End Property
    Public Property NumericCode() As String
        Get
            Return mNumericCode
        End Get
        Set(ByVal Value As String)
            mNumericCode = Value
        End Set
    End Property
    Public Property Description() As String
        Get
            Return mDescription
        End Get
        Set(ByVal Value As String)
            mDescription = Value
        End Set
    End Property
    Public Property Symbol() As String
        Get
            Return mSymbol
        End Get
        Set(ByVal Value As String)
            mSymbol = Value
        End Set
    End Property
    Public Property IsActive() As String
        Get
            Return mIsActive
        End Get
        Set(ByVal Value As String)
            mIsActive = Value
        End Set
    End Property
    Public Sub New()
    End Sub
    Public Sub New(ByVal Dr As DataRow)
        If Not Dr Is Nothing Then
            LoadDataRow(Dr)
        End If
    End Sub
    Public Sub New(ByVal tAlphaCode As String)
        If tAlphaCode <> "" Then
            Init(tAlphaCode)
        End If
    End Sub
    Private Sub Init(ByVal tAlphaCode As String)
        Try
            Dim ds As DataSet
            ds = MyBase.GetByPK(tAlphaCode)
            If CheckDataSet(ds) Then
                LoadDataRow(ds.Tables(0).Rows(0))
            End If
        Catch ex As System.Exception
        End Try
    End Sub
    Private Sub LoadDataRow(ByVal dr As DataRow)
        mAlphaCode = DbNullToString(dr.Item(0))
        mNumericCode = DbNullToString(dr.Item(1))
        mDescription = DbNullToString(dr.Item(2))
        mSymbol = DbNullToString(dr.Item(3))
        mIsActive = DbNullToString(dr.Item(4))
    End Sub
    Public Shadows Function Delete(ByVal tAlphaCode As String) As Boolean
        Try
            Dim Counter As Integer
            Dim TableCount As Integer
            Dim RecordCount As Integer
            Dim TransStr As String = ""
            Dim ds As DataSet
            ds = MyBase.CheckDeleteRecords(tAlphaCode)
            If CheckDataSet(ds) Then
                For Counter = 0 To ds.Tables.Count - 1
                    TableCount = TableCount + 1
                    RecordCount = RecordCount + DbNullToInt(ds.Tables(Counter).Rows(0).Item(0))
                    TransStr = TransStr & vbCrLf & "Table " & TableCount & "  Records " & RecordCount
                Next Counter
                If RecordCount = 0 Then
                    Return MyBase.Delete(tAlphaCode)
                Else
                    MsgBox("Transactions Exist For This item - Can not Delete" & TransStr, MsgBoxStyle.Critical)
                End If
            Else
                MsgBox("Failed to confirm that no records exist for this item - Can not Delete")
                Return False
            End If
        Catch ex As System.Exception
        End Try
    End Function
    '
    Public Shadows Function Save() As Boolean
        Try
            Return MyBase.Save(Me)
        Catch ex As System.Exception
            Return False
        End Try
    End Function
    Public Overrides Function ToString() As String
        Return Me.AlphaCode
    End Function
   
End Class
